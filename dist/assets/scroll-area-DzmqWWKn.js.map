{"version":3,"file":"scroll-area-DzmqWWKn.js","sources":["../../node_modules/@radix-ui/react-scroll-area/dist/index.mjs","../../src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\";\n\n// packages/react/scroll-area/src/ScrollArea.tsx\nimport * as React2 from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { clamp } from \"@radix-ui/number\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\n\n// packages/react/scroll-area/src/useStateMachine.ts\nimport * as React from \"react\";\nfunction useStateMachine(initialState, machine) {\n  return React.useReducer((state, event) => {\n    const nextState = machine[state][event];\n    return nextState ?? state;\n  }, initialState);\n}\n\n// packages/react/scroll-area/src/ScrollArea.tsx\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar SCROLL_AREA_NAME = \"ScrollArea\";\nvar [createScrollAreaContext, createScrollAreaScope] = createContextScope(SCROLL_AREA_NAME);\nvar [ScrollAreaProvider, useScrollAreaContext] = createScrollAreaContext(SCROLL_AREA_NAME);\nvar ScrollArea = React2.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeScrollArea,\n      type = \"hover\",\n      dir,\n      scrollHideDelay = 600,\n      ...scrollAreaProps\n    } = props;\n    const [scrollArea, setScrollArea] = React2.useState(null);\n    const [viewport, setViewport] = React2.useState(null);\n    const [content, setContent] = React2.useState(null);\n    const [scrollbarX, setScrollbarX] = React2.useState(null);\n    const [scrollbarY, setScrollbarY] = React2.useState(null);\n    const [cornerWidth, setCornerWidth] = React2.useState(0);\n    const [cornerHeight, setCornerHeight] = React2.useState(0);\n    const [scrollbarXEnabled, setScrollbarXEnabled] = React2.useState(false);\n    const [scrollbarYEnabled, setScrollbarYEnabled] = React2.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setScrollArea(node));\n    const direction = useDirection(dir);\n    return /* @__PURE__ */ jsx(\n      ScrollAreaProvider,\n      {\n        scope: __scopeScrollArea,\n        type,\n        dir: direction,\n        scrollHideDelay,\n        scrollArea,\n        viewport,\n        onViewportChange: setViewport,\n        content,\n        onContentChange: setContent,\n        scrollbarX,\n        onScrollbarXChange: setScrollbarX,\n        scrollbarXEnabled,\n        onScrollbarXEnabledChange: setScrollbarXEnabled,\n        scrollbarY,\n        onScrollbarYChange: setScrollbarY,\n        scrollbarYEnabled,\n        onScrollbarYEnabledChange: setScrollbarYEnabled,\n        onCornerWidthChange: setCornerWidth,\n        onCornerHeightChange: setCornerHeight,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            dir: direction,\n            ...scrollAreaProps,\n            ref: composedRefs,\n            style: {\n              position: \"relative\",\n              // Pass corner sizes as CSS vars to reduce re-renders of context consumers\n              [\"--radix-scroll-area-corner-width\"]: cornerWidth + \"px\",\n              [\"--radix-scroll-area-corner-height\"]: cornerHeight + \"px\",\n              ...props.style\n            }\n          }\n        )\n      }\n    );\n  }\n);\nScrollArea.displayName = SCROLL_AREA_NAME;\nvar VIEWPORT_NAME = \"ScrollAreaViewport\";\nvar ScrollAreaViewport = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeScrollArea, children, asChild, nonce, ...viewportProps } = props;\n    const context = useScrollAreaContext(VIEWPORT_NAME, __scopeScrollArea);\n    const ref = React2.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onViewportChange);\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(\n        \"style\",\n        {\n          dangerouslySetInnerHTML: {\n            __html: `\n[data-radix-scroll-area-viewport] {\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n  -webkit-overflow-scrolling: touch;\n}\n[data-radix-scroll-area-viewport]::-webkit-scrollbar {\n  display: none;\n}\n:where([data-radix-scroll-area-viewport]) {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n}\n:where([data-radix-scroll-area-content]) {\n  flex-grow: 1;\n}\n`\n          },\n          nonce\n        }\n      ),\n      /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          \"data-radix-scroll-area-viewport\": \"\",\n          ...viewportProps,\n          asChild,\n          ref: composedRefs,\n          style: {\n            /**\n             * We don't support `visible` because the intention is to have at least one scrollbar\n             * if this component is used and `visible` will behave like `auto` in that case\n             * https://developer.mozilla.org/en-US/docs/Web/CSS/overflow#description\n             *\n             * We don't handle `auto` because the intention is for the native implementation\n             * to be hidden if using this component. We just want to ensure the node is scrollable\n             * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n             * the browser from having to work out whether to render native scrollbars or not,\n             * we tell it to with the intention of hiding them in CSS.\n             */\n            overflowX: context.scrollbarXEnabled ? \"scroll\" : \"hidden\",\n            overflowY: context.scrollbarYEnabled ? \"scroll\" : \"hidden\",\n            ...props.style\n          },\n          children: getSubtree({ asChild, children }, (children2) => /* @__PURE__ */ jsx(\n            \"div\",\n            {\n              \"data-radix-scroll-area-content\": \"\",\n              ref: context.onContentChange,\n              style: { minWidth: context.scrollbarXEnabled ? \"fit-content\" : void 0 },\n              children: children2\n            }\n          ))\n        }\n      )\n    ] });\n  }\n);\nScrollAreaViewport.displayName = VIEWPORT_NAME;\nvar SCROLLBAR_NAME = \"ScrollAreaScrollbar\";\nvar ScrollAreaScrollbar = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;\n    const isHorizontal = props.orientation === \"horizontal\";\n    React2.useEffect(() => {\n      isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n      return () => {\n        isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n      };\n    }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n    return context.type === \"hover\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarHover, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"scroll\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarScroll, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"auto\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarAuto, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"always\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarVisible, { ...scrollbarProps, ref: forwardedRef }) : null;\n  }\n);\nScrollAreaScrollbar.displayName = SCROLLBAR_NAME;\nvar ScrollAreaScrollbarHover = React2.forwardRef((props, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [visible, setVisible] = React2.useState(false);\n  React2.useEffect(() => {\n    const scrollArea = context.scrollArea;\n    let hideTimer = 0;\n    if (scrollArea) {\n      const handlePointerEnter = () => {\n        window.clearTimeout(hideTimer);\n        setVisible(true);\n      };\n      const handlePointerLeave = () => {\n        hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n      };\n      scrollArea.addEventListener(\"pointerenter\", handlePointerEnter);\n      scrollArea.addEventListener(\"pointerleave\", handlePointerLeave);\n      return () => {\n        window.clearTimeout(hideTimer);\n        scrollArea.removeEventListener(\"pointerenter\", handlePointerEnter);\n        scrollArea.removeEventListener(\"pointerleave\", handlePointerLeave);\n      };\n    }\n  }, [context.scrollArea, context.scrollHideDelay]);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || visible, children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarAuto,\n    {\n      \"data-state\": visible ? \"visible\" : \"hidden\",\n      ...scrollbarProps,\n      ref: forwardedRef\n    }\n  ) });\n});\nvar ScrollAreaScrollbarScroll = React2.forwardRef((props, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const isHorizontal = props.orientation === \"horizontal\";\n  const debounceScrollEnd = useDebounceCallback(() => send(\"SCROLL_END\"), 100);\n  const [state, send] = useStateMachine(\"hidden\", {\n    hidden: {\n      SCROLL: \"scrolling\"\n    },\n    scrolling: {\n      SCROLL_END: \"idle\",\n      POINTER_ENTER: \"interacting\"\n    },\n    interacting: {\n      SCROLL: \"interacting\",\n      POINTER_LEAVE: \"idle\"\n    },\n    idle: {\n      HIDE: \"hidden\",\n      SCROLL: \"scrolling\",\n      POINTER_ENTER: \"interacting\"\n    }\n  });\n  React2.useEffect(() => {\n    if (state === \"idle\") {\n      const hideTimer = window.setTimeout(() => send(\"HIDE\"), context.scrollHideDelay);\n      return () => window.clearTimeout(hideTimer);\n    }\n  }, [state, context.scrollHideDelay, send]);\n  React2.useEffect(() => {\n    const viewport = context.viewport;\n    const scrollDirection = isHorizontal ? \"scrollLeft\" : \"scrollTop\";\n    if (viewport) {\n      let prevScrollPos = viewport[scrollDirection];\n      const handleScroll = () => {\n        const scrollPos = viewport[scrollDirection];\n        const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;\n        if (hasScrollInDirectionChanged) {\n          send(\"SCROLL\");\n          debounceScrollEnd();\n        }\n        prevScrollPos = scrollPos;\n      };\n      viewport.addEventListener(\"scroll\", handleScroll);\n      return () => viewport.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [context.viewport, isHorizontal, send, debounceScrollEnd]);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || state !== \"hidden\", children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarVisible,\n    {\n      \"data-state\": state === \"hidden\" ? \"hidden\" : \"visible\",\n      ...scrollbarProps,\n      ref: forwardedRef,\n      onPointerEnter: composeEventHandlers(props.onPointerEnter, () => send(\"POINTER_ENTER\")),\n      onPointerLeave: composeEventHandlers(props.onPointerLeave, () => send(\"POINTER_LEAVE\"))\n    }\n  ) });\n});\nvar ScrollAreaScrollbarAuto = React2.forwardRef((props, forwardedRef) => {\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const { forceMount, ...scrollbarProps } = props;\n  const [visible, setVisible] = React2.useState(false);\n  const isHorizontal = props.orientation === \"horizontal\";\n  const handleResize = useDebounceCallback(() => {\n    if (context.viewport) {\n      const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;\n      const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;\n      setVisible(isHorizontal ? isOverflowX : isOverflowY);\n    }\n  }, 10);\n  useResizeObserver(context.viewport, handleResize);\n  useResizeObserver(context.content, handleResize);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || visible, children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarVisible,\n    {\n      \"data-state\": visible ? \"visible\" : \"hidden\",\n      ...scrollbarProps,\n      ref: forwardedRef\n    }\n  ) });\n});\nvar ScrollAreaScrollbarVisible = React2.forwardRef((props, forwardedRef) => {\n  const { orientation = \"vertical\", ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const thumbRef = React2.useRef(null);\n  const pointerOffsetRef = React2.useRef(0);\n  const [sizes, setSizes] = React2.useState({\n    content: 0,\n    viewport: 0,\n    scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 }\n  });\n  const thumbRatio = getThumbRatio(sizes.viewport, sizes.content);\n  const commonProps = {\n    ...scrollbarProps,\n    sizes,\n    onSizesChange: setSizes,\n    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),\n    onThumbChange: (thumb) => thumbRef.current = thumb,\n    onThumbPointerUp: () => pointerOffsetRef.current = 0,\n    onThumbPointerDown: (pointerPos) => pointerOffsetRef.current = pointerPos\n  };\n  function getScrollPosition(pointerPos, dir) {\n    return getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);\n  }\n  if (orientation === \"horizontal\") {\n    return /* @__PURE__ */ jsx(\n      ScrollAreaScrollbarX,\n      {\n        ...commonProps,\n        ref: forwardedRef,\n        onThumbPositionChange: () => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollLeft;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes, context.dir);\n            thumbRef.current.style.transform = `translate3d(${offset}px, 0, 0)`;\n          }\n        },\n        onWheelScroll: (scrollPos) => {\n          if (context.viewport) context.viewport.scrollLeft = scrollPos;\n        },\n        onDragScroll: (pointerPos) => {\n          if (context.viewport) {\n            context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);\n          }\n        }\n      }\n    );\n  }\n  if (orientation === \"vertical\") {\n    return /* @__PURE__ */ jsx(\n      ScrollAreaScrollbarY,\n      {\n        ...commonProps,\n        ref: forwardedRef,\n        onThumbPositionChange: () => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollTop;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes);\n            thumbRef.current.style.transform = `translate3d(0, ${offset}px, 0)`;\n          }\n        },\n        onWheelScroll: (scrollPos) => {\n          if (context.viewport) context.viewport.scrollTop = scrollPos;\n        },\n        onDragScroll: (pointerPos) => {\n          if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);\n        }\n      }\n    );\n  }\n  return null;\n});\nvar ScrollAreaScrollbarX = React2.forwardRef((props, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React2.useState();\n  const ref = React2.useRef(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarXChange);\n  React2.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n  return /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarImpl,\n    {\n      \"data-orientation\": \"horizontal\",\n      ...scrollbarProps,\n      ref: composeRefs,\n      sizes,\n      style: {\n        bottom: 0,\n        left: context.dir === \"rtl\" ? \"var(--radix-scroll-area-corner-width)\" : 0,\n        right: context.dir === \"ltr\" ? \"var(--radix-scroll-area-corner-width)\" : 0,\n        [\"--radix-scroll-area-thumb-width\"]: getThumbSize(sizes) + \"px\",\n        ...props.style\n      },\n      onThumbPointerDown: (pointerPos) => props.onThumbPointerDown(pointerPos.x),\n      onDragScroll: (pointerPos) => props.onDragScroll(pointerPos.x),\n      onWheelScroll: (event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollLeft + event.deltaX;\n          props.onWheelScroll(scrollPos);\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      },\n      onResize: () => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollWidth,\n            viewport: context.viewport.offsetWidth,\n            scrollbar: {\n              size: ref.current.clientWidth,\n              paddingStart: toInt(computedStyle.paddingLeft),\n              paddingEnd: toInt(computedStyle.paddingRight)\n            }\n          });\n        }\n      }\n    }\n  );\n});\nvar ScrollAreaScrollbarY = React2.forwardRef((props, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React2.useState();\n  const ref = React2.useRef(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarYChange);\n  React2.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n  return /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarImpl,\n    {\n      \"data-orientation\": \"vertical\",\n      ...scrollbarProps,\n      ref: composeRefs,\n      sizes,\n      style: {\n        top: 0,\n        right: context.dir === \"ltr\" ? 0 : void 0,\n        left: context.dir === \"rtl\" ? 0 : void 0,\n        bottom: \"var(--radix-scroll-area-corner-height)\",\n        [\"--radix-scroll-area-thumb-height\"]: getThumbSize(sizes) + \"px\",\n        ...props.style\n      },\n      onThumbPointerDown: (pointerPos) => props.onThumbPointerDown(pointerPos.y),\n      onDragScroll: (pointerPos) => props.onDragScroll(pointerPos.y),\n      onWheelScroll: (event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollTop + event.deltaY;\n          props.onWheelScroll(scrollPos);\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      },\n      onResize: () => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollHeight,\n            viewport: context.viewport.offsetHeight,\n            scrollbar: {\n              size: ref.current.clientHeight,\n              paddingStart: toInt(computedStyle.paddingTop),\n              paddingEnd: toInt(computedStyle.paddingBottom)\n            }\n          });\n        }\n      }\n    }\n  );\n});\nvar [ScrollbarProvider, useScrollbarContext] = createScrollAreaContext(SCROLLBAR_NAME);\nvar ScrollAreaScrollbarImpl = React2.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeScrollArea,\n    sizes,\n    hasThumb,\n    onThumbChange,\n    onThumbPointerUp,\n    onThumbPointerDown,\n    onThumbPositionChange,\n    onDragScroll,\n    onWheelScroll,\n    onResize,\n    ...scrollbarProps\n  } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, __scopeScrollArea);\n  const [scrollbar, setScrollbar] = React2.useState(null);\n  const composeRefs = useComposedRefs(forwardedRef, (node) => setScrollbar(node));\n  const rectRef = React2.useRef(null);\n  const prevWebkitUserSelectRef = React2.useRef(\"\");\n  const viewport = context.viewport;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const handleWheelScroll = useCallbackRef(onWheelScroll);\n  const handleThumbPositionChange = useCallbackRef(onThumbPositionChange);\n  const handleResize = useDebounceCallback(onResize, 10);\n  function handleDragScroll(event) {\n    if (rectRef.current) {\n      const x = event.clientX - rectRef.current.left;\n      const y = event.clientY - rectRef.current.top;\n      onDragScroll({ x, y });\n    }\n  }\n  React2.useEffect(() => {\n    const handleWheel = (event) => {\n      const element = event.target;\n      const isScrollbarWheel = scrollbar?.contains(element);\n      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n    };\n    document.addEventListener(\"wheel\", handleWheel, { passive: false });\n    return () => document.removeEventListener(\"wheel\", handleWheel, { passive: false });\n  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n  React2.useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n  useResizeObserver(scrollbar, handleResize);\n  useResizeObserver(context.content, handleResize);\n  return /* @__PURE__ */ jsx(\n    ScrollbarProvider,\n    {\n      scope: __scopeScrollArea,\n      scrollbar,\n      hasThumb,\n      onThumbChange: useCallbackRef(onThumbChange),\n      onThumbPointerUp: useCallbackRef(onThumbPointerUp),\n      onThumbPositionChange: handleThumbPositionChange,\n      onThumbPointerDown: useCallbackRef(onThumbPointerDown),\n      children: /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          ...scrollbarProps,\n          ref: composeRefs,\n          style: { position: \"absolute\", ...scrollbarProps.style },\n          onPointerDown: composeEventHandlers(props.onPointerDown, (event) => {\n            const mainPointer = 0;\n            if (event.button === mainPointer) {\n              const element = event.target;\n              element.setPointerCapture(event.pointerId);\n              rectRef.current = scrollbar.getBoundingClientRect();\n              prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n              document.body.style.webkitUserSelect = \"none\";\n              if (context.viewport) context.viewport.style.scrollBehavior = \"auto\";\n              handleDragScroll(event);\n            }\n          }),\n          onPointerMove: composeEventHandlers(props.onPointerMove, handleDragScroll),\n          onPointerUp: composeEventHandlers(props.onPointerUp, (event) => {\n            const element = event.target;\n            if (element.hasPointerCapture(event.pointerId)) {\n              element.releasePointerCapture(event.pointerId);\n            }\n            document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n            if (context.viewport) context.viewport.style.scrollBehavior = \"\";\n            rectRef.current = null;\n          })\n        }\n      )\n    }\n  );\n});\nvar THUMB_NAME = \"ScrollAreaThumb\";\nvar ScrollAreaThumb = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...thumbProps } = props;\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, props.__scopeScrollArea);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || scrollbarContext.hasThumb, children: /* @__PURE__ */ jsx(ScrollAreaThumbImpl, { ref: forwardedRef, ...thumbProps }) });\n  }\n);\nvar ScrollAreaThumbImpl = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeScrollArea, style, ...thumbProps } = props;\n    const scrollAreaContext = useScrollAreaContext(THUMB_NAME, __scopeScrollArea);\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, __scopeScrollArea);\n    const { onThumbPositionChange } = scrollbarContext;\n    const composedRef = useComposedRefs(\n      forwardedRef,\n      (node) => scrollbarContext.onThumbChange(node)\n    );\n    const removeUnlinkedScrollListenerRef = React2.useRef();\n    const debounceScrollEnd = useDebounceCallback(() => {\n      if (removeUnlinkedScrollListenerRef.current) {\n        removeUnlinkedScrollListenerRef.current();\n        removeUnlinkedScrollListenerRef.current = void 0;\n      }\n    }, 100);\n    React2.useEffect(() => {\n      const viewport = scrollAreaContext.viewport;\n      if (viewport) {\n        const handleScroll = () => {\n          debounceScrollEnd();\n          if (!removeUnlinkedScrollListenerRef.current) {\n            const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n            removeUnlinkedScrollListenerRef.current = listener;\n            onThumbPositionChange();\n          }\n        };\n        onThumbPositionChange();\n        viewport.addEventListener(\"scroll\", handleScroll);\n        return () => viewport.removeEventListener(\"scroll\", handleScroll);\n      }\n    }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n    return /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": scrollbarContext.hasThumb ? \"visible\" : \"hidden\",\n        ...thumbProps,\n        ref: composedRef,\n        style: {\n          width: \"var(--radix-scroll-area-thumb-width)\",\n          height: \"var(--radix-scroll-area-thumb-height)\",\n          ...style\n        },\n        onPointerDownCapture: composeEventHandlers(props.onPointerDownCapture, (event) => {\n          const thumb = event.target;\n          const thumbRect = thumb.getBoundingClientRect();\n          const x = event.clientX - thumbRect.left;\n          const y = event.clientY - thumbRect.top;\n          scrollbarContext.onThumbPointerDown({ x, y });\n        }),\n        onPointerUp: composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)\n      }\n    );\n  }\n);\nScrollAreaThumb.displayName = THUMB_NAME;\nvar CORNER_NAME = \"ScrollAreaCorner\";\nvar ScrollAreaCorner = React2.forwardRef(\n  (props, forwardedRef) => {\n    const context = useScrollAreaContext(CORNER_NAME, props.__scopeScrollArea);\n    const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);\n    const hasCorner = context.type !== \"scroll\" && hasBothScrollbarsVisible;\n    return hasCorner ? /* @__PURE__ */ jsx(ScrollAreaCornerImpl, { ...props, ref: forwardedRef }) : null;\n  }\n);\nScrollAreaCorner.displayName = CORNER_NAME;\nvar ScrollAreaCornerImpl = React2.forwardRef((props, forwardedRef) => {\n  const { __scopeScrollArea, ...cornerProps } = props;\n  const context = useScrollAreaContext(CORNER_NAME, __scopeScrollArea);\n  const [width, setWidth] = React2.useState(0);\n  const [height, setHeight] = React2.useState(0);\n  const hasSize = Boolean(width && height);\n  useResizeObserver(context.scrollbarX, () => {\n    const height2 = context.scrollbarX?.offsetHeight || 0;\n    context.onCornerHeightChange(height2);\n    setHeight(height2);\n  });\n  useResizeObserver(context.scrollbarY, () => {\n    const width2 = context.scrollbarY?.offsetWidth || 0;\n    context.onCornerWidthChange(width2);\n    setWidth(width2);\n  });\n  return hasSize ? /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      ...cornerProps,\n      ref: forwardedRef,\n      style: {\n        width,\n        height,\n        position: \"absolute\",\n        right: context.dir === \"ltr\" ? 0 : void 0,\n        left: context.dir === \"rtl\" ? 0 : void 0,\n        bottom: 0,\n        ...props.style\n      }\n    }\n  ) : null;\n});\nfunction toInt(value) {\n  return value ? parseInt(value, 10) : 0;\n}\nfunction getThumbRatio(viewportSize, contentSize) {\n  const ratio = viewportSize / contentSize;\n  return isNaN(ratio) ? 0 : ratio;\n}\nfunction getThumbSize(sizes) {\n  const ratio = getThumbRatio(sizes.viewport, sizes.content);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio;\n  return Math.max(thumbSize, 18);\n}\nfunction getScrollPositionFromPointer(pointerPos, pointerOffset, sizes, dir = \"ltr\") {\n  const thumbSizePx = getThumbSize(sizes);\n  const thumbCenter = thumbSizePx / 2;\n  const offset = pointerOffset || thumbCenter;\n  const thumbOffsetFromEnd = thumbSizePx - offset;\n  const minPointerPos = sizes.scrollbar.paddingStart + offset;\n  const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const scrollRange = dir === \"ltr\" ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const interpolate = linearScale([minPointerPos, maxPointerPos], scrollRange);\n  return interpolate(pointerPos);\n}\nfunction getThumbOffsetFromScroll(scrollPos, sizes, dir = \"ltr\") {\n  const thumbSizePx = getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === \"ltr\" ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = clamp(scrollPos, scrollClampRange);\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n}\nfunction linearScale(input, output) {\n  return (value) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\nfunction isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos) {\n  return scrollPos > 0 && scrollPos < maxScrollPos;\n}\nvar addUnlinkedScrollListener = (node, handler = () => {\n}) => {\n  let prevPosition = { left: node.scrollLeft, top: node.scrollTop };\n  let rAF = 0;\n  (function loop() {\n    const position = { left: node.scrollLeft, top: node.scrollTop };\n    const isHorizontalScroll = prevPosition.left !== position.left;\n    const isVerticalScroll = prevPosition.top !== position.top;\n    if (isHorizontalScroll || isVerticalScroll) handler();\n    prevPosition = position;\n    rAF = window.requestAnimationFrame(loop);\n  })();\n  return () => window.cancelAnimationFrame(rAF);\n};\nfunction useDebounceCallback(callback, delay) {\n  const handleCallback = useCallbackRef(callback);\n  const debounceTimerRef = React2.useRef(0);\n  React2.useEffect(() => () => window.clearTimeout(debounceTimerRef.current), []);\n  return React2.useCallback(() => {\n    window.clearTimeout(debounceTimerRef.current);\n    debounceTimerRef.current = window.setTimeout(handleCallback, delay);\n  }, [handleCallback, delay]);\n}\nfunction useResizeObserver(element, onResize) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\nfunction getSubtree(options, content) {\n  const { asChild, children } = options;\n  if (!asChild) return typeof content === \"function\" ? content(children) : content;\n  const firstChild = React2.Children.only(children);\n  return React2.cloneElement(firstChild, {\n    children: typeof content === \"function\" ? content(firstChild.props.children) : content\n  });\n}\nvar Root = ScrollArea;\nvar Viewport = ScrollAreaViewport;\nvar Scrollbar = ScrollAreaScrollbar;\nvar Thumb = ScrollAreaThumb;\nvar Corner = ScrollAreaCorner;\nexport {\n  Corner,\n  Root,\n  ScrollArea,\n  ScrollAreaCorner,\n  ScrollAreaScrollbar,\n  ScrollAreaThumb,\n  ScrollAreaViewport,\n  Scrollbar,\n  Thumb,\n  Viewport,\n  createScrollAreaScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }\r\n"],"names":["useStateMachine","initialState","machine","React.useReducer","state","event","SCROLL_AREA_NAME","createScrollAreaContext","createScrollAreaScope","createContextScope","ScrollAreaProvider","useScrollAreaContext","ScrollArea","React2.forwardRef","props","forwardedRef","__scopeScrollArea","type","dir","scrollHideDelay","scrollAreaProps","scrollArea","setScrollArea","React2.useState","viewport","setViewport","content","setContent","scrollbarX","setScrollbarX","scrollbarY","setScrollbarY","cornerWidth","setCornerWidth","cornerHeight","setCornerHeight","scrollbarXEnabled","setScrollbarXEnabled","scrollbarYEnabled","setScrollbarYEnabled","composedRefs","useComposedRefs","node","direction","useDirection","jsx","Primitive","VIEWPORT_NAME","ScrollAreaViewport","children","asChild","nonce","viewportProps","context","ref","React2.useRef","jsxs","Fragment","getSubtree","children2","SCROLLBAR_NAME","ScrollAreaScrollbar","forceMount","scrollbarProps","onScrollbarXEnabledChange","onScrollbarYEnabledChange","isHorizontal","React2.useEffect","ScrollAreaScrollbarHover","ScrollAreaScrollbarScroll","ScrollAreaScrollbarAuto","ScrollAreaScrollbarVisible","visible","setVisible","hideTimer","handlePointerEnter","handlePointerLeave","Presence","debounceScrollEnd","useDebounceCallback","send","scrollDirection","prevScrollPos","handleScroll","scrollPos","composeEventHandlers","handleResize","isOverflowX","isOverflowY","useResizeObserver","orientation","thumbRef","pointerOffsetRef","sizes","setSizes","thumbRatio","getThumbRatio","commonProps","thumb","pointerPos","getScrollPosition","getScrollPositionFromPointer","ScrollAreaScrollbarX","offset","getThumbOffsetFromScroll","ScrollAreaScrollbarY","onSizesChange","computedStyle","setComputedStyle","composeRefs","ScrollAreaScrollbarImpl","getThumbSize","maxScrollPos","isScrollingWithinScrollbarBounds","toInt","ScrollbarProvider","useScrollbarContext","hasThumb","onThumbChange","onThumbPointerUp","onThumbPointerDown","onThumbPositionChange","onDragScroll","onWheelScroll","onResize","scrollbar","setScrollbar","rectRef","prevWebkitUserSelectRef","handleWheelScroll","useCallbackRef","handleThumbPositionChange","handleDragScroll","x","y","handleWheel","element","THUMB_NAME","ScrollAreaThumb","thumbProps","scrollbarContext","ScrollAreaThumbImpl","style","scrollAreaContext","composedRef","removeUnlinkedScrollListenerRef","listener","addUnlinkedScrollListener","thumbRect","CORNER_NAME","ScrollAreaCorner","hasBothScrollbarsVisible","ScrollAreaCornerImpl","cornerProps","width","setWidth","height","setHeight","hasSize","height2","_a","width2","value","viewportSize","contentSize","ratio","scrollbarPadding","thumbSize","pointerOffset","thumbSizePx","thumbCenter","thumbOffsetFromEnd","minPointerPos","maxPointerPos","scrollRange","linearScale","maxThumbPos","scrollClampRange","scrollWithoutMomentum","clamp","input","output","handler","prevPosition","rAF","loop","position","isHorizontalScroll","isVerticalScroll","callback","delay","handleCallback","debounceTimerRef","React2.useCallback","useLayoutEffect","resizeObserver","options","firstChild","React2.Children","React2.cloneElement","Root","Viewport","Corner","React.forwardRef","className","ScrollAreaPrimitive.Root","cn","ScrollAreaPrimitive.Viewport","ScrollBar","ScrollAreaPrimitive.Corner","ScrollAreaPrimitive.ScrollAreaScrollbar","ScrollAreaPrimitive.ScrollAreaThumb"],"mappings":"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","x_google_ignoreList":[0]}