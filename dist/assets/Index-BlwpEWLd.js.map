{"version":3,"file":"Index-BlwpEWLd.js","sources":["../../node_modules/lucide-react/dist/esm/icons/paperclip.js","../../node_modules/lucide-react/dist/esm/icons/repeat.js","../../src/components/AccountSettings.tsx","../../src/img/textlogo.png","../../src/SalesDashboard/AddSalesModal.tsx","../../src/Dashboard/DevTesting.tsx","../../src/components/navigation/MobileSearchInput.tsx","../../src/components/ui/DashboardProductSearch.tsx","../../src/SupplierDashboard/SupplierListModal.tsx","../../src/components/pages/DashboardPage.tsx","../../src/components/BottomNavigation.tsx","../../src/components/pages/PrintersPage.tsx","../../src/components/pages/SuppliersPage.tsx","../../src/components/pages/ManagementDashboard.tsx","../../src/components/pages/SalesPage.tsx","../../src/SalesDashboard/SalesDashboard.tsx","../../src/components/header/WhatsNewModal.tsx","../../src/pages/Index.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Paperclip = createLucideIcon(\"Paperclip\", [\n  [\n    \"path\",\n    {\n      d: \"m21.44 11.05-9.19 9.19a6 6 0 0 1-8.49-8.49l8.57-8.57A4 4 0 1 1 18 8.84l-8.59 8.57a2 2 0 0 1-2.83-2.83l8.49-8.48\",\n      key: \"1u3ebp\"\n    }\n  ]\n]);\n\nexport { Paperclip as default };\n//# sourceMappingURL=paperclip.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Repeat = createLucideIcon(\"Repeat\", [\n  [\"path\", { d: \"m17 2 4 4-4 4\", key: \"nntrym\" }],\n  [\"path\", { d: \"M3 11v-1a4 4 0 0 1 4-4h14\", key: \"84bu3i\" }],\n  [\"path\", { d: \"m7 22-4-4 4-4\", key: \"1wqhfi\" }],\n  [\"path\", { d: \"M21 13v1a4 4 0 0 1-4 4H3\", key: \"1rx37r\" }]\n]);\n\nexport { Repeat as default };\n//# sourceMappingURL=repeat.js.map\n","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { supabase } from \"@/integrations/supabase/client\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\n\r\nconst modalBackdropStyle: React.CSSProperties = {\r\n  position: \"fixed\",\r\n  zIndex: 10000,\r\n  left: 0,\r\n  top: 0,\r\n  width: \"100vw\",\r\n  height: \"100vh\",\r\n  background: \"rgba(0,0,0,0.5)\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n};\r\n\r\nconst modalStyle: React.CSSProperties = {\r\n  background: \"#fff\",\r\n  borderRadius: 8,\r\n  maxWidth: 400,\r\n  width: \"100%\",\r\n  padding: 24,\r\n  boxShadow: \"0 8px 32px rgba(0,0,0,0.2)\",\r\n  position: \"relative\",\r\n};\r\n\r\ninterface AccountSettingsProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst AccountSettings: React.FC<AccountSettingsProps> = ({ isOpen, onClose }) => {\r\n  const [user, setUser] = useState<any>(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [infoMessage, setInfoMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const fetchUser = async () => {\r\n        const { data, error } = await supabase.auth.getUser();\r\n        if (data?.user) {\r\n          setUser(data.user);\r\n          setName(data.user.user_metadata?.name || \"\");\r\n          setEmail(data.user.email || \"\");\r\n        }\r\n      };\r\n      fetchUser();\r\n      setInfoMessage(\"\");\r\n      setErrorMessage(\"\");\r\n      setOldPassword(\"\");\r\n      setNewPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleSaveProfile = async () => {\r\n    setLoading(true);\r\n    setInfoMessage(\"\");\r\n    setErrorMessage(\"\");\r\n    try {\r\n      if (name !== user?.user_metadata?.name) {\r\n        const { error } = await supabase.auth.updateUser({ data: { name } });\r\n        if (error) throw error;\r\n      }\r\n      if (email !== user?.email) {\r\n        const { error } = await supabase.auth.updateUser({ email });\r\n        if (error) throw error;\r\n      }\r\n      setInfoMessage(\"Profile updated successfully.\");\r\n    } catch (err: any) {\r\n      setErrorMessage(err.message || \"Failed to update profile.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleChangePassword = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setInfoMessage(\"\");\r\n    setErrorMessage(\"\");\r\n    if (!oldPassword || !newPassword || !confirmPassword) {\r\n      setErrorMessage(\"All password fields are required.\");\r\n      return;\r\n    }\r\n    if (newPassword !== confirmPassword) {\r\n      setErrorMessage(\"New passwords do not match.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const { error: signInError } = await supabase.auth.signInWithPassword({\r\n        email,\r\n        password: oldPassword,\r\n      });\r\n      if (signInError) {\r\n        setErrorMessage(\"Old password is incorrect.\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      const { error } = await supabase.auth.updateUser({ password: newPassword });\r\n      if (error) {\r\n        setErrorMessage(error.message || \"Failed to update password.\");\r\n      } else {\r\n        setInfoMessage(\"Password updated successfully.\");\r\n        setOldPassword(\"\");\r\n        setNewPassword(\"\");\r\n        setConfirmPassword(\"\");\r\n      }\r\n    } catch (err) {\r\n      setErrorMessage(\"Failed to update password.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div style={modalBackdropStyle} onClick={onClose}>\r\n      <div style={modalStyle} onClick={e => e.stopPropagation()}>\r\n        <button\r\n          onClick={onClose}\r\n          style={{\r\n            position: \"absolute\",\r\n            right: 16,\r\n            top: 16,\r\n            background: \"none\",\r\n            border: \"none\",\r\n            fontSize: 20,\r\n            cursor: \"pointer\",\r\n          }}\r\n          aria-label=\"Close\"\r\n        >\r\n          Ã—\r\n        </button>\r\n        <h2 className=\"text-lg font-bold mb-4\">Account Settings</h2>\r\n        <div className=\"space-y-3\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1\">Name</label>\r\n            <Input value={name} onChange={e => setName(e.target.value)} />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1\">Email</label>\r\n            <Input value={email} onChange={e => setEmail(e.target.value)} />\r\n          </div>\r\n          <Button className=\"w-full mt-2\" onClick={handleSaveProfile} disabled={loading}>\r\n            Save Profile\r\n          </Button>\r\n        </div>\r\n        <form className=\"space-y-3 mt-6\" onSubmit={handleChangePassword}>\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1\">Old Password</label>\r\n            <Input\r\n              type=\"password\"\r\n              value={oldPassword}\r\n              onChange={e => setOldPassword(e.target.value)}\r\n              autoComplete=\"current-password\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1\">New Password</label>\r\n            <Input\r\n              type=\"password\"\r\n              value={newPassword}\r\n              onChange={e => setNewPassword(e.target.value)}\r\n              autoComplete=\"new-password\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1\">Confirm New Password</label>\r\n            <Input\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={e => setConfirmPassword(e.target.value)}\r\n              autoComplete=\"new-password\"\r\n            />\r\n          </div>\r\n          <Button className=\"w-full\" type=\"submit\" disabled={loading}>\r\n            Change Password\r\n          </Button>\r\n        </form>\r\n        {(infoMessage || errorMessage) && (\r\n          <div className={`mt-4 text-sm ${infoMessage ? \"text-green-600\" : \"text-red-600\"}`}>\r\n            {infoMessage || errorMessage}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountSettings;\r\n\r\n","export default \"__VITE_ASSET__g7ZmlYNX__\"","\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { X, ShoppingCart, Calendar, User, Paperclip, Repeat } from \"lucide-react\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { useClients } from \"@/hooks/useClients\";\r\nimport { productService } from '@/services/productService';\r\nimport textLogo from '../img/textlogo.png';\r\nimport { useToast } from \"@/hooks/use-toast\";\r\n\r\ninterface Product {\r\n  id: string;\r\n  name: string;\r\n  sku?: string;\r\n  color?: string;\r\n}\r\n\r\ninterface AddSalesModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const AddSalesModal = ({\r\n  isOpen,\r\n  onClose,\r\n}: AddSalesModalProps) => {\r\n  const { clients, loading: clientsLoading } = useClients();\r\n  const [saleDate, setSaleDate] = useState(\"\");\r\n  const [selectedClient, setSelectedClient] = useState(\"\");\r\n  const [clientSelectionOpen, setClientSelectionOpen] = useState(true);\r\n  const [clientSearch, setClientSearch] = useState(\"\");\r\n  const [productQuery, setProductQuery] = useState(\"\");\r\n  const [productResults, setProductResults] = useState<Product[]>([]);\r\n  const [productSearchLoading, setProductSearchLoading] = useState(false);\r\n  const [addedProducts, setAddedProducts] = useState<any[]>([]);\r\n  const [addItemModalOpen, setAddItemModalOpen] = useState(false);\r\n  const [qtyPromptOpen, setQtyPromptOpen] = useState(false);\r\n  const [qtyPromptProduct, setQtyPromptProduct] = useState<Product | null>(null);\r\n  const [qtyInput, setQtyInput] = useState(1);\r\n  const qtyInputRef = useRef<HTMLInputElement>(null);\r\n  const [pricingMap, setPricingMap] = useState<Record<string, number>>({});\r\n  const [withholdingTaxEnabled, setWithholdingTaxEnabled] = useState(false);\r\n  const [withholdingTaxRate, setWithholdingTaxRate] = useState(2);\r\n  const [receiptType, setReceiptType] = useState(\"Sales Invoice\");\r\n  const [poNumber, setPONumber] = useState(\"\");\r\n  const [drNumber, setDRNumber] = useState(\"\");\r\n  const [invoiceNumber, setInvoiceNumber] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const { toast } = useToast();\r\n  const [poSearch, setPOSearch] = useState(\"\");\r\n  const poOptions = [\"PO-0001\", \"PO-0002\", \"PO-0003\"];\r\n  const [customerId, setCustomerId] = useState(\"123\");\r\n  const [dueDate, setDueDate] = useState(\"2020-01-08\");\r\n  const [dueDateInputType, setDueDateInputType] = useState<'text' | 'date'>(\"text\");\r\n  const [attachedFiles, setAttachedFiles] = useState<File[]>([]);\r\n  const [showDateModal, setShowDateModal] = useState(false);\r\n  const [confirmCheckbox, setConfirmCheckbox] = useState(receiptType === \"Sales Invoice\");\r\n  const dateInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const selectedClientObj = clients.find(c => c.id === selectedClient);\r\n\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    setProductSearchLoading(true);\r\n\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const results = await productService.searchProducts(productQuery.trim() ? productQuery : \"\");\r\n        if (!cancelled) setProductResults(results);\r\n      } catch (err) {\r\n        if (!cancelled) setProductResults([]);\r\n      } finally {\r\n        if (!cancelled) setProductSearchLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n\r\n    return () => { cancelled = true; };\r\n  }, [productQuery]);\r\n\r\n  const handleAddProductClick = (product: Product) => {\r\n    setQtyPromptProduct(product);\r\n    setQtyInput(1);\r\n    setQtyPromptOpen(true);\r\n    setTimeout(() => { qtyInputRef.current?.focus(); }, 100);\r\n  };\r\n\r\n  const handleConfirmQty = () => {\r\n    if (qtyPromptProduct && qtyInput > 0) {\r\n      setAddedProducts(prev => [...prev, { ...qtyPromptProduct, quantity: qtyInput }]);\r\n    }\r\n    setQtyPromptOpen(false);\r\n    setQtyPromptProduct(null);\r\n    setQtyInput(1);\r\n  };\r\n\r\n  const handleCancelQty = () => {\r\n    setQtyPromptOpen(false);\r\n    setQtyPromptProduct(null);\r\n    setQtyInput(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchPrices = async () => {\r\n      if (!selectedClient) {\r\n        setPricingMap({});\r\n        return;\r\n      }\r\n      const allProductIds = Array.from(new Set(addedProducts.map(p => p.id)));\r\n      const newPricing: Record<string, number> = {};\r\n      for (const productId of allProductIds) {\r\n        try {\r\n          const productWithClients = await productService.getProductWithClients(productId);\r\n          if (productWithClients && productWithClients.clients) {\r\n            const clientEntry = productWithClients.clients.find((c: any) => c.client_id === selectedClient);\r\n            newPricing[productId] = clientEntry ? clientEntry.quoted_price : 0;\r\n          } else {\r\n            newPricing[productId] = 0;\r\n          }\r\n        } catch {\r\n          newPricing[productId] = 0;\r\n        }\r\n      }\r\n      setPricingMap(newPricing);\r\n    };\r\n    fetchPrices();\r\n  }, [selectedClient, addedProducts]);\r\n\r\n  const totalSalesAmount = addedProducts.reduce(\r\n    (sum, p) => sum + ((pricingMap[p.id] || 0) * p.quantity),\r\n    0\r\n  );\r\n\r\n  const VAT_RATE = 0.12;\r\n  const WITHHOLDING_TAX_RATE = 0.02;\r\n\r\n  const vatAmount = totalSalesAmount > 0 ? (totalSalesAmount * VAT_RATE) / (1 + VAT_RATE) : 0;\r\n  const netOfVat = totalSalesAmount - vatAmount;\r\n  const discount = 0;\r\n  const withholdingTax = withholdingTaxEnabled ? netOfVat * (withholdingTaxRate / 100) : 0;\r\n  const totalAmountDue = netOfVat - discount + vatAmount - withholdingTax;\r\n\r\n  let receiptNumberLabel = \"INVOICE #\";\r\n  if (receiptType === \"Purchase Order\") receiptNumberLabel = \"PO #\";\r\n  else if (receiptType === \"Delivery Receipt\") receiptNumberLabel = \"DR #\";\r\n\r\n  useEffect(() => {\r\n    if (receiptType === \"Sales Invoice\") setConfirmCheckbox(true);\r\n    else setConfirmCheckbox(false);\r\n  }, [receiptType, showConfirm]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  // Client selection modal - Mobile optimized\r\n  if (clientSelectionOpen) {\r\n    const filteredClients = clients.filter(c =>\r\n      c.name.toLowerCase().includes(clientSearch.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"fixed inset-0 z-50 flex flex-col bg-background safe-area-inset w-screen h-screen\">\r\n        <div className=\"flex-1 flex flex-col overflow-y-auto w-full h-full\">\r\n          <div className=\"p-0 flex-1 flex flex-col w-full h-full\">\r\n            <div className=\"bg-card rounded-none shadow-none p-0 flex-1 flex flex-col w-full h-full\">\r\n              <div className=\"sticky top-0 z-10 bg-card flex flex-col gap-2 mb-3 pb-2 w-full\">\r\n                <div className=\"flex justify-between items-center px-4 pt-4\">\r\n                  <h2 className=\"text-lg font-bold text-foreground\">Select Client</h2>\r\n                  <button\r\n                    onClick={onClose}\r\n                    className=\"p-2 rounded-full hover:bg-muted transition-colors\"\r\n                    aria-label=\"Close\"\r\n                  >\r\n                    <X className=\"h-5 w-5 text-foreground\" />\r\n                  </button>\r\n                </div>\r\n                <div className=\"px-4\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search clients...\"\r\n                    value={clientSearch}\r\n                    onChange={e => setClientSearch(e.target.value)}\r\n                    className=\"w-full h-11 px-3 py-2 border border-border rounded-md text-sm bg-background text-foreground focus:outline-none focus:ring-2 focus:ring-primary/20 focus:border-primary\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex-1 max-h-full overflow-y-auto mt-3 space-y-1 px-4 pb-4\">\r\n                {filteredClients.length === 0 ? (\r\n                  <div className=\"text-muted-foreground text-center py-8 text-sm\">No clients found</div>\r\n                ) : (\r\n                  <div className=\"flex flex-col gap-2\">\r\n                    {filteredClients.map(client => (\r\n                      <button\r\n                        key={client.id}\r\n                        className=\"w-full flex flex-col items-start p-3 rounded-xl bg-white shadow-sm border border-gray-200 hover:bg-blue-50 active:scale-[0.98] transition-all duration-150\"\r\n                        onClick={() => {\r\n                          setSelectedClient(client.id);\r\n                          setClientSelectionOpen(false);\r\n                        }}\r\n                      >\r\n                        <div className=\"font-medium text-gray-900 text-base truncate w-full\">{client.name}</div>\r\n                        {client.address && <div className=\"text-xs text-gray-500 mt-1 truncate w-full\">{client.address}</div>}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const filteredProductResults = productResults.filter(product =>\r\n    product.name.toLowerCase().includes(productQuery.toLowerCase()) ||\r\n    (product.sku && product.sku.toLowerCase().includes(productQuery.toLowerCase()))\r\n  );\r\n\r\n  const getStatusForTransaction = () => {\r\n    if (receiptType === \"Sales Invoice\") return confirmCheckbox ? \"paid\" : \"unpaid\";\r\n    if (receiptType === \"Delivery Receipt\") return confirmCheckbox ? \"adv_delivery\" : \"delivered\";\r\n    if (receiptType === \"Purchase Order\") return confirmCheckbox ? \"paid\" : \"unpaid\";\r\n    return \"unpaid\";\r\n  };\r\n\r\n  async function sendSaleToGoogleSheets(status?: string) {\r\n    const month = new Date(saleDate).toLocaleString('en-US', { month: 'long' });\r\n    for (const p of addedProducts) {\r\n      const row = [\r\n        status || \"\",\r\n        saleDate,\r\n        \"\",\r\n        selectedClientObj?.name || \"\",\r\n        p.sku || p.name,\r\n        p.quantity,\r\n        pricingMap[p.id] || 0,\r\n        (pricingMap[p.id] || 0) * p.quantity,\r\n        invoiceNumber || \"\",\r\n        drNumber || \"\",\r\n        poNumber || \"\",\r\n      ];\r\n      const payload = {\r\n        sheet: month,\r\n        data: row,\r\n      };\r\n      try {\r\n        const res = await fetch('https://kong.techpinoy.com/functions/v1/google-sheets-handler', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(payload),\r\n        });\r\n        if (!res.ok) {\r\n          console.error('Failed to write sale to Google Sheets');\r\n        }\r\n      } catch (err) {\r\n        console.error('Network or CORS error sending to Google Sheets');\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleComplete = async () => {\r\n    if (!saleDate || isNaN(new Date(saleDate).getTime())) {\r\n      setShowDateModal(true);\r\n      return;\r\n    }\r\n    setShowConfirm(true);\r\n  };\r\n\r\n  const handleConfirmSale = async () => {\r\n    const status = getStatusForTransaction();\r\n    await sendSaleToGoogleSheets(status);\r\n    setShowConfirm(false);\r\n    onClose();\r\n  };\r\n\r\n  const handleCancelConfirm = () => {\r\n    setShowConfirm(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Add Item Modal - Mobile optimized */}\r\n      {addItemModalOpen && (\r\n        <div className=\"fixed inset-0 z-[100] flex items-end justify-center bg-black/60 backdrop-blur-sm\">\r\n          <div className=\"bg-card rounded-t-2xl shadow-2xl w-full max-h-[85vh] flex flex-col safe-area-inset-bottom\">\r\n            <div className=\"p-4 border-b border-border\">\r\n              <h3 className=\"text-lg font-semibold flex items-center gap-2 text-foreground\">\r\n                <ShoppingCart className=\"w-5 h-5 text-primary\" />\r\n                Add Item to Sale\r\n              </h3>\r\n            </div>\r\n            <div className=\"p-4 flex-1 overflow-y-auto\">\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Search products to add...\"\r\n                value={productQuery}\r\n                onChange={e => setProductQuery(e.target.value)}\r\n                className=\"mb-3 h-11 text-sm\"\r\n              />\r\n              <div className=\"bg-background border border-border rounded-lg shadow-sm max-h-64 overflow-y-auto\">\r\n                {productSearchLoading ? (\r\n                  <div className=\"p-4 text-center text-muted-foreground text-sm\">Searching...</div>\r\n                ) : filteredProductResults.length === 0 ? (\r\n                  <div className=\"p-4 text-center text-muted-foreground text-sm\">No products found</div>\r\n                ) : (\r\n                  filteredProductResults.map(product => (\r\n                    <div\r\n                      key={product.id}\r\n                      className=\"flex items-center justify-between p-3 border-b last:border-b-0 hover:bg-muted transition cursor-pointer active:bg-muted/70\"\r\n                      onClick={() => handleAddProductClick(product)}\r\n                    >\r\n                      <div className=\"flex items-center gap-3 w-full min-w-0\">\r\n                        {product.color && (\r\n                          <span\r\n                            className=\"inline-block w-4 h-4 rounded-full border border-border flex-shrink-0\"\r\n                            style={{ backgroundColor: product.color }}\r\n                            title={product.color}\r\n                          />\r\n                        )}\r\n                        <div className=\"min-w-0 flex-1\">\r\n                          <div className=\"font-medium text-foreground text-sm truncate\">{product.name}</div>\r\n                          {product.sku && (\r\n                            <div className=\"text-xs text-muted-foreground truncate\">({product.sku})</div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"p-4 border-t border-border\">\r\n              <button\r\n                className=\"w-full h-11 rounded-md bg-muted hover:bg-muted/80 text-foreground font-medium text-sm transition-colors\"\r\n                onClick={() => setAddItemModalOpen(false)}\r\n              >\r\n                Done\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Quantity Prompt Modal - Mobile optimized */}\r\n      {qtyPromptOpen && (\r\n        <div className=\"fixed inset-0 z-[100] flex items-center justify-center bg-black/60 backdrop-blur-sm p-4\">\r\n          <div className=\"bg-card rounded-xl shadow-2xl w-full max-w-xs\">\r\n            <div className=\"p-4 text-center\">\r\n              <h3 className=\"text-lg font-semibold mb-3 flex items-center justify-center gap-2 text-foreground\">\r\n                <ShoppingCart className=\"w-5 h-5 text-primary\" />\r\n                Enter Quantity\r\n              </h3>\r\n              <input\r\n                ref={qtyInputRef}\r\n                type=\"number\"\r\n                min={1}\r\n                value={qtyInput}\r\n                onChange={e => setQtyInput(Number(e.target.value))}\r\n                className=\"w-full border border-border rounded-md px-3 py-2 text-lg bg-background text-foreground focus:outline-none focus:ring-2 focus:ring-primary/20 focus:border-primary h-11\"\r\n              />\r\n            </div>\r\n            <div className=\"flex gap-2 p-4 pt-0\">\r\n              <button\r\n                className=\"flex-1 h-11 rounded-md bg-muted hover:bg-muted/80 text-foreground font-medium text-sm transition-colors\"\r\n                onClick={handleCancelQty}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                className=\"flex-1 h-11 rounded-md bg-primary hover:bg-primary/90 text-primary-foreground font-medium text-sm transition-colors disabled:opacity-50\"\r\n                onClick={handleConfirmQty}\r\n                disabled={qtyInput < 1}\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Main Sales Modal - Mobile optimized */}\r\n      <div className=\"fixed inset-0 z-50 flex flex-col bg-background safe-area-inset\">\r\n        {/* Sticky Header - Compact for mobile */}\r\n        <div className=\"flex items-center gap-2 w-full p-3 bg-muted/50 border-b border-border sticky top-0 z-10\">\r\n          <span className=\"text-sm font-semibold text-foreground\">New Sale</span>\r\n          <select\r\n            className=\"h-8 text-xs px-2 py-0 rounded border border-border bg-background text-foreground flex-shrink-0\"\r\n            style={{ minWidth: '90px' }}\r\n            value={receiptType}\r\n            onChange={e => setReceiptType(e.target.value)}\r\n          >\r\n            <option value=\"Sales Invoice\">Sales Invoice</option>\r\n            <option value=\"Purchase Order\">Purchase Order</option>\r\n            <option value=\"Delivery Receipt\">Delivery Receipt</option>\r\n          </select>\r\n          <button\r\n            type=\"button\"\r\n            className=\"h-8 w-8 flex items-center justify-center rounded bg-background hover:bg-muted border border-border text-foreground flex-shrink-0\"\r\n            aria-label=\"Select date\"\r\n            onClick={() => dateInputRef.current?.click()}\r\n          >\r\n            <Calendar className=\"h-4 w-4\" />\r\n          </button>\r\n          <input\r\n            ref={dateInputRef}\r\n            type=\"date\"\r\n            value={saleDate}\r\n            onChange={e => setSaleDate(e.target.value)}\r\n            className=\"hidden\"\r\n          />\r\n          <button \r\n            onClick={onClose} \r\n            className=\"h-8 w-8 flex items-center justify-center rounded-full hover:bg-muted transition ml-auto flex-shrink-0\" \r\n            aria-label=\"Close\"\r\n          >\r\n            <X className=\"h-5 w-5 text-foreground\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Scrollable Content */}\r\n        <div className=\"flex-1 overflow-y-auto pb-20\">\r\n          <div className=\"p-4 space-y-4\">\r\n            {/* Company Info and Bill To - Mobile stacked layout */}\r\n            <div className=\"space-y-4\">\r\n              {/* Company Info */}\r\n              <div className=\"bg-card rounded-lg p-3 shadow-sm\">\r\n                <img src={textLogo} alt=\"TechPinoy Logo\" className=\"h-8 w-auto mb-2\" />\r\n                <div className=\"text-xs text-muted-foreground space-y-0.5\">\r\n                  <div>2474 Valerio Street</div>\r\n                  <div>Pasay City 1300</div>\r\n                  <div>Phone: +639 7711 88880</div>\r\n                  <div>Website: https://techpinoy.com</div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Bill To and Invoice Info - Mobile stacked */}\r\n              <div className=\"grid grid-cols-1 gap-4\">\r\n                {/* Bill To */}\r\n                {selectedClientObj && (\r\n                  <div className=\"bg-card rounded-lg p-3 shadow-sm\">\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <div className=\"bg-primary text-primary-foreground text-xs font-bold px-2 py-1 rounded\">BILL TO</div>\r\n                      <button\r\n                        className=\"h-8 w-8 flex items-center justify-center rounded-full bg-muted hover:bg-muted/80 text-foreground border border-border\"\r\n                        onClick={() => setClientSelectionOpen(true)}\r\n                        type=\"button\"\r\n                        aria-label=\"Change client\"\r\n                      >\r\n                        <Repeat className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"text-xs text-foreground space-y-0.5\">\r\n                      {selectedClientObj.name && <div className=\"font-medium\">{selectedClientObj.name}</div>}\r\n                      {selectedClientObj.address && <div>{selectedClientObj.address}</div>}\r\n                      {selectedClientObj.phone && <div>{selectedClientObj.phone}</div>}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Invoice Info */}\r\n                <div className=\"bg-card rounded-lg p-3 shadow-sm\">\r\n                  <div className=\"text-lg font-bold text-primary tracking-wide mb-2\">{receiptType.toUpperCase()}</div>\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-xs text-muted-foreground\">DATE</span>\r\n                      <span className=\"text-xs text-foreground font-medium\">{saleDate || \"mm/dd/yyyy\"}</span>\r\n                    </div>\r\n                    {receiptType === \"Sales Invoice\" && (\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"text-xs text-muted-foreground\">INVOICE #</span>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={invoiceNumber}\r\n                          onChange={e => setInvoiceNumber(e.target.value)}\r\n                          className=\"border border-border rounded px-2 py-1 text-xs w-20 bg-background text-foreground\"\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    {receiptType === \"Purchase Order\" && (\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"text-xs text-muted-foreground\">PO #</span>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={poNumber}\r\n                          onChange={e => setPONumber(e.target.value)}\r\n                          className=\"border border-border rounded px-2 py-1 text-xs w-20 bg-background text-foreground\"\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    {receiptType === \"Delivery Receipt\" && (\r\n                      <>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-xs text-muted-foreground\">DR #</span>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={drNumber}\r\n                            onChange={e => setDRNumber(e.target.value)}\r\n                            className=\"border border-border rounded px-2 py-1 text-xs w-20 bg-background text-foreground\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-xs text-muted-foreground\">PO #</span>\r\n                          <input\r\n                            type=\"text\"\r\n                            value={poNumber}\r\n                            onChange={e => setPONumber(e.target.value)}\r\n                            className=\"border border-border rounded px-2 py-1 text-xs w-20 bg-background text-foreground\"\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-xs text-muted-foreground\">CUSTOMER ID</span>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={customerId}\r\n                        onChange={e => setCustomerId(e.target.value)}\r\n                        className=\"border border-border rounded px-2 py-1 text-xs w-20 bg-background text-foreground\"\r\n                      />\r\n                    </div>\r\n                    {receiptType !== \"Sales Invoice\" && (\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"text-xs text-muted-foreground\">DUE DATE</span>\r\n                        <input\r\n                          type={dueDateInputType}\r\n                          value={dueDate}\r\n                          onChange={e => setDueDate(e.target.value)}\r\n                          onFocus={() => setDueDateInputType('date')}\r\n                          onBlur={() => setDueDateInputType('text')}\r\n                          className=\"border border-border rounded px-2 py-1 text-xs w-20 bg-background text-foreground\"\r\n                          placeholder=\"mm/dd/yyyy\"\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Products List - Mobile optimized */}\r\n            {addedProducts.length > 0 && (\r\n              <div className=\"bg-card rounded-lg shadow-sm overflow-hidden\">\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"w-full text-xs\">\r\n                    <thead>\r\n                      <tr className=\"bg-muted\">\r\n                        <th className=\"px-2 py-2 text-left font-medium\">Item</th>\r\n                        <th className=\"px-2 py-2 text-left font-medium\">Desc.</th>\r\n                        <th className=\"px-2 py-2 text-center font-medium\">Qty</th>\r\n                        <th className=\"px-2 py-2 text-right font-medium\">Price</th>\r\n                        <th className=\"px-2 py-2 text-right font-medium\">Amt.</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {addedProducts.map((p, idx) => (\r\n                        <tr key={p.id + idx} className=\"border-b border-border last:border-b-0\">\r\n                          <td className=\"px-2 py-2 text-foreground\">{p.sku}</td>\r\n                          <td className=\"px-2 py-2 text-foreground\">\r\n                            <div className=\"truncate max-w-[80px]\" title={p.name}>{p.name}</div>\r\n                          </td>\r\n                          <td className=\"px-2 py-2 text-center text-foreground\">{p.quantity}</td>\r\n                          <td className=\"px-2 py-2 text-right text-foreground\">\r\n                            â‚±{(pricingMap[p.id] || 0).toLocaleString()}\r\n                          </td>\r\n                          <td className=\"px-2 py-2 text-right text-foreground font-medium\">\r\n                            â‚±{((pricingMap[p.id] || 0) * p.quantity).toLocaleString()}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Summary Section - Mobile optimized */}\r\n            {receiptType !== \"Delivery Receipt\" && (\r\n              <div className=\"bg-card rounded-lg shadow-sm overflow-hidden\">\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"w-full text-xs\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"border-b border-border px-3 py-2 font-medium text-foreground\">Total (Incl.)</td>\r\n                        <td className=\"border-b border-border px-3 py-2 text-right font-bold text-green-600\">\r\n                          â‚±{totalSalesAmount.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"border-b border-border px-3 py-2 text-foreground\">Less: VAT</td>\r\n                        <td className=\"border-b border-border px-3 py-2 text-right text-foreground\">\r\n                          â‚±{vatAmount.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"border-b border-border px-3 py-2 text-foreground\">Net of VAT</td>\r\n                        <td className=\"border-b border-border px-3 py-2 text-right text-foreground\">\r\n                          â‚±{netOfVat.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"border-b border-border px-3 py-2 text-foreground\">Discount</td>\r\n                        <td className=\"border-b border-border px-3 py-2 text-right text-foreground\">\r\n                          â‚±{discount.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"border-b border-border px-3 py-2 text-foreground\">Add: VAT</td>\r\n                        <td className=\"border-b border-border px-3 py-2 text-right text-foreground\">\r\n                          â‚±{vatAmount.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"border-b border-border px-3 py-2\">\r\n                          <label className=\"flex items-center gap-2 text-xs\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={withholdingTaxEnabled}\r\n                              onChange={e => setWithholdingTaxEnabled(e.target.checked)}\r\n                              className=\"accent-primary\"\r\n                            />\r\n                            <span className=\"text-foreground\">Withhold.</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              min={0}\r\n                              max={100}\r\n                              value={withholdingTaxRate}\r\n                              onChange={e => setWithholdingTaxRate(Number(e.target.value))}\r\n                              className=\"w-8 px-1 py-0.5 border border-border rounded text-xs bg-background text-foreground\"\r\n                              disabled={!withholdingTaxEnabled}\r\n                            />\r\n                            <span className=\"text-foreground\">%</span>\r\n                          </label>\r\n                        </td>\r\n                        <td className=\"border-b border-border px-3 py-2 text-right text-foreground\">\r\n                          â‚±{withholdingTax.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"border-b border-border px-3 py-3 font-bold text-base text-center text-foreground\" colSpan={2}>\r\n                          TOTAL DUE\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"px-3 py-3 font-bold text-lg text-center text-green-600\" colSpan={2}>\r\n                          â‚±{totalAmountDue.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Action Bar - Fixed at bottom for mobile */}\r\n        <div className=\"fixed bottom-0 left-0 w-full bg-card border-t border-border p-3 flex items-center justify-between gap-2 z-20 safe-area-inset-bottom\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <label className=\"inline-flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*,application/pdf\"\r\n                multiple\r\n                className=\"hidden\"\r\n                onChange={e => {\r\n                  if (e.target.files) {\r\n                    setAttachedFiles(Array.from(e.target.files));\r\n                  }\r\n                }}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"flex items-center justify-center h-9 w-9 rounded-full bg-muted hover:bg-muted/80 text-foreground\"\r\n                tabIndex={0}\r\n                aria-label=\"Attach File\"\r\n              >\r\n                <Paperclip className=\"h-4 w-4\" />\r\n              </button>\r\n            </label>\r\n            <button\r\n              className=\"h-9 w-9 flex items-center justify-center rounded-full bg-muted hover:bg-muted/80 text-foreground\"\r\n              onClick={onClose}\r\n              aria-label=\"Cancel\"\r\n            >\r\n              <X className=\"h-4 w-4\" />\r\n            </button>\r\n            <button\r\n              className=\"h-9 px-4 text-xs rounded-md bg-primary hover:bg-primary/90 text-primary-foreground font-medium\"\r\n              onClick={handleComplete}\r\n            >\r\n              Complete\r\n            </button>\r\n          </div>\r\n          <button\r\n            className=\"h-9 px-4 text-xs rounded-md bg-primary hover:bg-primary/90 text-primary-foreground font-medium shadow-sm\"\r\n            onClick={() => setAddItemModalOpen(true)}\r\n          >\r\n            + Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"fixed bottom-20 left-4 right-4 bg-destructive/10 text-destructive px-4 py-2 rounded-md text-center font-medium text-sm safe-area-inset-bottom\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {/* Confirm Modal - Mobile optimized */}\r\n      {showConfirm && (\r\n        <div className=\"fixed inset-0 z-[200] flex items-end justify-center bg-black/60 backdrop-blur-sm\">\r\n          <div className=\"bg-card rounded-t-2xl shadow-2xl w-full max-h-[85vh] flex flex-col safe-area-inset-bottom\">\r\n            <div className=\"p-4 border-b border-border\">\r\n              <h3 className=\"text-lg font-bold text-primary text-center\">\r\n                {receiptType}\r\n              </h3>\r\n            </div>\r\n            <div className=\"p-4 flex-1 overflow-y-auto\">\r\n              <div className=\"space-y-3 text-sm\">\r\n                <div><span className=\"font-medium text-foreground\">Date:</span> <span className=\"text-muted-foreground\">{saleDate}</span></div>\r\n                <div><span className=\"font-medium text-foreground\">Client:</span> <span className=\"text-muted-foreground\">{selectedClientObj?.name || \"-\"}</span></div>\r\n                <div className=\"font-medium text-foreground\">Items:</div>\r\n                <div className=\"bg-muted rounded-md p-3 space-y-1\">\r\n                  {addedProducts.map((p, idx) => (\r\n                    <div key={p.id + idx} className=\"text-xs text-foreground\">\r\n                      {p.sku || p.name} x {p.quantity} = â‚±{((pricingMap[p.id] || 0) * p.quantity).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"font-bold text-primary text-base\">\r\n                  Total: â‚±{addedProducts.reduce((sum, p) => sum + ((pricingMap[p.id] || 0) * p.quantity), 0).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n                </div>\r\n                <div className=\"flex items-center gap-2 pt-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"confirm-checkbox\"\r\n                    checked={confirmCheckbox}\r\n                    onChange={e => setConfirmCheckbox(e.target.checked)}\r\n                    className=\"accent-primary\"\r\n                  />\r\n                  <label htmlFor=\"confirm-checkbox\" className=\"font-medium text-foreground text-sm\">\r\n                    {receiptType === \"Sales Invoice\" && \"Paid\"}\r\n                    {receiptType === \"Delivery Receipt\" && \"Adv Delivery\"}\r\n                    {receiptType === \"Purchase Order\" && \"Paid\"}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex gap-2 p-4 border-t border-border\">\r\n              <button \r\n                className=\"flex-1 h-11 rounded-md bg-muted hover:bg-muted/80 text-foreground font-medium\" \r\n                onClick={handleCancelConfirm}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button \r\n                className=\"flex-1 h-11 rounded-md bg-primary hover:bg-primary/90 text-primary-foreground font-medium\" \r\n                onClick={handleConfirmSale}\r\n              >\r\n                Confirm & Complete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Date Modal - Mobile optimized */}\r\n      {showDateModal && (\r\n        <div className=\"fixed inset-0 z-[300] flex items-center justify-center bg-black/60 backdrop-blur-sm p-4\">\r\n          <div className=\"bg-card rounded-xl shadow-2xl w-full max-w-xs\">\r\n            <div className=\"p-4 text-center\">\r\n              <h3 className=\"text-lg font-bold mb-3 text-foreground\">Select Date for this transaction</h3>\r\n              <input\r\n                type=\"date\"\r\n                className=\"w-full h-11 px-3 py-2 border border-border rounded-md text-sm bg-background text-foreground focus:outline-none focus:ring-2 focus:ring-primary/20 focus:border-primary\"\r\n                value={saleDate}\r\n                onChange={e => setSaleDate(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"p-4 pt-0\">\r\n              <button\r\n                className=\"h-11 w-full rounded-md bg-primary hover:bg-primary/90 text-primary-foreground font-medium disabled:opacity-50\"\r\n                disabled={!saleDate || isNaN(new Date(saleDate).getTime())}\r\n                onClick={() => {\r\n                  setShowDateModal(false);\r\n                  setShowConfirm(true);\r\n                }}\r\n              >\r\n                Confirm Date\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function DevTesting({ open, onClose }: { open: boolean, onClose: () => void }) {\r\n  const [activeDevTab, setActiveDevTab] = useState<'google'>('google');\r\n  const [gsStatus, setGsStatus] = useState<string | null>(null);\r\n\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[20000] flex items-center justify-center bg-black/70\">\r\n      <div className=\"bg-white w-full max-w-2xl h-[90vh] rounded-lg shadow-lg flex flex-col\">\r\n        <div className=\"flex justify-between items-center p-4 border-b\">\r\n          <h2 className=\"text-lg font-bold\">Developer Mode</h2>\r\n          <button onClick={onClose} className=\"text-gray-500 hover:text-red-500 text-2xl\">&times;</button>\r\n        </div>\r\n        <div className=\"flex border-b\">\r\n          <button\r\n            className={`px-4 py-2 ${activeDevTab === 'google' ? 'border-b-2 border-blue-500 font-bold' : ''}`}\r\n            onClick={() => setActiveDevTab('google')}\r\n          >\r\n            Google Services\r\n          </button>\r\n        </div>\r\n        <div className=\"flex-1 overflow-auto p-6\">\r\n          {activeDevTab === 'google' && (\r\n            <div>\r\n              <button\r\n                onClick={async () => {\r\n                  setGsStatus('Sending...');\r\n                  const testSale = {\r\n                    saleDate: new Date().toISOString(),\r\n                    customer: 'Test Customer',\r\n                    amount: 123.45,\r\n                    product: 'Test Product',\r\n                  };\r\n                  const month = new Date().toLocaleString('en-US', { month: 'long' });\r\n                  try {\r\n                    const res = await fetch('https://kong.techpinoy.com/functions/v1/google-sheets-handler', {\r\n                        method: 'POST',\r\n                      headers: { 'Content-Type': 'application/json' },\r\n                      body: JSON.stringify({\r\n                        sheet: month,\r\n                        data: testSale,\r\n                      }),\r\n                    });\r\n                    if (res.ok) {\r\n                      setGsStatus('Success! Data sent to Google Sheet.');\r\n                    } else {\r\n                      setGsStatus('Failed! Server error.');\r\n                    }\r\n                  } catch (err) {\r\n                    setGsStatus('Failed! Network or CORS error.');\r\n                  }\r\n                }}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n              >\r\n                Send Test Data to Google Sheet\r\n              </button>\r\n              {gsStatus && <div style={{ marginTop: 8 }}>{gsStatus}</div>}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport React from 'react';\r\nimport { Search, X } from 'lucide-react';\r\nimport { Input } from '@/components/ui/input';\r\n\r\ninterface MobileSearchInputProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  placeholder: string;\r\n  className?: string;\r\n}\r\n\r\nexport const MobileSearchInput = ({ \r\n  value, \r\n  onChange, \r\n  placeholder, \r\n  className = '' \r\n}: MobileSearchInputProps) => {\r\n  return (\r\n    <div className={`relative w-full ${className}`}>\r\n      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4 z-10\" />\r\n      <Input\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        className=\"w-full pl-10 pr-10 py-2 text-sm bg-white border-gray-200 rounded-lg focus:border-blue-400 focus:ring-2 focus:ring-blue-200 transition-all duration-200\"\r\n      />\r\n      {value && (\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onChange(\"\")}\r\n          className=\"absolute right-2 top-1/2 transform -translate-y-1/2 p-1 rounded-full hover:bg-gray-100 transition-colors\"\r\n        >\r\n          <X className=\"h-4 w-4 text-gray-400\" />\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { Search, Eye, X, ArrowLeft, Printer, Package, Plus, UserPlus, User, Settings, LogOut, FileText } from \"lucide-react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Product } from \"@/types/sales\";\r\nimport { ProductDetailsModal } from \"@/components/modals/ProductDetailsModal\";\r\nimport { productService } from \"@/services/productService\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { printerService } from \"@/services/printerService\";\r\nimport { Printer as PrinterType } from \"@/types/database\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useClients } from \"@/hooks/useClients\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport AccountSettings from \"@/components/AccountSettings\";\r\nimport { DropdownMenu, DropdownMenuTrigger, DropdownMenuContent, DropdownMenuItem } from \"@/components/ui/dropdown-menu\";\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\n// Components\r\nimport { SearchInput } from \"@/PrinterDashboard/components/SearchInput\";\r\nimport NavigationButton from \"@/PrinterDashboard/components/NavigationButton\";\r\nimport { AddSalesModal } from \"@/SalesDashboard/AddSalesModal\";\r\nimport { AddPurchaseModal } from \"@/SalesDashboard/AddPurchaseModal\";\r\nimport { CreateDeliveryModal } from \"@/components/sales/CreateDeliveryModal\";\r\nimport DevTesting from '@/Dashboard/DevTesting';\r\nimport { TransactionRecordsList } from '@/components/sales/TransactionRecordsList';\r\nimport { MobileSearchInput } from '@/components/navigation/MobileSearchInput';\r\nimport { CustomLoading } from \"@/components/ui/CustomLoading\";\r\n\r\ntype SearchType = 'products' | 'printers';\r\n\r\ninterface PrinterWithProducts extends Omit<PrinterType, 'printer_assignments'> {\r\n  compatibleProducts: Array<{\r\n    id: string;\r\n    name: string;\r\n    sku?: string;\r\n    color?: string;\r\n  }>;\r\n  printer_assignments?: Array<{\r\n    id: string;\r\n    status: string;\r\n    is_unassigned?: boolean;\r\n    serial_number?: string;\r\n    client_id?: string;\r\n    clients?: { id: string; name: string };\r\n    department_location?: { name: string; department: { name: string } };\r\n  }>;\r\n}\r\n\r\nconst colorClasses: { [key: string]: string } = {\r\n  black: 'bg-black',\r\n  cyan: 'bg-cyan-500',\r\n  magenta: 'bg-pink-500',\r\n  yellow: 'bg-yellow-400',\r\n};\r\n\r\nconst ColorDot = ({ color }: { color: string }) => {\r\n  const colorClass = colorClasses[color?.toLowerCase()] || 'bg-gray-400';\r\n  return <div className={`w-3 h-3 rounded-full ${colorClass}`} />;\r\n};\r\n\r\nfunction TransactionRecordModal({ open, onClose }: { open: boolean, onClose: () => void }) {\r\n  if (!open) return null;\r\n  return (\r\n    <div className=\"fixed inset-0 z-[100] flex items-center justify-center bg-black/40\">\r\n      <div className=\"bg-white rounded-lg shadow-xl p-0 w-full max-w-4xl flex flex-col items-stretch relative max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex items-center justify-between px-6 py-4 border-b\">\r\n          <h3 className=\"text-lg font-semibold flex items-center gap-2\">\r\n            <FileText className=\"h-5 w-5\" /> Transaction Records\r\n          </h3>\r\n          <button\r\n            className=\"p-2 rounded-full hover:bg-gray-100 text-gray-500\"\r\n            onClick={onClose}\r\n            aria-label=\"Close\"\r\n          >\r\n            <X className=\"h-5 w-5\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"p-6 pt-2 overflow-y-auto\">\r\n          <TransactionRecordsList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const DashboardProductSearch = () => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchType, setSearchType] = useState<SearchType>('products');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\r\n  const [showProductDetails, setShowProductDetails] = useState(false);\r\n  const [productsWithPricing, setProductsWithPricing] = useState<any[]>([]);\r\n  const [printersWithProducts, setPrintersWithProducts] = useState<PrinterWithProducts[]>([]);\r\n  const [showSupplierPrices, setShowSupplierPrices] = useState<{ [productId: string]: boolean }>({});\r\n  const [showClientPrices, setShowClientPrices] = useState<{ [productId: string]: boolean }>({});\r\n  const [showAddMenu, setShowAddMenu] = useState(false);\r\n  const [showSalesModal, setShowSalesModal] = useState(false);\r\n  const [showPurchaseModal, setShowPurchaseModal] = useState(false);\r\n  const [showDeliveryModal, setShowDeliveryModal] = useState(false);\r\n  const { clients, loading: clientsLoading } = useClients();\r\n  const [selectedClient, setSelectedClient] = useState(\"\");\r\n  const [saleDate, setSaleDate] = useState(\"\");\r\n  const [productQuery, setProductQuery] = useState(\"\");\r\n  const [productResults, setProductResults] = useState([]);\r\n  const [productSearchLoading, setProductSearchLoading] = useState(false);\r\n  const [addedProducts, setAddedProducts] = useState([]);\r\n  const [qtyPromptOpen, setQtyPromptOpen] = useState(false);\r\n  const [qtyPromptProduct, setQtyPromptProduct] = useState<Product | null>(null);\r\n  const [qtyInput, setQtyInput] = useState(1);\r\n  const qtyInputRef = useRef<HTMLInputElement>(null);\r\n  const [addItemModalOpen, setAddItemModalOpen] = useState(false);\r\n  const [pricingMap, setPricingMap] = useState<Record<string, number>>({}); // productId -> price\r\n  const [showPlaceholderModal, setShowPlaceholderModal] = useState(false);\r\n  const [showAccountSettings, setShowAccountSettings] = useState(false);\r\n  const [showDeveloperModal, setShowDeveloperModal] = useState(false);\r\n  const [activeDevTab, setActiveDevTab] = useState<'google'>(\"google\");\r\n  const [gsStatus, setGsStatus] = useState<string | null>(null);\r\n  const [showTransactionRecordsModal, setShowTransactionRecordsModal] = useState(false);\r\n\r\n  const { userProfile } = useAuth();\r\n  const location = useLocation();\r\n\r\n  // Handler for + button in product search results (now in add item modal)\r\n  const handleAddProductClick = (product: Product) => {\r\n    setQtyPromptProduct(product);\r\n    setQtyInput(1);\r\n    setQtyPromptOpen(true);\r\n    setTimeout(() => { qtyInputRef.current?.focus(); }, 100);\r\n  };\r\n  // Handler for confirming quantity (now only closes qty modal, not add item modal)\r\n  const handleConfirmQty = () => {\r\n    if (qtyPromptProduct && qtyInput > 0) {\r\n      setAddedProducts(prev => [...prev, { ...qtyPromptProduct, quantity: qtyInput }]);\r\n    }\r\n    setQtyPromptOpen(false);\r\n    setQtyPromptProduct(null);\r\n    setQtyInput(1);\r\n    // Do NOT close addItemModalOpen here\r\n  };\r\n  // Handler for canceling\r\n  const handleCancelQty = () => {\r\n    setQtyPromptOpen(false);\r\n    setQtyPromptProduct(null);\r\n    setQtyInput(1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (location.pathname === '/' || location.pathname === '/dashboard') {\r\n      setShowPlaceholderModal(true);\r\n    } else {\r\n      window.history.back();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery.trim()) {\r\n      setProductsWithPricing([]);\r\n      setPrintersWithProducts([]);\r\n      return;\r\n    }\r\n    let cancelled = false;\r\n    const fetch = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        if (searchType === 'products') {\r\n          // Product filter active\r\n          let products = [];\r\n          \r\n          // First try direct product search\r\n          try {\r\n            const directProducts = await productService.searchProducts(searchQuery);\r\n            products = directProducts;\r\n          } catch (error) {\r\n            console.log('Direct product search failed, trying printer-based search');\r\n          }\r\n          \r\n          // If no direct products found, try searching by printer name/model\r\n          if (products.length === 0) {\r\n            try {\r\n              const printers = await printerService.searchPrinters(searchQuery);\r\n              // Get products for each found printer\r\n              const printerProducts = await Promise.all(\r\n                printers.map(async (printer) => {\r\n                  try {\r\n                    const { data: products, error } = await supabase\r\n                      .from('product_printers')\r\n                      .select('product:products(*)')\r\n                      .eq('printer_id', printer.id)\r\n                      .order('product(name)', { ascending: true })\r\n                      .order('product(color)', { ascending: true });\r\n                    return (products || []).map(pp => pp.product).filter(Boolean);\r\n                  } catch (error) {\r\n                    return [];\r\n                  }\r\n                })\r\n              );\r\n              // Flatten and deduplicate products\r\n              const allProducts = printerProducts.flat();\r\n              const uniqueProducts = allProducts.filter((product, index, self) => \r\n                index === self.findIndex(p => p.id === product.id)\r\n              );\r\n              products = uniqueProducts;\r\n            } catch (error) {\r\n              console.log('Printer-based product search failed');\r\n            }\r\n          }\r\n          \r\n          // Get pricing for found products\r\n          const productsWithPricingData = await Promise.all(products.map(async product => {\r\n            try {\r\n              const [withSuppliers, withClients] = await Promise.all([\r\n                productService.getProductWithSuppliers(product.id),\r\n                productService.getProductWithClients(product.id)\r\n              ]);\r\n              return {\r\n                ...product,\r\n                suppliers: withSuppliers?.suppliers || [],\r\n                clients: withClients?.clients || [],\r\n                color: product.color\r\n              };\r\n            } catch (error) {\r\n              return {\r\n                ...product,\r\n                suppliers: [],\r\n                clients: [],\r\n                color: product.color\r\n              };\r\n            }\r\n          }));\r\n          \r\n          if (!cancelled) setProductsWithPricing(productsWithPricingData);\r\n        } else {\r\n          // Printer filter active\r\n          let printers = [];\r\n          \r\n          // First try direct printer search\r\n          try {\r\n            const directPrinters = await printerService.searchPrinters(searchQuery);\r\n            printers = directPrinters;\r\n          } catch (error) {\r\n            console.log('Direct printer search failed, trying product-based search');\r\n          }\r\n          \r\n          // If no direct printers found, try searching by product name/SKU\r\n          if (printers.length === 0) {\r\n            try {\r\n              const products = await productService.searchProducts(searchQuery);\r\n              // Get printers for each found product\r\n              const productPrinters = await Promise.all(\r\n                products.map(async (product) => {\r\n                  try {\r\n                    return await printerService.getProductPrinters(product.id);\r\n                  } catch (error) {\r\n                    return [];\r\n                  }\r\n                })\r\n              );\r\n              // Flatten and deduplicate printers\r\n              const allPrinters = productPrinters.flat();\r\n              const uniquePrinters = allPrinters.filter((printer, index, self) => \r\n                index === self.findIndex(p => p.id === printer.id)\r\n              );\r\n              printers = uniquePrinters;\r\n            } catch (error) {\r\n              console.log('Product-based printer search failed');\r\n            }\r\n          }\r\n          \r\n          // Get compatible products for found printers\r\n          const printersWithProductsData = await Promise.all(printers.map(async printer => {\r\n            try {\r\n              const products = await supabase\r\n                .from('product_printers')\r\n                .select('product:products(*)')\r\n                .eq('printer_id', printer.id)\r\n                .order('product(name)', { ascending: true })\r\n                .order('product(color)', { ascending: true });\r\n              return {\r\n                ...printer,\r\n                compatibleProducts: (products.data || []).map(pp => pp.product).filter(Boolean)\r\n              };\r\n            } catch (error) {\r\n              return {\r\n                ...printer,\r\n                compatibleProducts: []\r\n              };\r\n            }\r\n          }));\r\n          \r\n          if (!cancelled) setPrintersWithProducts(printersWithProductsData);\r\n        }\r\n      } catch (err) {\r\n        if (!cancelled) {\r\n          setError(err instanceof Error ? err.message : 'Search failed');\r\n          setProductsWithPricing([]);\r\n          setPrintersWithProducts([]);\r\n        }\r\n      } finally {\r\n        if (!cancelled) setLoading(false);\r\n      }\r\n    };\r\n    const timeoutId = setTimeout(fetch, 300);\r\n    return () => { cancelled = true; clearTimeout(timeoutId); };\r\n  }, [searchQuery, searchType]);\r\n\r\n  useEffect(() => {\r\n    if (!showSalesModal || !productQuery.trim()) {\r\n      setProductResults([]);\r\n      return;\r\n    }\r\n    let cancelled = false;\r\n    setProductSearchLoading(true);\r\n    const timeoutId = setTimeout(async () => {\r\n      try {\r\n        const results = await productService.searchProducts(productQuery);\r\n        if (!cancelled) setProductResults(results);\r\n      } catch (err) {\r\n        if (!cancelled) setProductResults([]);\r\n      } finally {\r\n        if (!cancelled) setProductSearchLoading(false);\r\n      }\r\n    }, 300);\r\n    return () => { cancelled = true; clearTimeout(timeoutId); };\r\n  }, [productQuery, showSalesModal]);\r\n\r\n  const handleProductSelect = (product: Product) => {\r\n    setSelectedProduct(product);\r\n    setShowProductDetails(true);\r\n  };\r\n\r\n  const handleCloseProductDetails = () => {\r\n    setShowProductDetails(false);\r\n    setSelectedProduct(null);\r\n  };\r\n\r\n  const toggleSupplierPrice = (productId: string) => {\r\n    setShowSupplierPrices(prev => ({ ...prev, [productId]: !prev[productId] }));\r\n  };\r\n  const toggleClientPrice = (productId: string) => {\r\n    setShowClientPrices(prev => ({ ...prev, [productId]: !prev[productId] }));\r\n  };\r\n\r\n  const getAssignmentStatusInfo = (printer: PrinterWithProducts) => {\r\n    const assignmentStatus = printer.printer_assignments?.filter((a: any) => a.status === 'active') || [];\r\n    \r\n    if (assignmentStatus.length === 0) {\r\n      return {\r\n        status: 'available',\r\n        label: 'Available',\r\n        color: 'bg-green-100 text-green-700'\r\n      };\r\n    } else {\r\n      return {\r\n        status: 'assigned',\r\n        label: 'Currently Assigned',\r\n        color: 'bg-blue-100 text-blue-700'\r\n      };\r\n    }\r\n  };\r\n\r\n  // Fetch client pricing for all products in the sales list when client or sales list changes\r\n  useEffect(() => {\r\n    const fetchPrices = async () => {\r\n      if (!selectedClient) {\r\n        setPricingMap({});\r\n        return;\r\n      }\r\n      const allProductIds = Array.from(new Set(addedProducts.map(p => p.id)));\r\n      const newPricing: Record<string, number> = {};\r\n      for (const productId of allProductIds) {\r\n        try {\r\n          const productWithClients = await productService.getProductWithClients(productId);\r\n          if (productWithClients && productWithClients.clients) {\r\n            const clientEntry = productWithClients.clients.find((c: any) => c.client_id === selectedClient);\r\n            newPricing[productId] = clientEntry ? clientEntry.quoted_price : 0;\r\n          } else {\r\n            newPricing[productId] = 0;\r\n          }\r\n        } catch {\r\n          newPricing[productId] = 0;\r\n        }\r\n      }\r\n      setPricingMap(newPricing);\r\n    };\r\n    fetchPrices();\r\n  }, [selectedClient, addedProducts]);\r\n\r\n  return (\r\n    <>\r\n      {/* Add Item Modal */}\r\n      {addItemModalOpen && (\r\n        <div className=\"fixed inset-0 z-[100] flex items-center justify-center bg-black/40\">\r\n          <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-lg flex flex-col items-center relative\">\r\n            <h3 className=\"text-lg font-semibold mb-4\">Add Item to Sale</h3>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Search products to add...\"\r\n              value={productQuery}\r\n              onChange={e => setProductQuery(e.target.value)}\r\n              className=\"mb-2\"\r\n            />\r\n            {/* Product search results */}\r\n            {productQuery.trim() && (\r\n              <div className=\"mt-2 bg-white border border-gray-200 rounded-lg shadow max-h-64 overflow-y-auto w-full\">\r\n                {productSearchLoading ? (\r\n                  <div className=\"p-4 text-center text-gray-500 text-sm\">Searching...</div>\r\n                ) : productResults.length === 0 ? (\r\n                  <div className=\"p-4 text-center text-gray-400 text-sm\">No products found</div>\r\n                ) : (\r\n                  productResults.map(product => (\r\n                    <div\r\n                      key={product.id}\r\n                      className=\"flex items-center justify-between px-4 py-2 border-b last:border-b-0 hover:bg-orange-50 transition cursor-pointer\"\r\n                      onClick={() => handleAddProductClick(product)}\r\n                    >\r\n                      <div>\r\n                        <div className=\"font-medium text-gray-900\">{product.name}</div>\r\n                        <div className=\"text-xs text-gray-500\">SKU: {product.sku}</div>\r\n                        {product.color && <div className=\"text-xs text-gray-400\">Color: {product.color}</div>}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            )}\r\n            <button\r\n              className=\"mt-4 px-4 py-2 rounded bg-gray-100 hover:bg-gray-200 text-gray-700 font-semibold\"\r\n              onClick={() => setAddItemModalOpen(false)}\r\n            >Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* Quantity Prompt Modal (remains above all) */}\r\n      {qtyPromptOpen && (\r\n        <div className=\"fixed inset-0 z-[100] flex items-center justify-center bg-black/40\">\r\n          <div className=\"bg-white rounded-lg shadow-2xl p-6 w-full max-w-xs flex flex-col items-center relative\">\r\n            <h3 className=\"text-lg font-semibold mb-2\">Enter Quantity</h3>\r\n            <div className=\"mb-4 w-full\">\r\n              <input\r\n                ref={qtyInputRef}\r\n                type=\"number\"\r\n                min={1}\r\n                value={qtyInput}\r\n                onChange={e => setQtyInput(Number(e.target.value))}\r\n                className=\"w-full border rounded px-3 py-2 text-lg focus:outline-none focus:ring-2 focus:ring-orange-400\"\r\n              />\r\n            </div>\r\n            <div className=\"flex gap-2 w-full\">\r\n              <button\r\n                className=\"flex-1 py-2 rounded bg-gray-100 hover:bg-gray-200 text-gray-700 font-semibold\"\r\n                onClick={() => { setQtyPromptOpen(false); setQtyPromptProduct(null); setQtyInput(1); }}\r\n              >Cancel</button>\r\n              <button\r\n                className=\"flex-1 py-2 rounded bg-orange-600 hover:bg-orange-700 text-white font-semibold\"\r\n                onClick={handleConfirmQty}\r\n                disabled={qtyInput < 1}\r\n              >Add</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* POS Modal for Sales */}\r\n      {showSalesModal && (\r\n        <AddSalesModal isOpen={showSalesModal} onClose={() => setShowSalesModal(false)} />\r\n      )}\r\n      {showPurchaseModal && (\r\n        <AddPurchaseModal isOpen={showPurchaseModal} onClose={() => setShowPurchaseModal(false)} />\r\n      )}\r\n      {showDeliveryModal && (\r\n        <CreateDeliveryModal onClose={() => setShowDeliveryModal(false)} />\r\n      )}\r\n      {showTransactionRecordsModal && (\r\n        <TransactionRecordModal open={showTransactionRecordsModal} onClose={() => setShowTransactionRecordsModal(false)} />\r\n      )}\r\n      {/* Floating Bottom Search Bar */}\r\n      <div className={`fixed bottom-0 left-0 w-full ${showSalesModal ? 'z-0 pointer-events-none' : 'z-[10000]'}`} style={showSalesModal ? { opacity: 0.2 } : {}}>\r\n        <div className=\"w-full bg-white/95 backdrop-blur-lg border-t border-gray-200 shadow-2xl\">\r\n          <div className=\"px-2 py-2\">\r\n            <div className=\"flex items-center gap-2\">\r\n              {/* Menu Button */}\r\n              <div className=\"flex-shrink-0\">\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <button\r\n                      type=\"button\"\r\n                      aria-label=\"Menu\"\r\n                      className=\"p-2 rounded-full bg-gray-100 hover:bg-gray-200 text-gray-500 border border-gray-200\"\r\n                    >\r\n                      <User className=\"h-5 w-5\" />\r\n                    </button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent align=\"start\" className=\"w-48 z-[9999]\">\r\n                    <DropdownMenuItem onClick={() => setShowAccountSettings(true)}>\r\n                      <Settings className=\"mr-2 h-4 w-4\" /> Account Settings\r\n                    </DropdownMenuItem>\r\n                    <DropdownMenuItem onClick={() => setShowDeveloperModal(true)}>\r\n                      <Settings className=\"mr-2 h-4 w-4\" /> Developer Mode\r\n                    </DropdownMenuItem>\r\n                    <DropdownMenuItem\r\n                      onClick={async () => {\r\n                        await supabase.auth.signOut();\r\n                        window.location.href = \"/auth\";\r\n                      }}\r\n                    >\r\n                      <LogOut className=\"mr-2 h-4 w-4\" /> Logout\r\n                    </DropdownMenuItem>\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n              </div>\r\n\r\n              {/* Search Input - Hidden for client users */}\r\n              {userProfile?.role !== 'client' && (\r\n                <div className=\"flex-1\">\r\n                  <MobileSearchInput\r\n                    value={searchQuery}\r\n                    onChange={setSearchQuery}\r\n                    placeholder=\"Search anything - products, printers, SKUs, models...\"\r\n                  />\r\n                </div>\r\n              )}\r\n               \r\n              {/* Filter Buttons - Hidden for client users */}\r\n              {userProfile?.role !== 'client' && (\r\n                <div className=\"flex gap-1 flex-shrink-0\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setSearchType('printers')}\r\n                    className={`flex items-center justify-center p-2 rounded-lg transition-all duration-200\r\n                      ${searchType === 'printers' ? 'bg-blue-600 text-white shadow-md' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}\r\n                    `}\r\n                    aria-pressed={searchType === 'printers'}\r\n                  >\r\n                    <Printer className=\"h-4 w-4\" />\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setSearchType('products')}\r\n                    className={`flex items-center justify-center p-2 rounded-lg transition-all duration-200\r\n                      ${searchType === 'products' ? 'bg-blue-600 text-white shadow-md' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}\r\n                    `}\r\n                    aria-pressed={searchType === 'products'}\r\n                  >\r\n                    <Package className=\"h-4 w-4\" />\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              {/* Add Button - Hidden for client users */}\r\n              {userProfile?.role !== 'client' && (\r\n                <div className=\"flex-shrink-0 relative\">\r\n                  <AnimatePresence>\r\n                    {showAddMenu && (\r\n                      <motion.div\r\n                        initial={{ opacity: 0, y: 20, scale: 0.95 }}\r\n                        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n                        exit={{ opacity: 0, y: 20, scale: 0.95 }}\r\n                        transition={{ duration: 0.2, ease: \"easeOut\" }}\r\n                        className=\"absolute bottom-full right-0 mb-2 z-50\"\r\n                      >\r\n                        <div className=\"bg-white rounded-2xl shadow-2xl border border-gray-100 p-4 w-80 max-w-[90vw]\">\r\n                          {/* Header */}\r\n                          <div className=\"flex items-center justify-between mb-4\">\r\n                            <h3 className=\"text-lg font-semibold text-gray-900\">Add Options</h3>\r\n                            <button\r\n                              onClick={() => setShowAddMenu(false)}\r\n                              className=\"p-1.5 rounded-full hover:bg-gray-100 transition-colors\"\r\n                              aria-label=\"Close menu\"\r\n                            >\r\n                              <X className=\"h-4 w-4 text-gray-500\" />\r\n                            </button>\r\n                          </div>\r\n                          {/* Menu Options */}\r\n                          <div className=\"space-y-3\">\r\n                            <button\r\n                              onClick={() => { setShowAddMenu(false); setShowSalesModal(true); }}\r\n                              className=\"w-full flex items-center gap-3 p-3 rounded-xl bg-orange-50 hover:bg-orange-100 border border-orange-200 transition-colors text-left\"\r\n                            >\r\n                              <div className=\"flex-shrink-0 w-10 h-10 bg-orange-100 rounded-full flex items-center justify-center\">\r\n                                <span className=\"font-bold text-orange-600 text-lg\">S</span>\r\n                              </div>\r\n                              <div>\r\n                                <h4 className=\"font-medium text-gray-900\">Sales</h4>\r\n                              </div>\r\n                            </button>\r\n                            {/* New Transaction Records Option */}\r\n                            <button\r\n                              onClick={() => { setShowAddMenu(false); setShowTransactionRecordsModal(true); }}\r\n                              className=\"w-full flex items-center gap-3 p-3 rounded-xl bg-violet-50 hover:bg-violet-100 border border-violet-200 transition-colors text-left\"\r\n                            >\r\n                              <div className=\"flex-shrink-0 w-10 h-10 bg-violet-100 rounded-full flex items-center justify-center\">\r\n                                <FileText className=\"text-violet-600 h-6 w-6\" />\r\n                              </div>\r\n                              <div>\r\n                                <h4 className=\"font-medium text-gray-900\">Transaction Records</h4>\r\n                              </div>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </motion.div>\r\n                    )}\r\n                  </AnimatePresence>\r\n                  {/* Desktop Add Button */}\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setShowAddMenu(!showAddMenu)}\r\n                    className=\"flex items-center justify-center gap-2 px-4 py-2 rounded-lg bg-orange-600 hover:bg-orange-700 text-white font-semibold transition border border-orange-700 ml-2 hidden sm:flex\"\r\n                  >\r\n                    <Plus className=\"h-5 w-5\" />\r\n                    <span>Add</span>\r\n                  </button>\r\n                  {/* Mobile Add Button */}\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setShowAddMenu(!showAddMenu)}\r\n                    className=\"p-2 rounded-full bg-orange-600 hover:bg-orange-700 text-white transition border border-orange-700 flex sm:hidden ml-2\"\r\n                    aria-label=\"Add\"\r\n                  >\r\n                    <Plus className=\"h-5 w-5\" />\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Search Results Dropdown (above input) */}\r\n            {searchQuery.trim() && (\r\n              <div className=\"w-full mb-2 max-h-96 overflow-y-auto bg-white/95 backdrop-blur-lg border border-gray-200 rounded-lg shadow-lg z-20 relative pt-2\">\r\n                {/* Close button - sticky at the top right */}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"sticky top-0 right-0 float-right m-2 p-1 rounded-full bg-gray-100 hover:bg-gray-200 text-gray-500 hover:text-gray-700 transition border border-gray-300 shadow z-10\"\r\n                  aria-label=\"Close results\"\r\n                  onClick={e => { e.stopPropagation(); setSearchQuery(\"\"); }}\r\n                >\r\n                  <X className=\"h-4 w-4\" />\r\n                </button>\r\n                {loading ? (\r\n                  <CustomLoading message=\"Searching products\" />\r\n                ) : error ? (\r\n                  <div className=\"w-full text-center py-4\">\r\n                    <div className=\"text-red-500 text-sm break-words\">{error}</div>\r\n                  </div>\r\n                ) : searchType === 'products' ? (\r\n                  // Product Results\r\n                  productsWithPricing.length > 0 ? (\r\n                    <div className=\"w-full space-y-3 p-1\">\r\n                      {productsWithPricing.map(product => {\r\n                        // Filter out 0.0 prices\r\n                        const filteredSuppliers = (product.suppliers || []).filter(s => s.current_price && s.current_price > 0);\r\n                        const filteredClients = (product.clients || []).filter(c => c.quoted_price && c.quoted_price > 0);\r\n                        return (\r\n                          <div\r\n                            key={product.id}\r\n                            className=\"bg-white border border-gray-200 rounded-xl p-3 hover:shadow-md transition-shadow\"\r\n                          >\r\n                            <div className=\"space-y-2\">\r\n                              {/* Product Info */}\r\n                              <div className=\"flex items-center gap-2 mb-1\">\r\n                                <span className=\"font-bold text-gray-900 text-lg leading-tight\">{product.name}</span>\r\n                                <span className=\"font-mono bg-gray-100 px-2 py-0.5 rounded text-xs\">{product.sku}</span>\r\n                                {product.color && <span className=\"inline-block w-3 h-3 rounded-full border ml-1\" style={{ backgroundColor: product.color }} />}\r\n                              </div>\r\n                              {/* Supplier Pricing */}\r\n                              <div className=\"space-y-1\">\r\n                                <div className=\"flex items-center gap-2 text-xs text-gray-600\">\r\n                                  <span className=\"font-medium\">Supplier pricing:</span>\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"ml-2 px-2 py-0.5 rounded bg-blue-100 text-blue-700 text-xs font-semibold border border-blue-200 hover:bg-blue-200 transition\"\r\n                                    onClick={e => { e.stopPropagation(); toggleSupplierPrice(product.id); }}\r\n                                  >\r\n                                    {showSupplierPrices[product.id] ? 'HIDE' : <Eye className=\"inline h-4 w-4\" />}\r\n                                  </button>\r\n                                </div>\r\n                                {filteredSuppliers.length > 0 ? (\r\n                                  showSupplierPrices[product.id] ? (\r\n                                    <div className=\"flex flex-wrap gap-1\">\r\n                                      {filteredSuppliers.map(supplierRelation => (\r\n                                        <span\r\n                                          key={supplierRelation.id}\r\n                                          className=\"flex items-center gap-1 bg-blue-50 border border-blue-200 rounded px-2 py-1 text-base font-bold text-blue-800\"\r\n                                        >\r\n                                          {supplierRelation.supplier?.name}: <span className=\"font-bold text-blue-900\">â‚±{supplierRelation.current_price?.toLocaleString()}</span>\r\n                                        </span>\r\n                                      ))}\r\n                                    </div>\r\n                                  ) : (\r\n                                    <div className=\"text-base text-blue-800 font-bold\">\r\n                                      â‚±{Math.max(...filteredSuppliers.map(s => s.current_price)).toLocaleString()}\r\n                                    </div>\r\n                                  )\r\n                                ) : (\r\n                                  <div className=\"text-xs text-gray-500\">No supplier pricing available</div>\r\n                                )}\r\n                              </div>\r\n                              {/* Client Pricing */}\r\n                              <div className=\"space-y-1\">\r\n                                <div className=\"flex items-center gap-2 text-xs text-gray-600\">\r\n                                  <span className=\"font-medium\">Client pricing:</span>\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"ml-2 px-2 py-0.5 rounded bg-green-100 text-green-700 text-xs font-semibold border border-green-200 hover:bg-green-200 transition\"\r\n                                    onClick={e => { e.stopPropagation(); toggleClientPrice(product.id); }}\r\n                                  >\r\n                                    {showClientPrices[product.id] ? 'HIDE' : <Eye className=\"inline h-4 w-4\" />}\r\n                                  </button>\r\n                                </div>\r\n                                {filteredClients.length > 0 ? (\r\n                                  showClientPrices[product.id] ? (\r\n                                    <div className=\"flex flex-wrap gap-1\">\r\n                                      {filteredClients.map(clientRelation => (\r\n                                        <span\r\n                                          key={clientRelation.id}\r\n                                          className=\"flex items-center gap-1 bg-green-50 border border-green-200 rounded px-2 py-1 text-base font-bold text-green-800\"\r\n                                        >\r\n                                          {clientRelation.client?.name}: <span className=\"font-bold text-green-900\">â‚±{clientRelation.quoted_price?.toLocaleString()}</span>\r\n                                        </span>\r\n                                      ))}\r\n                                    </div>\r\n                                  ) : (\r\n                                    <div className=\"text-base text-green-800 font-bold\">\r\n                                      â‚±{Math.max(...filteredClients.map(c => c.quoted_price)).toLocaleString()}\r\n                                    </div>\r\n                                  )\r\n                                ) : (\r\n                                  <div className=\"text-xs text-gray-500\">No client pricing available</div>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"w-full text-center py-4\">\r\n                      <Search className=\"h-8 w-8 mx-auto mb-2 opacity-30 text-gray-400\" />\r\n                      <p className=\"text-gray-500 text-sm mb-1\">No products found</p>\r\n                      <p className=\"text-xs text-gray-400 px-4 break-words\">\r\n                        Try searching for product names, SKUs, or printer names/models\r\n                      </p>\r\n                    </div>\r\n                  )\r\n                ) : (\r\n                  // Printer Results\r\n                  printersWithProducts.length > 0 ? (\r\n                    <div className=\"w-full space-y-3 p-1\">\r\n                      {printersWithProducts.map(printer => {\r\n                        const statusInfo = getAssignmentStatusInfo(printer);\r\n                        return (\r\n                          <div\r\n                            key={printer.id}\r\n                            className=\"bg-white border border-gray-200 rounded-xl p-3 hover:shadow-md transition-shadow\"\r\n                          >\r\n                            <div className=\"flex items-center justify-between\">\r\n                              {/* Thumbnail */}\r\n                              <div className=\"w-14 h-14 flex-shrink-0 flex items-center justify-center bg-gray-100 rounded border overflow-hidden mr-3\">\r\n                                {printer.image_url ? (\r\n                                  <img src={printer.image_url} alt={printer.name} className=\"object-contain w-full h-full\" />\r\n                                ) : (\r\n                                  <Printer className=\"h-8 w-8 text-gray-400\" />\r\n                                )}\r\n                              </div>\r\n                              \r\n                              <div className=\"flex-1\">\r\n                                <div className=\"flex items-center space-x-2 mb-1\">\r\n                                  <h4 className=\"font-medium text-sm\">\r\n                                    {[printer.manufacturer, printer.series, printer.model || printer.name].filter(Boolean).join(' ')}\r\n                                  </h4>\r\n                                </div>\r\n                                <div className=\"space-y-1\">\r\n                                  <div className=\"flex items-center space-x-2\">\r\n                                    <Badge variant=\"secondary\" className={`text-xs ${statusInfo.color}`}>\r\n                                      {statusInfo.label}\r\n                                    </Badge>\r\n                                    {printer.rental_eligible && (\r\n                                      <Badge variant=\"outline\" className=\"text-xs bg-blue-100 text-blue-800\">\r\n                                        Rental Eligible\r\n                                      </Badge>\r\n                                    )}\r\n                                    {printer.color && (\r\n                                      <Badge variant=\"outline\" className=\"text-xs\">\r\n                                        {printer.color}\r\n                                      </Badge>\r\n                                    )}\r\n                                  </div>\r\n                                  {/* Compatible Products Section */}\r\n                                  <div className=\"mt-2\">\r\n                                    <span className=\"text-xs text-gray-600 block mb-1\">Compatible Products:</span>\r\n                                    {printer.compatibleProducts.length > 0 ? (\r\n                                      <div className=\"flex flex-wrap gap-1\">\r\n                                        {(() => {\r\n                                          // Group products by name and SKU\r\n                                          const grouped = printer.compatibleProducts.reduce((acc, product: any) => {\r\n                                            const key = `${product.name}-${product.sku}`;\r\n                                            if (!acc[key]) {\r\n                                              acc[key] = {\r\n                                                name: product.name,\r\n                                                sku: product.sku,\r\n                                                colors: [],\r\n                                                allProducts: []\r\n                                              };\r\n                                            }\r\n                                            if (product.color && !acc[key].colors.includes(product.color)) {\r\n                                              acc[key].colors.push(product.color);\r\n                                            }\r\n                                            acc[key].allProducts.push(product);\r\n                                            return acc;\r\n                                          }, {} as Record<string, {\r\n                                            name: string;\r\n                                            sku?: string;\r\n                                            colors: string[];\r\n                                            allProducts: any[];\r\n                                          }>);\r\n\r\n                                          return Object.values(grouped).map((group, idx) => (\r\n                                            <Badge key={idx} variant=\"outline\" className=\"flex items-center space-x-1.5 text-xs bg-gray-50\">\r\n                                              <span>{group.name}{group.sku && ` (${group.sku})`}</span>\r\n                                              {group.colors.map(color => <ColorDot key={color} color={color} />)}\r\n                                            </Badge>\r\n                                          ));\r\n                                        })()}\r\n                                      </div>\r\n                                    ) : (\r\n                                      <span className=\"text-xs text-gray-400\">No compatible products found</span>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"w-full text-center py-4\">\r\n                      <Search className=\"h-8 w-8 mx-auto mb-2 opacity-30 text-gray-400\" />\r\n                      <p className=\"text-gray-500 text-sm mb-1\">No printers found</p>\r\n                      <p className=\"text-xs text-gray-400 px-4 break-words\">\r\n                        Try searching for printer names, models, or product names/SKUs\r\n                      </p>\r\n                    </div>\r\n                  )\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Product Details Modal */}\r\n      {showProductDetails && selectedProduct && (\r\n        <ProductDetailsModal\r\n          isOpen={showProductDetails}\r\n          onClose={handleCloseProductDetails}\r\n          product={selectedProduct} \r\n        />\r\n      )}\r\n      {/* Placeholder Modal for Back Button */}\r\n      <Dialog open={showPlaceholderModal} onOpenChange={setShowPlaceholderModal}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>Menu</DialogTitle>\r\n          </DialogHeader>\r\n          <div className=\"py-4 text-center text-gray-600 flex flex-col gap-4\">\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"w-full\"\r\n              onClick={() => {\r\n                setShowPlaceholderModal(false);\r\n                // Optionally, show a toast or open settings\r\n              }}\r\n            >\r\n              <Settings className=\"mr-2 h-4 w-4\" /> Settings\r\n            </Button>\r\n            <Button\r\n              variant=\"destructive\"\r\n              className=\"w-full\"\r\n              onClick={async () => {\r\n                await supabase.auth.signOut();\r\n                window.location.href = \"/auth\";\r\n              }}\r\n            >\r\n              <LogOut className=\"mr-2 h-4 w-4\" /> Logout\r\n            </Button>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n      {/* Account Settings Modal */}\r\n      <AccountSettings isOpen={showAccountSettings} onClose={() => setShowAccountSettings(false)} />\r\n      {/* Developer Mode Modal */}\r\n      <DevTesting open={showDeveloperModal} onClose={() => setShowDeveloperModal(false)} />\r\n    </>\r\n  );\r\n};\r\n","\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { X, Search, Building2, Loader2 } from 'lucide-react';\r\nimport { useSuppliers } from '@/hooks/useSuppliers';\r\nimport { Supplier } from '@/types/database';\r\nimport { CustomLoading } from \"@/components/ui/CustomLoading\";\r\n\r\ninterface SupplierListModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSupplierSelected: (supplier: Supplier) => void;\r\n  title?: string;\r\n  description?: string;\r\n}\r\n\r\nconst SupplierListModal: React.FC<SupplierListModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onSupplierSelected,\r\n  title = \"Select a Supplier\",\r\n  description = \"Choose a supplier to view their details.\",\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const { suppliers, loading } = useSuppliers();\r\n  const modalRef = useRef<HTMLDivElement>(null);\r\n  const cancelBtnRef = useRef<HTMLButtonElement>(null);\r\n  const searchInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Focus management: focus search on open\r\n  useEffect(() => {\r\n    if (isOpen && searchInputRef.current) {\r\n      searchInputRef.current.blur();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Keyboard accessibility: Esc to close\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [isOpen, onClose]);\r\n\r\n  const filteredSuppliers = suppliers.filter(supplier =>\r\n    supplier.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    supplier.contact_email?.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div\r\n      className=\"fixed inset-0 z-[10001] flex flex-col\"\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      aria-labelledby=\"supplier-list-modal-title\"\r\n      aria-describedby=\"supplier-list-modal-desc\"\r\n    >\r\n      {/* Backdrop - removed as we're using solid white background */}\r\n      \r\n      \r\n      {/* Mobile-First Modal Container */}\r\n      <div\r\n        ref={modalRef}\r\n        className=\"relative z-10 flex flex-col h-full w-full bg-white shadow-2xl\"\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        {/* Sticky Header with Search */}\r\n        <div className=\"sticky top-0 z-20 bg-gradient-to-r from-green-50 to-emerald-50 border-b border-green-200 px-4 py-3\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <div className=\"flex items-center gap-3 flex-1 min-w-0\">\r\n              <Building2 className=\"w-5 h-5 text-green-500 flex-shrink-0\" />\r\n              <div className=\"min-w-0 flex-1\">\r\n                <h2 id=\"supplier-list-modal-title\" className=\"text-base font-semibold text-gray-900 truncate\">{title}</h2>\r\n                <p id=\"supplier-list-modal-desc\" className=\"text-xs text-gray-600\">{description}</p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-2 rounded-full hover:bg-green-200 transition-colors flex-shrink-0\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <X className=\"h-5 w-5 text-green-500\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"relative\">\r\n            <div tabIndex={0} aria-hidden=\"true\" style={{ width: 0, height: 0, overflow: 'hidden' }} />\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n            <input\r\n              ref={searchInputRef}\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"w-full pl-10 pr-4 h-10 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500 bg-white\"\r\n              placeholder=\"Search suppliers...\"\r\n              aria-label=\"Search suppliers\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Scrollable Content with Mobile Optimization */}\r\n        <div className=\"flex-1 overflow-y-auto px-4 py-2\">\r\n          {loading ? (\r\n            <CustomLoading message=\"Loading suppliers\" />\r\n          ) : filteredSuppliers.length > 0 ? (\r\n            <div className=\"space-y-2\">\r\n              {filteredSuppliers.map((supplier) => (\r\n                <div\r\n                  key={supplier.id}\r\n                  className=\"flex items-center gap-3 p-3 border rounded-lg cursor-pointer transition-all duration-200 border-gray-200 hover:border-green-400 hover:bg-green-50 bg-white active:scale-[0.98] touch-target\"\r\n                  onClick={() => {\r\n                    onSupplierSelected(supplier);\r\n                    onClose();\r\n                  }}\r\n                  tabIndex={0}\r\n                  role=\"button\"\r\n                  aria-label={`Select supplier ${supplier.name}`}\r\n                  onKeyDown={e => {\r\n                    if (e.key === 'Enter' || e.key === ' ') {\r\n                      onSupplierSelected(supplier);\r\n                      onClose();\r\n                    }\r\n                  }}\r\n                >\r\n                  <div className=\"flex-shrink-0 w-10 h-10 bg-green-100 rounded-full flex items-center justify-center\">\r\n                    <Building2 className=\"h-5 w-5 text-green-500\" />\r\n                  </div>\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <div className=\"font-medium text-gray-900 truncate text-sm\">{supplier.name}</div>\r\n                    {(supplier.contact_email || supplier.phone) && (\r\n                      <div className=\"text-xs text-gray-600 truncate mt-0.5\">\r\n                        {supplier.contact_email && `${supplier.contact_email}`}\r\n                        {supplier.phone && supplier.contact_email && ' â€¢ '}\r\n                        {supplier.phone && `${supplier.phone}`}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center py-12\">\r\n              <Building2 className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n              <p className=\"text-gray-500 text-sm\">\r\n                {searchTerm ? 'No suppliers found matching your search' : 'No suppliers available'}\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Sticky Mobile Footer */}\r\n        <div className=\"sticky bottom-0 bg-white border-t border-gray-100 p-4 safe-area-bottom space-y-2\">\r\n          <button\r\n            className=\"w-full h-12 rounded-lg bg-green-600 hover:bg-green-700 text-white font-medium text-sm transition-all duration-200 active:scale-[0.98] touch-target\"\r\n            onClick={() => {/* TODO: Implement add supplier modal */}}\r\n            aria-label=\"Add Supplier\"\r\n          >\r\n            Add Supplier\r\n          </button>\r\n          <button\r\n            ref={cancelBtnRef}\r\n            className=\"w-full h-12 rounded-lg bg-gray-100 hover:bg-gray-200 active:bg-gray-300 text-gray-700 font-medium text-sm transition-all duration-200 active:scale-[0.98] touch-target\"\r\n            onClick={onClose}\r\n            aria-label=\"Cancel\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SupplierListModal;\r\n","\r\nimport { useState } from \"react\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Users, ShoppingCart, Package, ChevronRight, Building2, Printer, DollarSign } from \"lucide-react\";\r\nimport { DashboardProductSearch } from \"@/components/ui/DashboardProductSearch\";\r\nimport { useClients } from \"@/hooks/useClients\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSuppliers } from '@/hooks/useSuppliers';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport TopMobileHeader from '@/includes/TopMobileHeader';\r\nimport DatabaseSummary from '@/components/DatabaseSummary';\r\nimport ClientListModal from \"@/ClientDashboard/ClientListModal\";\r\nimport SupplierListModal from \"@/SupplierDashboard/SupplierListModal\";\r\n\r\ninterface DashboardPageProps {\r\n  onNavigateToSection: (section: \"management\" | \"sales\" | \"products\") => void;\r\n}\r\n\r\nexport const DashboardPage = ({\r\n  onNavigateToSection\r\n}: DashboardPageProps) => {\r\n  const [selectedCard, setSelectedCard] = useState<string>(\"management\");\r\n  const [expandedCard, setExpandedCard] = useState<string | null>(null);\r\n  const [expandedSupplier, setExpandedSupplier] = useState<boolean>(false);\r\n  const [expandedSuppliersCard, setExpandedSuppliersCard] = useState<boolean>(false);\r\n  const [showClientListModal, setShowClientListModal] = useState(false);\r\n  const [showSupplierListModal, setShowSupplierListModal] = useState(false);\r\n  \r\n  const { clients, loading: clientsLoading } = useClients();\r\n  const { suppliers, loading: suppliersLoading } = useSuppliers();\r\n  const { userProfile } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const menuCards = [\r\n    {\r\n      id: \"printers-dashboard\",\r\n      title: \"Printers\",\r\n      icon: Printer,\r\n      description: \"Printer fleet dashboard\",\r\n      color: \"bg-indigo-50 border-indigo-200\",\r\n      activeColor: \"bg-indigo-100 border-indigo-300 shadow-md\",\r\n      iconColor: \"text-indigo-600\",\r\n      onClick: () => navigate('/printer-dashboard')\r\n    },\r\n    {\r\n      id: \"clients\",\r\n      title: \"Clients\",\r\n      icon: Users,\r\n      description: \"Client directory\",\r\n      color: \"bg-orange-50 border-orange-200\",\r\n      activeColor: \"bg-orange-100 border-orange-300 shadow-md\",\r\n      iconColor: \"text-orange-600\",\r\n      onClick: () => setShowClientListModal(true)\r\n    },\r\n    {\r\n      id: \"suppliers-dashboard\",\r\n      title: \"Suppliers\",\r\n      icon: Building2,\r\n      description: \"Supplier management\",\r\n      color: \"bg-blue-50 border-blue-200\",\r\n      activeColor: \"bg-blue-100 border-blue-300 shadow-md\",\r\n      iconColor: \"text-blue-600\",\r\n      onClick: () => setShowSupplierListModal(true)\r\n    },\r\n    {\r\n      id: \"sales-entry\",\r\n      title: \"Sales\",\r\n      icon: DollarSign,\r\n      description: \"Sales entry and transactions\",\r\n      color: \"bg-pink-50 border-pink-200\",\r\n      activeColor: \"bg-pink-100 border-pink-300 shadow-md\",\r\n      iconColor: \"text-pink-600\",\r\n      onClick: () => navigate('/sales-entry')\r\n    },\r\n    {\r\n      id: \"products\",\r\n      title: \"Products\",\r\n      icon: Package,\r\n      description: \"Product catalog\",\r\n      color: \"bg-purple-50 border-purple-200\",\r\n      activeColor: \"bg-purple-100 border-purple-300 shadow-md\",\r\n      iconColor: \"text-purple-600\",\r\n      onClick: () => navigate('/product-dashboard')\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50\">\r\n      {/* Mobile Header - Sticky */}\r\n      <div className=\"sticky top-0 z-40 bg-white/95 backdrop-blur-sm border-b border-gray-200\">\r\n        <TopMobileHeader\r\n          client={{\r\n            id: 'dashboard',\r\n            name: 'TechPinoy App',\r\n            contact_email: '',\r\n            phone: '',\r\n            notes: '',\r\n            address: '',\r\n            department_count: 0,\r\n            location_count: 0,\r\n            printer_count: 0,\r\n            created_at: '',\r\n            updated_at: '',\r\n          }}\r\n          onBack={() => navigate('/')}\r\n          onEdit={() => {}}\r\n          appVersion=\"1.0.0\"\r\n        />\r\n        \r\n        {/* Database Summary - Compact for mobile */}\r\n        <div className=\"px-3 pb-2\">\r\n          <DatabaseSummary />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content - Mobile Optimized */}\r\n      <div className=\"px-1 pt-2 pb-20 space-y-3\">\r\n        {/* Product Search - Mobile Optimized */}\r\n        <div className=\"mb-4\">\r\n          <DashboardProductSearch />\r\n        </div>\r\n\r\n        {/* Menu Cards Grid - Mobile First */}\r\n        <div className=\"space-y-3\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900 px-1\">Quick Access</h2>\r\n          <div className=\"grid grid-cols-1 gap-3\">\r\n            {menuCards.filter(card => {\r\n              // Client users can only see Printers and Clients\r\n              if (userProfile?.role === 'client') {\r\n                return card.id === 'printers-dashboard' || card.id === 'clients';\r\n              }\r\n              // All other users see everything\r\n              return true;\r\n            }).map(card => {\r\n              const Icon = card.icon;\r\n              const isSelected = selectedCard === card.id;\r\n              \r\n              return (\r\n                <Card \r\n                  key={card.id}\r\n                  className={`cursor-pointer transition-all duration-200 ${\r\n                    isSelected ? card.activeColor : card.color\r\n                  } hover:shadow-lg transform hover:scale-[1.02] active:scale-[0.98] border-2`} \r\n                  onClick={() => {\r\n                    setSelectedCard(card.id);\r\n                    setExpandedCard(null);\r\n                    card.onClick();\r\n                  }}\r\n                >\r\n                  <CardContent className=\"p-4\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center space-x-4\">\r\n                        <div className={`p-3 rounded-xl ${card.color} shadow-sm`}>\r\n                          <Icon className={`h-7 w-7 ${card.iconColor}`} />\r\n                        </div>\r\n                        <div className=\"flex-1 min-w-0\">\r\n                          <h3 className=\"font-bold text-lg text-gray-900 leading-tight\">{card.title}</h3>\r\n                          <p className=\"text-sm text-gray-600 mt-1\">{card.description}</p>\r\n                        </div>\r\n                      </div>\r\n                      <ChevronRight className={`h-6 w-6 transition-transform duration-200 flex-shrink-0 ${\r\n                        isSelected ? 'rotate-90 text-gray-700' : 'text-gray-400'\r\n                      }`} />\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modals */}\r\n      <ClientListModal\r\n        isOpen={showClientListModal}\r\n        onClose={() => setShowClientListModal(false)}\r\n        onClientSelected={client => navigate(`/clients/${client.id}`)}\r\n        title=\"Select a Client\"\r\n        description=\"Choose a client to view their details.\"\r\n      />\r\n      \r\n      <SupplierListModal\r\n        isOpen={showSupplierListModal}\r\n        onClose={() => setShowSupplierListModal(false)}\r\n        onSupplierSelected={supplier => navigate(`/suppliers/${supplier.id}`)}\r\n        title=\"Select a Supplier\"\r\n        description=\"Choose a supplier to view their details.\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","\r\nimport { Home, Users, ShoppingCart, Printer, Truck, Package, ArrowLeft } from \"lucide-react\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport NavigationButton from '@/PrinterDashboard/components/NavigationButton';\r\n\r\ninterface Tab {\r\n  id: string;\r\n  label: string;\r\n  icon?: React.ComponentType<{ size?: number; className?: string }>;\r\n}\r\n\r\ninterface BottomNavigationProps {\r\n  activeTab: string;\r\n  onTabChange: (tab: string) => void;\r\n  tabs?: Tab[];\r\n  showBackButton?: boolean;\r\n  onBackClick?: () => void;\r\n  rightButton?: React.ReactNode;\r\n}\r\n\r\nexport const BottomNavigation = ({ \r\n  activeTab, \r\n  onTabChange, \r\n  tabs, \r\n  showBackButton = true,\r\n  onBackClick,\r\n  rightButton \r\n}: BottomNavigationProps) => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const defaultTabs = [\r\n    { id: \"dashboard\", label: \"Home\", icon: Home },\r\n    { id: \"clients\", label: \"Clients\", icon: Users },\r\n    { id: \"sales\", label: \"Sales\", icon: ShoppingCart },\r\n    { id: \"printers\", label: \"Printers\", icon: Printer },\r\n    { id: \"suppliers\", label: \"Suppliers\", icon: Truck },\r\n    { id: \"products\", label: \"Products\", icon: Package },\r\n  ];\r\n\r\n  const tabsToRender = tabs || defaultTabs;\r\n\r\n  const handleBackClick = () => {\r\n    if (onBackClick) {\r\n      onBackClick();\r\n    } else {\r\n      navigate('/');\r\n    }\r\n  };\r\n\r\n  function getGridColsClass(n: number) {\r\n    switch (n) {\r\n      case 2: return \"grid-cols-2\";\r\n      case 3: return \"grid-cols-3\";\r\n      case 4: return \"grid-cols-4\";\r\n      case 5: return \"grid-cols-5\";\r\n      case 6: return \"grid-cols-6\";\r\n      case 7: return \"grid-cols-7\";\r\n      case 8: return \"grid-cols-8\";\r\n      default: return \"grid-cols-1\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className=\"fixed bottom-0 left-0 w-full z-50 bg-white/95 backdrop-blur-lg border-t border-gray-200 shadow-2xl flex items-center px-1 sm:px-2 py-1 sm:py-2 transition-all safe-area-bottom\">\r\n      {/* Back button - left side with icon */}\r\n      {showBackButton && (\r\n        <div className=\"flex-shrink-0 sm:mr-2\">\r\n          <button\r\n            onClick={handleBackClick}\r\n            className=\"h-12 w-12 rounded-lg flex items-center justify-center text-gray-500 hover:text-gray-700 hover:bg-gray-50 transition-all duration-200\"\r\n            aria-label=\"Back\"\r\n          >\r\n            <ArrowLeft className=\"h-5 w-5\" />\r\n          </button>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Center section - Tab Navigation */}\r\n      <div className=\"flex-1 flex justify-center min-w-0\">\r\n        <div className={`grid ${getGridColsClass(tabsToRender.length)} w-full gap-1 max-w-md`}>\r\n          {tabsToRender.map((tab) => {\r\n            const Icon = tab.icon;\r\n            const isActive = activeTab === tab.id;\r\n            return (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => onTabChange(tab.id)}\r\n                className={`h-12 w-full rounded-lg flex flex-col items-center justify-center gap-1 min-w-0 flex-1 transition-all duration-200 ${\r\n                  isActive\r\n                    ? 'bg-blue-600 text-white shadow-lg hover:bg-blue-700'\r\n                    : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                {Icon && (\r\n                  <Icon\r\n                    size={16}\r\n                    className={`h-4 w-4 transition-transform duration-200 ${\r\n                      isActive ? 'scale-110 text-white' : 'text-gray-500'\r\n                    }`}\r\n                  />\r\n                )}\r\n                <span\r\n                  className={`text-xs font-medium transition-all duration-200 ${\r\n                    isActive ? 'font-semibold text-white' : ''\r\n                  }`}\r\n                >\r\n                  {tab.label}\r\n                </span>\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Right side - optional button or placeholder */}\r\n      <div className=\"flex-shrink-0 sm:ml-2\">\r\n        {rightButton || <div className=\"w-10\"></div>}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","\r\nimport { useState, useEffect } from \"react\";\r\nimport { Printer, Plus, Search } from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { supabase } from \"@/integrations/supabase/client\";\r\nimport { Database } from \"@/integrations/supabase/types\";\r\nimport { CustomLoading } from \"@/components/ui/CustomLoading\";\r\n\r\ntype PrinterWithProducts = {\r\n  id: string;\r\n  name: string;\r\n  model: string | null;\r\n  status: string | null;\r\n  manufacturer: string | null;\r\n  printer_type: string | null;\r\n  products: {\r\n    id: string;\r\n    name: string;\r\n  }[];\r\n};\r\n\r\ntype PrinterWithAssignments = {\r\n  id: string;\r\n  name: string;\r\n  model: string | null;\r\n  status: string | null;\r\n  manufacturer: string | null;\r\n  printer_type: string | null;\r\n  assignedClients: {\r\n    clientName: string;\r\n    count: number;\r\n  }[];\r\n  products: {\r\n    id: string;\r\n    name: string;\r\n  }[];\r\n};\r\n\r\nexport const PrintersPage = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [allPrinters, setAllPrinters] = useState<PrinterWithProducts[]>([]);\r\n  const [assignedPrinters, setAssignedPrinters] = useState<PrinterWithAssignments[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState<\"assigned\" | \"all\">(\"assigned\");\r\n\r\n  const fetchAllPrinters = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('printers')\r\n        .select(`\r\n          id,\r\n          name,\r\n          model,\r\n          status,\r\n          manufacturer,\r\n          printer_type,\r\n          product_printers(\r\n            products(\r\n              id,\r\n              name\r\n            )\r\n          )\r\n        `)\r\n        .order('name');\r\n\r\n      if (error) {\r\n        console.error('Error fetching all printers:', error);\r\n        return;\r\n      }\r\n\r\n      const transformedData: PrinterWithProducts[] = (data || []).map(printer => ({\r\n        id: printer.id,\r\n        name: printer.name,\r\n        model: printer.model,\r\n        status: printer.status,\r\n        manufacturer: printer.manufacturer,\r\n        printer_type: printer.printer_type,\r\n        products: printer.product_printers?.map(pp => pp.products).filter(Boolean) || []\r\n      }));\r\n\r\n      setAllPrinters(transformedData);\r\n    } catch (error) {\r\n      console.error('Error fetching all printers:', error);\r\n    }\r\n  };\r\n\r\n  const fetchAssignedPrinters = async () => {\r\n    try {\r\n      // First get all printers with their products\r\n      const { data: printersData, error: printersError } = await supabase\r\n        .from('printers')\r\n        .select(`\r\n          id,\r\n          name,\r\n          model,\r\n          status,\r\n          manufacturer,\r\n          printer_type,\r\n          product_printers(\r\n            products(\r\n              id,\r\n              name\r\n            )\r\n          )\r\n        `)\r\n        .order('name');\r\n\r\n      if (printersError) {\r\n        console.error('Error fetching printers:', printersError);\r\n        return;\r\n      }\r\n\r\n      // Then get all assignments with client info\r\n      const { data: assignmentsData, error: assignmentsError } = await supabase\r\n        .from('printer_assignments')\r\n        .select(`\r\n          printer_id,\r\n          status,\r\n          clients(\r\n            name\r\n          )\r\n        `)\r\n        .eq('status', 'active');\r\n\r\n      if (assignmentsError) {\r\n        console.error('Error fetching assignments:', assignmentsError);\r\n        return;\r\n      }\r\n\r\n      // Group assignments by printer_id and count clients\r\n      const assignmentsByPrinter = assignmentsData?.reduce((acc, assignment) => {\r\n        if (!assignment.printer_id || !assignment.clients?.name) return acc;\r\n        \r\n        if (!acc[assignment.printer_id]) {\r\n          acc[assignment.printer_id] = {};\r\n        }\r\n        \r\n        const clientName = assignment.clients.name;\r\n        acc[assignment.printer_id][clientName] = (acc[assignment.printer_id][clientName] || 0) + 1;\r\n        \r\n        return acc;\r\n      }, {} as Record<string, Record<string, number>>) || {};\r\n\r\n      // Transform the data\r\n      const transformedData: PrinterWithAssignments[] = (printersData || []).map(printer => {\r\n        const assignments = assignmentsByPrinter[printer.id] || {};\r\n        const assignedClients = Object.entries(assignments).map(([clientName, count]) => ({\r\n          clientName,\r\n          count\r\n        }));\r\n\r\n        return {\r\n          id: printer.id,\r\n          name: printer.name,\r\n          model: printer.model,\r\n          status: printer.status,\r\n          manufacturer: printer.manufacturer,\r\n          printer_type: printer.printer_type,\r\n          assignedClients,\r\n          products: printer.product_printers?.map(pp => pp.products).filter(Boolean) || []\r\n        };\r\n      });\r\n\r\n      setAssignedPrinters(transformedData);\r\n    } catch (error) {\r\n      console.error('Error fetching assigned printers:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      setLoading(true);\r\n      if (activeTab === \"all\") {\r\n        await fetchAllPrinters();\r\n      } else {\r\n        await fetchAssignedPrinters();\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    loadData();\r\n  }, [activeTab]);\r\n\r\n  const getFilteredPrinters = () => {\r\n    if (activeTab === \"all\") {\r\n      return allPrinters.filter(printer =>\r\n        printer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        (printer.model && printer.model.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n        (printer.manufacturer && printer.manufacturer.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n        printer.products.some(product =>\r\n          product.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n        )\r\n      );\r\n    } else {\r\n      return assignedPrinters.filter(printer =>\r\n        printer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        (printer.model && printer.model.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n        (printer.manufacturer && printer.manufacturer.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n        printer.assignedClients.some(client => \r\n          client.clientName.toLowerCase().includes(searchTerm.toLowerCase())\r\n        ) ||\r\n        printer.products.some(product =>\r\n          product.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const filteredPrinters = getFilteredPrinters();\r\n\r\n  return (\r\n    <div className=\"p-4 pb-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-lg font-semibold\">Printers</h2>\r\n        <Button\r\n          size=\"sm\"\r\n          className=\"bg-blue-600 hover:bg-blue-700\"\r\n        >\r\n          <Plus size={16} className=\"mr-2\" />\r\n          Add Printer\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Search */}\r\n      <div className=\"mb-4\">\r\n        <div className=\"relative\">\r\n          <Search size={16} className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n          <Input\r\n            placeholder=\"Search printers, models, clients, or products...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"pl-10\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Filter Tabs */}\r\n      <div className=\"flex space-x-2 mb-4\">\r\n        <Button \r\n          variant={activeTab === \"assigned\" ? \"default\" : \"outline\"} \r\n          size=\"sm\" \r\n          className={activeTab === \"assigned\" ? \"bg-blue-600 hover:bg-blue-700 px-6\" : \"px-6\"}\r\n          onClick={() => setActiveTab(\"assigned\")}\r\n        >\r\n          Assigned\r\n        </Button>\r\n        <Button \r\n          variant={activeTab === \"all\" ? \"default\" : \"outline\"} \r\n          size=\"sm\" \r\n          className={activeTab === \"all\" ? \"bg-blue-600 hover:bg-blue-700 px-6\" : \"px-6\"}\r\n          onClick={() => setActiveTab(\"all\")}\r\n        >\r\n          All Printers\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Printers List */}\r\n      {loading ? (\r\n        <CustomLoading message=\"Loading printers\" />\r\n      ) : filteredPrinters.length === 0 ? (\r\n        <div className=\"text-center py-12\">\r\n          <Printer size={48} className=\"mx-auto text-gray-400 mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-500 mb-2\">\r\n            {searchTerm ? \"No printers found\" : \"No printers yet\"}\r\n          </h3>\r\n          <p className=\"text-gray-400 mb-4\">\r\n            {searchTerm \r\n              ? \"Try adjusting your search terms\" \r\n              : \"Start by adding your first printer\"\r\n            }\r\n          </p>\r\n          {!searchTerm && (\r\n            <Button>\r\n              <Plus size={16} className=\"mr-2\" />\r\n              Add Your First Printer\r\n            </Button>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"space-y-3\">\r\n          {filteredPrinters.map((printer) => (\r\n            <Card key={printer.id} className=\"hover:shadow-md transition-shadow cursor-pointer\">\r\n              <CardContent className=\"p-4\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n                      <Printer size={20} className=\"text-blue-600\" />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex-1 min-w-0 space-y-3\">\r\n                    {/* Header with Name and Model */}\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <h3 className=\"font-semibold text-gray-900\">{printer.name}</h3>\r\n                        {printer.model && (\r\n                          <span className=\"text-sm text-gray-500\">({printer.model})</span>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        {printer.manufacturer && (\r\n                          <Badge variant=\"outline\" className=\"text-xs\">\r\n                            {printer.manufacturer}\r\n                          </Badge>\r\n                        )}\r\n                        {printer.printer_type && (\r\n                          <Badge variant=\"secondary\" className=\"text-xs\">\r\n                            {printer.printer_type}\r\n                          </Badge>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Assigned Clients or Status */}\r\n                    {activeTab === \"assigned\" ? (\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-700 mb-1\">Assigned To:</p>\r\n                        {(printer as PrinterWithAssignments).assignedClients.length > 0 ? (\r\n                          <div className=\"flex flex-wrap gap-1\">\r\n                            {(printer as PrinterWithAssignments).assignedClients.map((client, index) => (\r\n                              <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n                                {client.clientName} ({client.count})\r\n                              </Badge>\r\n                            ))}\r\n                          </div>\r\n                        ) : (\r\n                          <Badge variant=\"outline\" className=\"text-xs text-gray-500\">\r\n                            Unassigned\r\n                          </Badge>\r\n                        )}\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-700 mb-1\">Status:</p>\r\n                        <Badge \r\n                          className={\r\n                            printer.status === 'active' \r\n                              ? \"bg-green-100 text-green-800\" \r\n                              : \"bg-gray-100 text-gray-800\"\r\n                          }\r\n                        >\r\n                          {printer.status || 'Unknown'}\r\n                        </Badge>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Compatible Products */}\r\n                    {printer.products.length > 0 && (\r\n                      <div>\r\n                        <p className=\"text-sm font-medium text-gray-700 mb-1\">Compatible Products:</p>\r\n                        <div className=\"flex flex-wrap gap-1\">\r\n                          {printer.products.map((product) => (\r\n                            <Badge key={product.id} variant=\"secondary\" className=\"text-xs\">\r\n                              {product.name}\r\n                            </Badge>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","\r\nimport { useState } from \"react\";\r\nimport { Users, Plus, Search } from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\n\r\nexport const SuppliersPage = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  \r\n  // Mock data - replace with actual data from your suppliers hook\r\n  const suppliers = [\r\n    { id: \"1\", name: \"Meyink\", type: \"supplier\" },\r\n    { id: \"2\", name: \"Starink\", type: \"supplier\" },\r\n    { id: \"3\", name: \"TonerPro\", type: \"supplier\" },\r\n    { id: \"4\", name: \"ZK Import\", type: \"supplier\" }\r\n  ];\r\n\r\n  const filteredSuppliers = suppliers.filter(supplier =>\r\n    supplier.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"p-4 pb-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-lg font-semibold\">Suppliers</h2>\r\n        <Button\r\n          size=\"sm\"\r\n          className=\"bg-blue-600 hover:bg-blue-700\"\r\n        >\r\n          <Plus size={16} className=\"mr-2\" />\r\n          Add Supplier\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Search */}\r\n      <div className=\"mb-4\">\r\n        <div className=\"relative\">\r\n          <Search size={16} className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n          <Input\r\n            placeholder=\"Search suppliers...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"pl-10\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Suppliers List */}\r\n      {filteredSuppliers.length === 0 ? (\r\n        <div className=\"text-center py-12\">\r\n          <Users size={48} className=\"mx-auto text-gray-400 mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-gray-500 mb-2\">\r\n            {searchTerm ? \"No suppliers found\" : \"No suppliers yet\"}\r\n          </h3>\r\n          <p className=\"text-gray-400 mb-4\">\r\n            {searchTerm \r\n              ? \"Try adjusting your search terms\" \r\n              : \"Start by adding your first supplier\"\r\n            }\r\n          </p>\r\n          {!searchTerm && (\r\n            <Button>\r\n              <Plus size={16} className=\"mr-2\" />\r\n              Add Your First Supplier\r\n            </Button>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"space-y-3\">\r\n          {filteredSuppliers.map((supplier) => (\r\n            <Card key={supplier.id} className=\"hover:shadow-md transition-shadow cursor-pointer\">\r\n              <CardContent className=\"p-4\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n                      <Users size={20} className=\"text-blue-600\" />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <h3 className=\"font-semibold text-gray-900\">{supplier.name}</h3>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","\r\nimport { useState } from \"react\";\r\nimport { ArrowLeft } from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { BottomNavigation } from \"@/components/BottomNavigation\";\r\nimport { PrintersPage } from \"@/components/pages/PrintersPage\";\r\nimport { SuppliersPage } from \"@/components/pages/SuppliersPage\";\r\n\r\ninterface ManagementDashboardProps {\r\n  onBack: () => void;\r\n}\r\n\r\nexport const ManagementDashboard = ({ onBack }: ManagementDashboardProps) => {\r\n  const [activeTab, setActiveTab] = useState(\"printers\");\r\n\r\n  const renderActiveTab = () => {\r\n    switch (activeTab) {\r\n      case \"printers\":\r\n        return <PrintersPage />;\r\n      case \"suppliers\":\r\n        return <SuppliersPage />;\r\n      default:\r\n        return <PrintersPage />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white\">\r\n      <div className=\"p-4 border-b bg-white sticky top-0 z-10\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={onBack}\r\n            className=\"p-2\"\r\n          >\r\n            <ArrowLeft className=\"h-5 w-5\" />\r\n          </Button>\r\n          <h1 className=\"text-lg font-semibold\">Management</h1>\r\n        </div>\r\n      </div>\r\n      \r\n      <main className=\"flex-1 overflow-y-auto pb-20\">\r\n        {renderActiveTab()}\r\n      </main>\r\n      \r\n      <BottomNavigation \r\n        activeTab={activeTab} \r\n        onTabChange={setActiveTab}\r\n        tabs={[\r\n          { id: \"printers\", label: \"Printers\" },\r\n          { id: \"suppliers\", label: \"Suppliers\" }\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","\r\nimport { useState } from \"react\";\r\nimport { Plus, ShoppingCart, FileText, Truck } from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { SalesTab } from \"@/components/sales/SalesTab\";\r\nimport { Sale } from \"@/types/sales\";\r\n\r\nexport const SalesPage = () => {\r\n  const [sales, setSales] = useState<Sale[]>([]);\r\n  const [activeTab, setActiveTab] = useState(\"pos\");\r\n\r\n  // Summary stats\r\n  const totalSales = sales.reduce((sum, sale) => sum + sale.totalAmount, 0);\r\n  const pendingSales = sales.filter(s => s.status === 'pending').length;\r\n  const completedSales = sales.filter(s => s.status === 'paid').length;\r\n\r\n  return (\r\n    <div className=\"px-4 py-4 pb-24\">\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900\">Sales Management</h2>\r\n      </div>\r\n\r\n      {/* Summary Cards */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-6\">\r\n        <Card className=\"rounded-xl shadow-md\">\r\n          <CardContent className=\"p-4 text-center\">\r\n            <div className=\"text-2xl font-bold text-green-600\">â‚±{totalSales.toFixed(2)}</div>\r\n            <div className=\"text-sm text-gray-500 mt-1\">Total Sales</div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card className=\"rounded-xl shadow-md\">\r\n          <CardContent className=\"p-4 text-center\">\r\n            <div className=\"text-2xl font-bold text-orange-600\">{pendingSales}</div>\r\n            <div className=\"text-sm text-gray-500 mt-1\">Pending Sales</div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card className=\"rounded-xl shadow-md\">\r\n          <CardContent className=\"p-4 text-center\">\r\n            <div className=\"text-2xl font-bold text-blue-600\">{completedSales}</div>\r\n            <div className=\"text-sm text-gray-500 mt-1\">Completed Sales</div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Enhanced Tabs */}\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\r\n        <TabsList className=\"grid w-full grid-cols-4 mb-6\">\r\n          <TabsTrigger value=\"pos\" className=\"flex items-center space-x-2\">\r\n            <ShoppingCart size={16} />\r\n            <span className=\"hidden sm:inline\">POS</span>\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"transactions\" className=\"flex items-center space-x-2\">\r\n            <Plus size={16} />\r\n            <span className=\"hidden sm:inline\">Sales</span>\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"purchase-orders\" className=\"flex items-center space-x-2\">\r\n            <FileText size={16} />\r\n            <span className=\"hidden sm:inline\">PO</span>\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"deliveries\" className=\"flex items-center space-x-2\">\r\n            <Truck size={16} />\r\n            <span className=\"hidden sm:inline\">Deliveries</span>\r\n          </TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"pos\">\r\n          <SalesTab sales={sales} setSales={setSales} activeTab=\"pos\" />\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"transactions\">\r\n          <SalesTab sales={sales} setSales={setSales} activeTab=\"transactions\" />\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"purchase-orders\">\r\n          <SalesTab sales={sales} setSales={setSales} activeTab=\"purchase-orders\" />\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"deliveries\">\r\n          <SalesTab sales={sales} setSales={setSales} activeTab=\"deliveries\" />\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n","\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { BottomNavigation } from \"@/components/BottomNavigation\";\r\nimport { SalesOverview } from \"./SalesOverview\";\r\nimport { SalesPage } from \"@/components/pages/SalesPage\";\r\nimport TopMobileHeader from '@/includes/TopMobileHeader';\r\n\r\ninterface SalesDashboardProps {\r\n  onBack?: () => void;\r\n}\r\n\r\nexport const SalesDashboard = ({ onBack }: SalesDashboardProps) => {\r\n  const [activeTab, setActiveTab] = useState(\"overview\");\r\n  const navigate = useNavigate();\r\n\r\n  const renderActiveTab = () => {\r\n    switch (activeTab) {\r\n      case \"overview\":\r\n        return <SalesOverview />;\r\n      case \"sales\":\r\n        return <SalesPage />;\r\n      case \"purchase-orders\":\r\n        return <div className=\"px-4 py-4\"><h2 className=\"text-lg font-semibold\">Purchase Orders - Coming Soon</h2></div>;\r\n      case \"deliveries\":\r\n        return <div className=\"px-4 py-4\"><h2 className=\"text-lg font-semibold\">Deliveries - Coming Soon</h2></div>;\r\n      default:\r\n        return <SalesOverview />;\r\n    }\r\n  };\r\n\r\n  // Generic client object for header\r\n  const salesClient = {\r\n    id: 'sales-dashboard',\r\n    name: 'Sales Dashboard',\r\n    contact_email: '',\r\n    phone: '',\r\n    notes: '',\r\n    address: '',\r\n    contact_person: '',\r\n    department_count: 0,\r\n    printer_count: 0,\r\n    location_count: 0,\r\n    created_at: '',\r\n    updated_at: '',\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white\">\r\n      <TopMobileHeader\r\n        client={salesClient}\r\n        onBack={() => navigate('/')}\r\n        onEdit={() => {}}\r\n        appVersion=\"1.0.0\"\r\n      />\r\n      <main className=\"flex-1 overflow-y-auto pb-20\">\r\n        {renderActiveTab()}\r\n      </main>\r\n      <BottomNavigation \r\n        activeTab={activeTab} \r\n        onTabChange={(tab) => {\r\n          if (tab === \"overview\") {\r\n            navigate('/overview');\r\n          } else {\r\n            setActiveTab(tab);\r\n          }\r\n        }}\r\n        tabs={[\r\n          { id: \"overview\", label: \"Overview\" },\r\n          { id: \"sales\", label: \"Sales\" },\r\n          { id: \"purchase-orders\", label: \"Purchase Order\" },\r\n          { id: \"deliveries\", label: \"Deliveries\" }\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}; ","\r\nimport React from 'react';\r\nimport { Dialog, DialogContent, DialogTitle, DialogDescription, DialogFooter } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Download, Sparkles, AlertTriangle, FlaskConical, Clock } from 'lucide-react';\r\nimport { VersionInfo } from '@/services/updateService';\r\n\r\ninterface WhatsNewModalProps {\r\n  open: boolean;\r\n  onOpenChange: (open: boolean) => void;\r\n  versionInfo: VersionInfo;\r\n  currentVersion: string;\r\n  onUpdate: () => void;\r\n  onRemindLater: () => void;\r\n}\r\n\r\nexport const WhatsNewModal: React.FC<WhatsNewModalProps> = ({\r\n  open,\r\n  onOpenChange,\r\n  versionInfo,\r\n  currentVersion,\r\n  onUpdate,\r\n  onRemindLater\r\n}) => {\r\n  const getUpdateIcon = (updateType: VersionInfo['updateType']) => {\r\n    switch (updateType) {\r\n      case 'critical':\r\n        return <AlertTriangle className=\"h-5 w-5\" />;\r\n      case 'beta':\r\n        return <FlaskConical className=\"h-5 w-5\" />;\r\n      default:\r\n        return <Sparkles className=\"h-5 w-5\" />;\r\n    }\r\n  };\r\n\r\n  const getUpdateBadgeVariant = (updateType: VersionInfo['updateType']) => {\r\n    switch (updateType) {\r\n      case 'critical':\r\n        return 'destructive';\r\n      case 'beta':\r\n        return 'secondary';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const getUpdateTypeLabel = (updateType: VersionInfo['updateType']) => {\r\n    switch (updateType) {\r\n      case 'critical':\r\n        return 'Critical Update';\r\n      case 'beta':\r\n        return 'Beta Release';\r\n      default:\r\n        return 'Feature Update';\r\n    }\r\n  };\r\n\r\n  const formatReleaseDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  const formatFileSize = (bytes?: number) => {\r\n    if (!bytes) return '';\r\n    const mb = bytes / (1024 * 1024);\r\n    return `${mb.toFixed(1)} MB`;\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogContent className=\"max-w-md\">\r\n        <DialogTitle className=\"flex items-center gap-2\">\r\n          {getUpdateIcon(versionInfo.updateType)}\r\n          What's New in v{versionInfo.version}\r\n        </DialogTitle>\r\n        \r\n        <DialogDescription asChild>\r\n          <div className=\"space-y-4\">\r\n            {/* Update Type Badge */}\r\n            <div className=\"flex items-center justify-between\">\r\n              <Badge \r\n                variant={getUpdateBadgeVariant(versionInfo.updateType)}\r\n                className=\"flex items-center gap-1\"\r\n              >\r\n                {getUpdateIcon(versionInfo.updateType)}\r\n                {getUpdateTypeLabel(versionInfo.updateType)}\r\n              </Badge>\r\n              {versionInfo.isRequired && (\r\n                <Badge variant=\"destructive\" className=\"text-xs\">\r\n                  Required\r\n                </Badge>\r\n              )}\r\n            </div>\r\n\r\n            {/* Version Information */}\r\n            <div className=\"bg-gray-50 rounded-lg p-3 space-y-2\">\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span className=\"text-gray-600\">Current Version:</span>\r\n                <span className=\"font-medium\">v{currentVersion}</span>\r\n              </div>\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span className=\"text-gray-600\">New Version:</span>\r\n                <span className=\"font-medium text-blue-600\">v{versionInfo.version}</span>\r\n              </div>\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span className=\"text-gray-600\">Release Date:</span>\r\n                <span className=\"font-medium\">{formatReleaseDate(versionInfo.releaseDate)}</span>\r\n              </div>\r\n              {versionInfo.fileSize && (\r\n                <div className=\"flex justify-between text-sm\">\r\n                  <span className=\"text-gray-600\">Download Size:</span>\r\n                  <span className=\"font-medium\">{formatFileSize(versionInfo.fileSize)}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* What's New List */}\r\n            <div className=\"space-y-2\">\r\n              <h4 className=\"font-medium text-gray-900\">What's New:</h4>\r\n              <ul className=\"space-y-1\">\r\n                {versionInfo.whatsNew.map((item, index) => (\r\n                  <li key={index} className=\"flex items-start gap-2 text-sm text-gray-700\">\r\n                    <div className=\"w-1.5 h-1.5 bg-blue-500 rounded-full mt-2 flex-shrink-0\" />\r\n                    {item}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </DialogDescription>\r\n\r\n        <DialogFooter className=\"flex-col sm:flex-row gap-2\">\r\n          {!versionInfo.isRequired && (\r\n            <Button \r\n              variant=\"ghost\" \r\n              onClick={onRemindLater}\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              <Clock className=\"h-4 w-4\" />\r\n              Remind Me Later\r\n            </Button>\r\n          )}\r\n          <Button \r\n            onClick={onUpdate}\r\n            className=\"flex items-center gap-2\"\r\n            variant={versionInfo.updateType === 'critical' ? 'destructive' : 'default'}\r\n          >\r\n            <Download className=\"h-4 w-4\" />\r\n            {versionInfo.updateType === 'critical' ? 'Update Now' : 'Download Update'}\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","\r\nimport { useState } from \"react\";\r\nimport { DashboardPage } from \"@/components/pages/DashboardPage\";\r\nimport { ManagementDashboard } from \"@/components/pages/ManagementDashboard\";\r\nimport { SalesDashboard } from \"@/SalesDashboard/SalesDashboard\";\r\nimport { WhatsNewModal } from '@/components/header/WhatsNewModal';\r\nimport { useBackgroundUpdateChecker } from '@/hooks/useBackgroundUpdateChecker';\r\nimport { APP_VERSION } from '@/utils/version';\r\n\r\ntype MainSection = \"home\" | \"management\" | \"sales\" | \"products\";\r\n\r\nconst Index = () => {\r\n  const [activeSection, setActiveSection] = useState<MainSection>(\"home\");\r\n\r\n  const {\r\n    hasUpdates,\r\n    showWhatsNew,\r\n    handleUpdate,\r\n    handleRemindLater,\r\n    handleCloseWhatsNew,\r\n    latestVersionInfo\r\n  } = useBackgroundUpdateChecker({\r\n    currentVersion: APP_VERSION,\r\n    enableNotifications: true,\r\n    enableBackgroundChecks: true\r\n  });\r\n\r\n  const handleSectionChange = (section: MainSection) => {\r\n    setActiveSection(section);\r\n  };\r\n\r\n  const renderActiveSection = () => {\r\n    switch (activeSection) {\r\n      case \"home\":\r\n        return (\r\n          <DashboardPage\r\n            onNavigateToSection={handleSectionChange}\r\n          />\r\n        );\r\n      case \"management\":\r\n        return <ManagementDashboard onBack={() => setActiveSection(\"home\")} />;\r\n      case \"sales\":\r\n        return <SalesDashboard onBack={() => setActiveSection(\"home\")} />;\r\n      default:\r\n        return (\r\n          <DashboardPage\r\n            onNavigateToSection={handleSectionChange}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col bg-gradient-to-br from-slate-50 to-blue-50 relative\">\r\n      {/* Main Content Area - Mobile Optimized */}\r\n      <main className=\"flex-1 overflow-y-auto overscroll-contain\">\r\n        <div className=\"min-h-screen pb-16\">\r\n          {renderActiveSection()}\r\n        </div>\r\n      </main>\r\n\r\n      {/* What's New Modal */}\r\n      {latestVersionInfo && (\r\n        <WhatsNewModal\r\n          open={showWhatsNew}\r\n          onOpenChange={handleCloseWhatsNew}\r\n          versionInfo={latestVersionInfo}\r\n          currentVersion={APP_VERSION}\r\n          onUpdate={handleUpdate}\r\n          onRemindLater={handleRemindLater}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"names":["Paperclip","createLucideIcon","Repeat","modalBackdropStyle","modalStyle","AccountSettings","isOpen","onClose","user","setUser","useState","name","setName","email","setEmail","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","infoMessage","setInfoMessage","errorMessage","setErrorMessage","loading","setLoading","useEffect","data","error","supabase","_a","handleSaveProfile","err","handleChangePassword","e","signInError","jsx","jsxs","Input","Button","textLogo","AddSalesModal","clients","clientsLoading","useClients","saleDate","setSaleDate","selectedClient","setSelectedClient","clientSelectionOpen","setClientSelectionOpen","clientSearch","setClientSearch","productQuery","setProductQuery","productResults","setProductResults","productSearchLoading","setProductSearchLoading","addedProducts","setAddedProducts","addItemModalOpen","setAddItemModalOpen","qtyPromptOpen","setQtyPromptOpen","qtyPromptProduct","setQtyPromptProduct","qtyInput","setQtyInput","qtyInputRef","useRef","pricingMap","setPricingMap","withholdingTaxEnabled","setWithholdingTaxEnabled","withholdingTaxRate","setWithholdingTaxRate","receiptType","setReceiptType","poNumber","setPONumber","drNumber","setDRNumber","invoiceNumber","setInvoiceNumber","setError","showConfirm","setShowConfirm","useToast","customerId","setCustomerId","dueDate","setDueDate","dueDateInputType","setDueDateInputType","attachedFiles","setAttachedFiles","showDateModal","setShowDateModal","confirmCheckbox","setConfirmCheckbox","dateInputRef","selectedClientObj","c","cancelled","results","productService","handleAddProductClick","product","handleConfirmQty","prev","handleCancelQty","allProductIds","p","newPricing","productId","productWithClients","clientEntry","totalSalesAmount","sum","VAT_RATE","vatAmount","netOfVat","discount","withholdingTax","totalAmountDue","filteredClients","client","filteredProductResults","getStatusForTransaction","sendSaleToGoogleSheets","status","month","row","payload","handleComplete","handleConfirmSale","handleCancelConfirm","Fragment","ShoppingCart","Calendar","idx","DevTesting","open","activeDevTab","setActiveDevTab","gsStatus","setGsStatus","testSale","MobileSearchInput","value","onChange","placeholder","className","Search","colorClasses","ColorDot","color","colorClass","TransactionRecordModal","FileText","TransactionRecordsList","DashboardProductSearch","searchQuery","setSearchQuery","searchType","setSearchType","selectedProduct","setSelectedProduct","showProductDetails","setShowProductDetails","productsWithPricing","setProductsWithPricing","printersWithProducts","setPrintersWithProducts","showSupplierPrices","setShowSupplierPrices","showClientPrices","setShowClientPrices","showAddMenu","setShowAddMenu","showSalesModal","setShowSalesModal","showPurchaseModal","setShowPurchaseModal","showDeliveryModal","setShowDeliveryModal","showPlaceholderModal","setShowPlaceholderModal","showAccountSettings","setShowAccountSettings","showDeveloperModal","setShowDeveloperModal","showTransactionRecordsModal","setShowTransactionRecordsModal","userProfile","useAuth","useLocation","timeoutId","products","printers","printerService","printer","pp","index","self","productsWithPricingData","withSuppliers","withClients","printersWithProductsData","handleCloseProductDetails","toggleSupplierPrice","toggleClientPrice","getAssignmentStatusInfo","a","AddPurchaseModal","CreateDeliveryModal","DropdownMenu","DropdownMenuTrigger","User","DropdownMenuContent","DropdownMenuItem","Settings","LogOut","Printer","Package","AnimatePresence","motion","Plus","CustomLoading","filteredSuppliers","s","Eye","supplierRelation","_b","clientRelation","statusInfo","Badge","grouped","acc","key","group","ProductDetailsModal","Dialog","DialogContent","DialogHeader","DialogTitle","SupplierListModal","onSupplierSelected","title","description","searchTerm","setSearchTerm","suppliers","useSuppliers","modalRef","cancelBtnRef","searchInputRef","handleKeyDown","supplier","Building2","DashboardPage","onNavigateToSection","selectedCard","setSelectedCard","expandedCard","setExpandedCard","showClientListModal","setShowClientListModal","showSupplierListModal","setShowSupplierListModal","navigate","useNavigate","menuCards","Users","DollarSign","TopMobileHeader","DatabaseSummary","card","Icon","isSelected","Card","CardContent","ChevronRight","ClientListModal","BottomNavigation","activeTab","onTabChange","tabs","showBackButton","onBackClick","rightButton","tabsToRender","Home","Truck","handleBackClick","getGridColsClass","n","ArrowLeft","tab","isActive","PrintersPage","allPrinters","setAllPrinters","assignedPrinters","setAssignedPrinters","setActiveTab","fetchAllPrinters","transformedData","fetchAssignedPrinters","printersData","printersError","assignmentsData","assignmentsError","assignmentsByPrinter","assignment","clientName","assignments","assignedClients","count","filteredPrinters","SuppliersPage","ManagementDashboard","onBack","renderActiveTab","SalesPage","sales","setSales","totalSales","sale","pendingSales","completedSales","Tabs","TabsList","TabsTrigger","TabsContent","SalesTab","SalesDashboard","SalesOverview","salesClient","WhatsNewModal","onOpenChange","versionInfo","currentVersion","onUpdate","onRemindLater","getUpdateIcon","updateType","AlertTriangle","FlaskConical","Sparkles","getUpdateBadgeVariant","getUpdateTypeLabel","formatReleaseDate","dateString","formatFileSize","bytes","DialogDescription","item","DialogFooter","Clock","Download","Index","activeSection","setActiveSection","hasUpdates","showWhatsNew","handleUpdate","handleRemindLater","handleCloseWhatsNew","latestVersionInfo","useBackgroundUpdateChecker","APP_VERSION","handleSectionChange","section","renderActiveSection"],"mappings":"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","x_google_ignoreList":[0,1]}