{"version":3,"file":"PrinterDashboard-YVrGXVMM.js","sources":["../../node_modules/lucide-react/dist/esm/icons/circle-plus.js","../../node_modules/lucide-react/dist/esm/icons/clipboard-list.js","../../node_modules/lucide-react/dist/esm/icons/external-link.js","../../node_modules/lucide-react/dist/esm/icons/info.js","../../node_modules/lucide-react/dist/esm/icons/layers.js","../../node_modules/lucide-react/dist/esm/icons/palette.js","../../node_modules/lucide-react/dist/esm/icons/pen-line.js","../../node_modules/lucide-react/dist/esm/icons/tag.js","../../node_modules/lucide-react/dist/esm/icons/unlink.js","../../node_modules/lucide-react/dist/esm/icons/wrench.js","../../src/PrinterDashboard/components/AssignedToSection.tsx","../../src/PrinterDashboard/UnassignPrinterModal.tsx","../../src/PrinterDashboard/TransferPrinterModal.tsx","../../src/PrinterDashboard/ViewPrinterModal.tsx","../../src/PrinterDashboard/components/modals/ClientDepartmentSelectionModal.tsx","../../src/PrinterDashboard/components/modals/EditAssignment.tsx","../../src/PrinterDashboard/components/AssignmentMaintenanceStatusForm.tsx","../../src/PrinterDashboard/components/modals/UpdateMaintenanceStatusModal.tsx","../../src/PrinterDashboard/PrinterDashboardCard.tsx","../../src/components/PrinterSpecificationsForm.tsx","../../src/components/EditPrinterFormModal.tsx","../../src/hooks/usePrinterActions.ts","../../src/PrinterDashboard/components/modals/DeleteAssignmentConfirmDialog.tsx","../../src/PrinterDashboard/components/modals/SelectWithAddNew.tsx","../../src/PrinterDashboard/components/modals/AssignPrinter.tsx","../../src/PrinterDashboard/components/modals/EditAssignmentSerialModal.tsx","../../src/PrinterDashboard/components/modals/AssignmentSelectionModal.tsx","../../src/PrinterDashboard/PrinterDashboardAvailable.tsx","../../src/PrinterDashboard/AddToInventoryModal.tsx","../../src/PrinterDashboard/DeletePrinterModal.tsx","../../src/PrinterDashboard/CompatibleProductUpdateModal.tsx","../../src/PrinterDashboard/PrinterCatalogCard.tsx","../../src/PrinterDashboard/AdminEmptyState.tsx","../../src/PrinterDashboard/components/PrinterHistoryModal.tsx","../../src/components/PrinterDetailsModal.tsx","../../src/PrinterDashboard/components/AllPrintersCard.tsx","../../src/PrinterDashboard/PrinterDashboardTab.tsx","../../src/PrinterDashboard/PrinterTabContent.tsx","../../src/PrinterDashboard/components/AddToInventoryModal.tsx","../../src/components/navigation/MobileNavLayout.tsx","../../src/PrinterDashboard/components/FilterButtons.tsx","../../src/PrinterDashboard/components/NavigationButton.tsx","../../src/PrinterDashboard/PrinterDashboardNav.tsx","../../src/PrinterDashboard/components/PrinterDashboardHelpBanner.tsx","../../src/PrinterDashboard/AddPrinterModal.tsx","../../src/PrinterDashboard/components/PrinterDashboardModals.tsx","../../src/utils/memoryManager.ts","../../src/PrinterDashboard/hooks/useOptimizedPrinterData.tsx","../../src/PrinterDashboard/hooks/usePrinterQueries.tsx","../../src/PrinterDashboard/hooks/useRealtimeSubscription.tsx","../../src/PrinterDashboard/PrinterDashboard.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CirclePlus = createLucideIcon(\"CirclePlus\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M8 12h8\", key: \"1wcyev\" }],\n  [\"path\", { d: \"M12 8v8\", key: \"napkw2\" }]\n]);\n\nexport { CirclePlus as default };\n//# sourceMappingURL=circle-plus.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ClipboardList = createLucideIcon(\"ClipboardList\", [\n  [\"rect\", { width: \"8\", height: \"4\", x: \"8\", y: \"2\", rx: \"1\", ry: \"1\", key: \"tgr4d6\" }],\n  [\n    \"path\",\n    {\n      d: \"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\",\n      key: \"116196\"\n    }\n  ],\n  [\"path\", { d: \"M12 11h4\", key: \"1jrz19\" }],\n  [\"path\", { d: \"M12 16h4\", key: \"n85exb\" }],\n  [\"path\", { d: \"M8 11h.01\", key: \"1dfujw\" }],\n  [\"path\", { d: \"M8 16h.01\", key: \"18s6g9\" }]\n]);\n\nexport { ClipboardList as default };\n//# sourceMappingURL=clipboard-list.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ExternalLink = createLucideIcon(\"ExternalLink\", [\n  [\"path\", { d: \"M15 3h6v6\", key: \"1q9fwt\" }],\n  [\"path\", { d: \"M10 14 21 3\", key: \"gplh6r\" }],\n  [\"path\", { d: \"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\", key: \"a6xqqp\" }]\n]);\n\nexport { ExternalLink as default };\n//# sourceMappingURL=external-link.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Info = createLucideIcon(\"Info\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M12 16v-4\", key: \"1dtifu\" }],\n  [\"path\", { d: \"M12 8h.01\", key: \"e9boi3\" }]\n]);\n\nexport { Info as default };\n//# sourceMappingURL=info.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Layers = createLucideIcon(\"Layers\", [\n  [\n    \"path\",\n    {\n      d: \"m12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83Z\",\n      key: \"8b97xw\"\n    }\n  ],\n  [\"path\", { d: \"m22 17.65-9.17 4.16a2 2 0 0 1-1.66 0L2 17.65\", key: \"dd6zsq\" }],\n  [\"path\", { d: \"m22 12.65-9.17 4.16a2 2 0 0 1-1.66 0L2 12.65\", key: \"ep9fru\" }]\n]);\n\nexport { Layers as default };\n//# sourceMappingURL=layers.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Palette = createLucideIcon(\"Palette\", [\n  [\"circle\", { cx: \"13.5\", cy: \"6.5\", r: \".5\", fill: \"currentColor\", key: \"1okk4w\" }],\n  [\"circle\", { cx: \"17.5\", cy: \"10.5\", r: \".5\", fill: \"currentColor\", key: \"f64h9f\" }],\n  [\"circle\", { cx: \"8.5\", cy: \"7.5\", r: \".5\", fill: \"currentColor\", key: \"fotxhn\" }],\n  [\"circle\", { cx: \"6.5\", cy: \"12.5\", r: \".5\", fill: \"currentColor\", key: \"qy21gx\" }],\n  [\n    \"path\",\n    {\n      d: \"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z\",\n      key: \"12rzf8\"\n    }\n  ]\n]);\n\nexport { Palette as default };\n//# sourceMappingURL=palette.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst PenLine = createLucideIcon(\"PenLine\", [\n  [\"path\", { d: \"M12 20h9\", key: \"t2du7b\" }],\n  [\n    \"path\",\n    {\n      d: \"M16.376 3.622a1 1 0 0 1 3.002 3.002L7.368 18.635a2 2 0 0 1-.855.506l-2.872.838a.5.5 0 0 1-.62-.62l.838-2.872a2 2 0 0 1 .506-.854z\",\n      key: \"1ykcvy\"\n    }\n  ]\n]);\n\nexport { PenLine as default };\n//# sourceMappingURL=pen-line.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Tag = createLucideIcon(\"Tag\", [\n  [\n    \"path\",\n    {\n      d: \"M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z\",\n      key: \"vktsd0\"\n    }\n  ],\n  [\"circle\", { cx: \"7.5\", cy: \"7.5\", r: \".5\", fill: \"currentColor\", key: \"kqv944\" }]\n]);\n\nexport { Tag as default };\n//# sourceMappingURL=tag.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Unlink = createLucideIcon(\"Unlink\", [\n  [\n    \"path\",\n    {\n      d: \"m18.84 12.25 1.72-1.71h-.02a5.004 5.004 0 0 0-.12-7.07 5.006 5.006 0 0 0-6.95 0l-1.72 1.71\",\n      key: \"yqzxt4\"\n    }\n  ],\n  [\n    \"path\",\n    {\n      d: \"m5.17 11.75-1.71 1.71a5.004 5.004 0 0 0 .12 7.07 5.006 5.006 0 0 0 6.95 0l1.71-1.71\",\n      key: \"4qinb0\"\n    }\n  ],\n  [\"line\", { x1: \"8\", x2: \"8\", y1: \"2\", y2: \"5\", key: \"1041cp\" }],\n  [\"line\", { x1: \"2\", x2: \"5\", y1: \"8\", y2: \"8\", key: \"14m1p5\" }],\n  [\"line\", { x1: \"16\", x2: \"16\", y1: \"19\", y2: \"22\", key: \"rzdirn\" }],\n  [\"line\", { x1: \"19\", x2: \"22\", y1: \"16\", y2: \"16\", key: \"ox905f\" }]\n]);\n\nexport { Unlink as default };\n//# sourceMappingURL=unlink.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Wrench = createLucideIcon(\"Wrench\", [\n  [\n    \"path\",\n    {\n      d: \"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\",\n      key: \"cbrjhi\"\n    }\n  ]\n]);\n\nexport { Wrench as default };\n//# sourceMappingURL=wrench.js.map\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { AlertCircle, CheckCircle, Clock } from 'lucide-react';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\ninterface AssignmentData {\r\n  id: string;\r\n  client_id: string;\r\n  clients?: {\r\n    name: string;\r\n  };\r\n  client_name?: string;\r\n  departments_location?: {\r\n    name: string;\r\n    department?: {\r\n      name: string;\r\n    };\r\n  };\r\n  department?: string;\r\n  location?: string;\r\n  status: string;\r\n  is_unassigned?: boolean;\r\n  maintenance_status?: string;\r\n  is_client_owned?: boolean;\r\n  last_maintenance_date?: string;\r\n}\r\n\r\ninterface AssignedToSectionProps {\r\n  printerId: string;\r\n}\r\n\r\nfunction getStatusIconAndColor(status?: string, lastMaintenanceDate?: string) {\r\n  if (status === 'Done') {\r\n    if (lastMaintenanceDate) {\r\n      const lastDate = new Date(lastMaintenanceDate);\r\n      const now = new Date();\r\n      const diffDays = Math.floor((now.getTime() - lastDate.getTime()) / (1000 * 60 * 60 * 24));\r\n      if (diffDays >= 61) {\r\n        return { icon: <CheckCircle className=\"h-[13px] w-[13px] text-red-600\" /> };\r\n      } else if (diffDays >= 31) {\r\n        return { icon: <CheckCircle className=\"h-[13px] w-[13px] text-orange-500\" /> };\r\n      } else {\r\n        return { icon: <CheckCircle className=\"h-[13px] w-[13px] text-green-600\" /> };\r\n      }\r\n    } else {\r\n      return { icon: <CheckCircle className=\"h-[13px] w-[13px] text-green-600\" /> };\r\n    }\r\n  }\r\n  switch (status) {\r\n    case 'For Repair':\r\n    case 'For Pullout':\r\n      return { icon: <AlertCircle className=\"h-[13px] w-[13px] text-red-600\" /> };\r\n    case 'Need Drumkit Replacement':\r\n    case 'Need Cleaning':\r\n      return { icon: <AlertCircle className=\"h-[13px] w-[13px] text-orange-500\" /> };\r\n    default:\r\n      return { icon: <Clock className=\"h-[13px] w-[13px] text-gray-400\" /> };\r\n  }\r\n}\r\n\r\nconst AssignedToSection: React.FC<AssignedToSectionProps> = ({ printerId }) => {\r\n  const { user, userProfile } = useAuth();\r\n  const [assignments, setAssignments] = useState<AssignmentData[]>([]);\r\n  const [allowedClientIds, setAllowedClientIds] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch allowed client IDs for client users only\r\n  useEffect(() => {\r\n    if (userProfile?.role === 'client' && user?.id) {\r\n      supabase\r\n        .from('client_access')\r\n        .select('client_id')\r\n        .eq('user_id', user.id)\r\n        .then(({ data }) => {\r\n          setAllowedClientIds(data ? data.map(row => row.client_id) : []);\r\n        });\r\n    }\r\n  }, [user, userProfile]);\r\n\r\n  const fetchAssignments = useCallback(async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('printer_assignments')\r\n        .select(`\r\n          *,\r\n          clients (\r\n            name\r\n          ),\r\n          departments_location (\r\n            name,\r\n            department:departments (\r\n              name\r\n            )\r\n          )\r\n        `)\r\n        .eq('printer_id', printerId)\r\n        .in('status', ['active', 'inactive', 'undeployed']);\r\n\r\n      if (error) throw error;\r\n      setAssignments(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching assignments:', error);\r\n      setAssignments([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [printerId]);\r\n\r\n  // Create a manual refresh function that can be called externally\r\n  const refreshAssignments = useCallback(() => {\r\n    fetchAssignments();\r\n  }, [fetchAssignments]);\r\n\r\n  // Expose refresh function to parent components via a custom event\r\n  useEffect(() => {\r\n    const handleRefresh = () => {\r\n      refreshAssignments();\r\n    };\r\n    \r\n    window.addEventListener(`refresh-assignments-${printerId}`, handleRefresh);\r\n    \r\n    return () => {\r\n      window.removeEventListener(`refresh-assignments-${printerId}`, handleRefresh);\r\n    };\r\n  }, [printerId, refreshAssignments]);\r\n\r\n  useEffect(() => {\r\n    fetchAssignments();\r\n  }, [fetchAssignments]);\r\n\r\n  // Set up real-time subscription for assignment changes\r\n  useEffect(() => {\r\n    const channel = supabase\r\n      .channel(`printer-assignments-${printerId}`)\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: '*',\r\n          schema: 'public',\r\n          table: 'printer_assignments',\r\n          filter: `printer_id=eq.${printerId}`\r\n        },\r\n        (payload) => {\r\n          // Small delay to ensure database consistency\r\n          setTimeout(() => {\r\n            fetchAssignments();\r\n          }, 200);\r\n        }\r\n      )\r\n      .subscribe((status) => {\r\n        // Subscription status handled silently\r\n      });\r\n\r\n    return () => {\r\n      supabase.removeChannel(channel);\r\n    };\r\n  }, [printerId]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"mt-3 pt-3 border-t border-orange-200/50\">\r\n        <h5 className=\"text-sm font-medium text-gray-700 mb-2\">Assigned To:</h5>\r\n        <p className=\"text-xs text-gray-500 italic\">Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Only filter assignments for client users\r\n  const filteredAssignments =\r\n    userProfile?.role === 'client'\r\n      ? assignments.filter(a => a.client_id && allowedClientIds.includes(a.client_id))\r\n      : assignments;\r\n\r\n  return (\r\n    <div className=\"mt-3 border-t border-orange-200/50\">\r\n      <h5 className=\"text-sm font-medium text-gray-700 mb-2\">Assigned To:</h5>\r\n      {filteredAssignments.length > 0 ? (\r\n        <div>\r\n          {filteredAssignments.map((assignment) => {\r\n            const clientName = assignment.clients?.name || assignment.client_name || 'Unknown Client';\r\n            let deptLocation = '';\r\n            if (assignment.departments_location) {\r\n              const dept = assignment.departments_location.department?.name || assignment.department || '';\r\n              const loc = assignment.departments_location.name || assignment.location || '';\r\n              deptLocation = [dept, loc].filter(Boolean).join(' - ');\r\n            } else if (assignment.department || assignment.location) {\r\n              deptLocation = [assignment.department, assignment.location].filter(Boolean).join(' - ');\r\n            }\r\n            const { icon } = getStatusIconAndColor(assignment.maintenance_status, assignment.last_maintenance_date);\r\n\r\n            // Determine status label and badge style\r\n            let statusLabel = '';\r\n            let badgeClass = '';\r\n            let textClass = '';\r\n            if (assignment.status === 'inactive') {\r\n              statusLabel = 'Inactive';\r\n              badgeClass = 'bg-gray-200 text-gray-700 border-gray-300';\r\n              textClass = 'text-gray-500 italic';\r\n            } else if (assignment.status === 'undeployed') {\r\n              statusLabel = 'For Assignment';\r\n              badgeClass = 'bg-orange-100 text-orange-700 border-orange-200';\r\n              textClass = 'text-orange-700';\r\n            } else if (assignment.status === 'active') {\r\n              statusLabel = 'Active';\r\n              badgeClass = 'bg-green-100 text-green-700 border-green-300';\r\n              textClass = 'text-green-700';\r\n            } else {\r\n              badgeClass = 'bg-gray-100 text-gray-700 border-gray-200';\r\n              textClass = 'text-gray-700';\r\n            }\r\n\r\n            let displayString = clientName;\r\n            if (deptLocation) {\r\n              displayString += ` (${deptLocation})`;\r\n            }\r\n\r\n            return (\r\n              <div key={assignment.id} className={`flex items-center gap-2 text-sm ${textClass}`}>\r\n                <span\r\n                  aria-label={`Maintenance Status: ${assignment.maintenance_status || 'No Status'}`}\r\n                  title={`Maintenance Status: ${assignment.maintenance_status || 'No Status'}`}\r\n                  className={`flex items-center justify-center mr-1`}\r\n                >\r\n                  {icon}\r\n                </span>\r\n                <span className={`inline-flex items-center px-2 py-0.5 rounded border text-xs font-medium ${badgeClass} mr-2`}>\r\n                  {statusLabel}\r\n                </span>\r\n                <span className={assignment.is_client_owned ? 'text-blue-600' : undefined}>\r\n                  {displayString}\r\n                </span>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <p className=\"text-xs text-gray-500 italic\">Not currently assigned to any clients.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignedToSection;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { X, Loader2, User, MapPin, Building2, AlertCircle, Unlink } from 'lucide-react';\r\nimport { printerService } from '@/services/printerService';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { getAssignmentLevel, getUnassignmentDescription, canUnassignAt, type AssignmentLevel } from '@/utils/assignmentLevelDetector';\r\nimport type { Printer } from '@/types/database';\r\nimport { CustomLoading } from \"@/components/ui/CustomLoading\";\r\n\r\ninterface PrinterAssignment {\r\n  id: string;\r\n  client_id: string;\r\n  client?: {\r\n    id: string;\r\n    name: string;\r\n  };\r\n  departments_location?: {\r\n    id: string;\r\n    name: string;\r\n    department?: {\r\n      id: string;\r\n      name: string;\r\n    };\r\n  };\r\n  department?: string;\r\n  location?: string;\r\n  serial_number?: string;\r\n  status: string;\r\n  deployment_date?: string;\r\n  condition?: string;\r\n  department_location_id?: string;\r\n}\r\n\r\ninterface UnassignPrinterModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  printerId: string;\r\n  onUnassigned: () => void;\r\n}\r\n\r\nconst UnassignPrinterModal: React.FC<UnassignPrinterModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  printerId,\r\n  onUnassigned,\r\n}) => {\r\n  const { toast } = useToast();\r\n  const [step, setStep] = useState<1 | 2 | 3>(1);\r\n  const [selectedAssignment, setSelectedAssignment] = useState<PrinterAssignment | null>(null);\r\n  const [selectedUnassignLevel, setSelectedUnassignLevel] = useState<AssignmentLevel | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [assignments, setAssignments] = useState<PrinterAssignment[]>([]);\r\n  const [fetchingAssignments, setFetchingAssignments] = useState(false);\r\n  const [printer, setPrinter] = useState<Printer | null>(null);\r\n  const [printerName, setPrinterName] = useState<string>('');\r\n  // Add state for printer details\r\n  const [printerDetails, setPrinterDetails] = useState({ name: '', manufacturer: '', series: '', model: '' });\r\n\r\n  // Fetch fresh assignment data when modal opens\r\n  useEffect(() => {\r\n    if (isOpen && printerId) {\r\n      fetchAssignments();\r\n    }\r\n  }, [isOpen, printerId]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && printerId) {\r\n      (async () => {\r\n        const { data, error } = await supabase\r\n          .from('printers')\r\n          .select('name')\r\n          .eq('id', printerId)\r\n          .single();\r\n        if (!error && data?.name) setPrinterName(data.name);\r\n      })();\r\n    }\r\n  }, [isOpen, printerId]);\r\n\r\n  // Fetch printer details when modal opens\r\n  useEffect(() => {\r\n    if (isOpen && printerId) {\r\n      (async () => {\r\n        const { data, error } = await supabase\r\n          .from('printers')\r\n          .select('name, manufacturer, series, model')\r\n          .eq('id', printerId)\r\n          .single();\r\n        if (!error && data) setPrinterDetails(data);\r\n      })();\r\n    }\r\n  }, [isOpen, printerId]);\r\n\r\n  const fetchAssignments = async () => {\r\n    setFetchingAssignments(true);\r\n    try {\r\n      // Fetch printer details\r\n      const { data: printerData, error: printerError } = await supabase\r\n        .from('printers')\r\n        .select('*')\r\n        .eq('id', printerId)\r\n        .single();\r\n\r\n      if (printerError) throw printerError;\r\n      setPrinter(printerData);\r\n\r\n      // Fetch assignments with proper joins (no status filter, match EditAssignment)\r\n      const { data: assignmentData, error: assignmentError } = await supabase\r\n        .from('printer_assignments')\r\n        .select(`\r\n          id,\r\n          client_id,\r\n          department_location_id,\r\n          department,\r\n          location,\r\n          serial_number,\r\n          printer_id,\r\n          clients!inner(id, name),\r\n          departments_location(\r\n            id,\r\n            name,\r\n            departments(id, name)\r\n          ),\r\n          is_client_owned,\r\n          status\r\n        `)\r\n        .eq('printer_id', printerId);\r\n\r\n      if (assignmentError) throw assignmentError;\r\n      // Transform the data to match EditAssignment\r\n      const transformedData = (assignmentData || []).map(assignment => {\r\n        return {\r\n          id: assignment.id,\r\n          client_id: assignment.client_id,\r\n          client: { id: assignment.clients?.id || '', name: assignment.clients?.name || '' },\r\n          departments_location: assignment.departments_location ? {\r\n            id: assignment.departments_location.id || '',\r\n            name: assignment.departments_location.name || '',\r\n            department: assignment.departments_location.departments\r\n              ? {\r\n                  id: assignment.departments_location.departments.id || '',\r\n                  name: assignment.departments_location.departments.name || ''\r\n                }\r\n              : undefined\r\n          } : undefined,\r\n          department: assignment.department || '',\r\n          location: assignment.location || '',\r\n          serial_number: assignment.serial_number || '',\r\n          status: assignment.status || 'N/A',\r\n          department_location_id: assignment.department_location_id,\r\n        };\r\n      });\r\n      setAssignments(transformedData);\r\n      // If only one assignment, skip step 1 and go directly to unassign step\r\n      if (transformedData.length === 1) {\r\n        setSelectedAssignment(transformedData[0]);\r\n        setStep(2);\r\n      } else {\r\n        setStep(1);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch assignments:', error);\r\n      setError('Failed to load assignment data');\r\n    } finally {\r\n      setFetchingAssignments(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const handleAssignmentSelect = (assignment: PrinterAssignment) => {\r\n    setSelectedAssignment(assignment);\r\n    setStep(2);\r\n    setError(null);\r\n  };\r\n\r\n  const handleUnassignClick = (level: AssignmentLevel) => {\r\n    setSelectedUnassignLevel(level);\r\n    setStep(3);\r\n  };\r\n\r\n  const handleConfirmUnassign = async () => {\r\n    if (!selectedAssignment || !selectedUnassignLevel) return;\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      let successMessage = '';\r\n      \r\n      switch (selectedUnassignLevel) {\r\n        case 'location':\r\n          await printerService.unassignFromLocation(selectedAssignment.id);\r\n          successMessage = `Printer successfully unassigned from location`;\r\n          break;\r\n        case 'department':\r\n          await printerService.unassignFromDepartment(selectedAssignment.id);\r\n          successMessage = `Printer successfully unassigned from department`;\r\n          break;\r\n        case 'client':\r\n          await printerService.unassignFromClient(selectedAssignment.id);\r\n          successMessage = `Printer successfully unassigned from ${selectedAssignment.client?.name || 'client'}`;\r\n          break;\r\n        default:\r\n          throw new Error('Invalid unassignment level');\r\n      }\r\n      \r\n      toast({\r\n        title: 'Success',\r\n        description: successMessage,\r\n      });\r\n      \r\n      // Trigger manual refresh for AssignedToSection\r\n      window.dispatchEvent(new CustomEvent(`refresh-assignments-${printerId}`));\r\n      \r\n      onUnassigned();\r\n      onClose();\r\n    } catch (e: any) {\r\n      console.error('Unassignment failed:', e);\r\n      setError(e.message || 'Failed to unassign printer.');\r\n      toast({\r\n        title: 'Error',\r\n        description: e.message || 'Failed to unassign printer.',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (step === 3) {\r\n      setStep(2);\r\n      setSelectedUnassignLevel(null);\r\n    } else {\r\n      setStep(1);\r\n      setSelectedAssignment(null);\r\n    }\r\n    setError(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setStep(1);\r\n    setSelectedAssignment(null);\r\n    setSelectedUnassignLevel(null);\r\n    setError(null);\r\n    onClose();\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    setError(null);\r\n    setLoading(false);\r\n  };\r\n\r\n  // Helper function to get readable location info\r\n  const getLocationDisplay = (assignment: PrinterAssignment) => {\r\n    if (assignment.departments_location) {\r\n      const dept = assignment.departments_location.department?.name || 'Unknown Department';\r\n      const loc = assignment.departments_location.name || 'Unknown Location';\r\n      return `${dept} - ${loc}`;\r\n    }\r\n    \r\n    if (assignment.department || assignment.location) {\r\n      return [assignment.department, assignment.location].filter(Boolean).join(' - ');\r\n    }\r\n    \r\n    return 'No specific location';\r\n  };\r\n\r\n  const getConfirmationMessage = () => {\r\n    if (!selectedAssignment || !selectedUnassignLevel) return '';\r\n    \r\n    const clientName = selectedAssignment.client?.name || 'Unknown Client';\r\n    const departmentName = selectedAssignment.department || 'Unknown Department';\r\n    const locationName = selectedAssignment.departments_location?.name || selectedAssignment.location || 'Unknown Location';\r\n    \r\n    switch (selectedUnassignLevel) {\r\n      case 'location':\r\n        return `Unassign printer from location \"${locationName}\"? The printer will remain assigned to the ${departmentName} department.`;\r\n      case 'department':\r\n        return `Unassign printer from department \"${departmentName}\"? The printer will remain assigned to ${clientName} client only.`;\r\n      case 'client':\r\n        return `Unassign printer from client \"${clientName}\"? The printer will become available but retain reference to the last client for visibility.`;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-xl shadow-lg max-w-lg w-full mx-4\">\r\n        <div className=\"flex items-center justify-between p-6 border-b\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"bg-blue-100 p-2 rounded-full\">\r\n              <User className=\"h-5 w-5 text-blue-600\" />\r\n            </div>\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">\r\n              {step === 1 ? 'Unassign Printer' : step === 2 ? 'Select Assignment Level' : 'Confirm Unassignment'}\r\n            </h2>\r\n          </div>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n            disabled={loading}\r\n          >\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"p-6\">\r\n          {step === 1 && (\r\n            <>\r\n              <p className=\"text-gray-700 mb-4\">\r\n                Select an assignment to unassign for printer <b>{[\r\n  printerDetails.manufacturer,\r\n  printerDetails.series,\r\n  printerDetails.model || printerDetails.name\r\n].filter(Boolean).join(' ')}</b>:\r\n              </p>\r\n              {fetchingAssignments ? (\r\n                <CustomLoading message=\"Loading assignments\" />\r\n              ) : assignments.length === 0 ? (\r\n                <div className=\"text-gray-500 italic\">No active assignments found.</div>\r\n              ) : (\r\n                <ul className=\"space-y-3 mb-4\">\r\n                  {assignments.map(assignment => (\r\n                    <li \r\n                      key={assignment.id} \r\n                      className=\"border rounded-lg p-3 flex flex-col cursor-pointer hover:bg-blue-50 transition\" \r\n                      onClick={() => handleAssignmentSelect(assignment)}\r\n                    >\r\n                      <div className=\"flex items-center gap-2 mb-2\">\r\n                        <User className=\"h-4 w-4 text-blue-500\" />\r\n                        <span className=\"font-medium\">{assignment.client?.name || 'Unknown Client'}</span>\r\n                        {assignment.serial_number && (\r\n                          <span className=\"ml-2 text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded\">\r\n                            SN: {assignment.serial_number}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      \r\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600 mb-1\">\r\n                        <Building2 className=\"h-3 w-3\" />\r\n                        <span>{getLocationDisplay(assignment)}</span>\r\n                      </div>\r\n                      \r\n                      {assignment.deployment_date && (\r\n                        <div className=\"text-xs text-gray-500\">\r\n                          Deployed: {new Date(assignment.deployment_date).toLocaleDateString()}\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {assignment.condition && (\r\n                        <div className=\"text-xs text-gray-500\">\r\n                          Condition: <span className=\"capitalize\">{assignment.condition}</span>\r\n                        </div>\r\n                      )}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {step === 2 && selectedAssignment && (\r\n            <>\r\n              <div className=\"mb-4 p-3 rounded-md bg-gray-50 border flex flex-col gap-1\">\r\n                <div className=\"flex items-center gap-2 text-sm\">\r\n                  <User className=\"h-4 w-4 text-orange-500\" />\r\n                  <span className=\"font-medium\">{selectedAssignment.client?.name || selectedAssignment.client_id}</span>\r\n                  {selectedAssignment.serial_number && (\r\n                    <span className=\"ml-2 text-xs text-gray-500\">SN: {selectedAssignment.serial_number}</span>\r\n                  )}\r\n                </div>\r\n                <div className=\"flex items-center gap-2 text-xs text-gray-600\">\r\n                  <span>Printer:</span>\r\n                  <span className=\"font-semibold\">{[\r\n  printerDetails.manufacturer,\r\n  printerDetails.series,\r\n  printerDetails.model || printerDetails.name\r\n].filter(Boolean).join(' ')}</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2 text-xs text-gray-600\">\r\n                  <span>Status:</span>\r\n                  <span className=\"font-semibold\">{selectedAssignment.status || 'N/A'}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <h3 className=\"font-semibold text-gray-800 mb-2\">Current Assignment Hierarchy</h3>\r\n                <p className=\"text-sm text-gray-600 mb-4\">\r\n                  Click the unlink icon next to any level to unassign the printer from that level:\r\n                </p>\r\n                \r\n                <div className=\"bg-gray-50 border rounded-lg p-4\">\r\n                  {/* Client Level */}\r\n                  <div className=\"flex items-center justify-between p-3 border-b border-gray-200 last:border-b-0\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <User className=\"h-5 w-5 text-blue-500\" />\r\n                      <div>\r\n                        <div className=\"font-medium text-gray-900\">\r\n                          {selectedAssignment.client?.name || 'Unknown Client'}\r\n                        </div>\r\n                        <div className=\"text-xs text-gray-500\">Client</div>\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => handleUnassignClick('client')}\r\n                      disabled={loading}\r\n                      className=\"flex items-center gap-2 px-3 py-1 text-red-600 hover:bg-red-50 rounded-lg transition-colors disabled:opacity-50\"\r\n                      title=\"Unassign from client (printer becomes available)\"\r\n                    >\r\n                      <Unlink className=\"h-4 w-4\" />\r\n                    </button>\r\n                  </div>\r\n\r\n                  {/* Department Level */}\r\n                  {selectedAssignment.client?.name && selectedAssignment.department && selectedAssignment.department.trim() !== '' && (\r\n                    <div className=\"flex items-center justify-between p-3 border-b border-gray-200 last:border-b-0\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <Building2 className=\"h-5 w-5 text-green-500\" />\r\n                        <div>\r\n                          <div className=\"font-medium text-gray-900\">\r\n                            {selectedAssignment.department}\r\n                          </div>\r\n                          <div className=\"text-xs text-gray-500\">Department</div>\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => handleUnassignClick('department')}\r\n                        disabled={loading}\r\n                        className=\"flex items-center gap-2 px-3 py-1 text-red-600 hover:bg-red-50 rounded-lg transition-colors disabled:opacity-50\"\r\n                        title=\"Unassign from department (remains with client)\"\r\n                      >\r\n                        <Unlink className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Location Level */}\r\n                  {(selectedAssignment.department_location_id || selectedAssignment.departments_location) && (\r\n                    <div className=\"flex items-center justify-between p-3 border-b border-gray-200 last:border-b-0\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <MapPin className=\"h-5 w-5 text-purple-500\" />\r\n                        <div>\r\n                          <div className=\"font-medium text-gray-900\">\r\n                            {selectedAssignment.departments_location?.name || selectedAssignment.location || 'Unknown Location'}\r\n                          </div>\r\n                          <div className=\"text-xs text-gray-500\">Location</div>\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => handleUnassignClick('location')}\r\n                        disabled={loading}\r\n                        className=\"flex items-center gap-2 px-3 py-1 text-red-600 hover:bg-red-50 rounded-lg transition-colors disabled:opacity-50\"\r\n                        title=\"Unassign from location (remains with department)\"\r\n                      >\r\n                        <Unlink className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {selectedAssignment.serial_number && (\r\n                  <div className=\"mt-3 text-sm text-gray-600\">\r\n                    Serial Number: <span className=\"font-mono\">{selectedAssignment.serial_number}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {error && (\r\n                <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n                  <div className=\"flex items-center gap-2 text-red-700 mb-2\">\r\n                    <AlertCircle className=\"h-4 w-4\" />\r\n                    <span className=\"text-sm font-medium\">Error</span>\r\n                  </div>\r\n                  <div className=\"text-sm text-red-700 mb-2\">{error}</div>\r\n                  <div className=\"flex gap-2\">\r\n                    <button\r\n                      onClick={handleRetry}\r\n                      className=\"text-xs px-2 py-1 bg-red-100 text-red-700 rounded hover:bg-red-200 transition-colors\"\r\n                    >\r\n                      Try Again\r\n                    </button>\r\n                    <button\r\n                      onClick={handleBack}\r\n                      className=\"text-xs px-2 py-1 bg-gray-100 text-gray-700 rounded hover:bg-gray-200 transition-colors\"\r\n                    >\r\n                      Go Back\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"flex space-x-3\">\r\n                <button\r\n                  onClick={handleBack}\r\n                  className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n                  disabled={loading}\r\n                >\r\n                  Back\r\n                </button>\r\n                <button\r\n                  onClick={handleClose}\r\n                  className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n                  disabled={loading}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {step === 3 && selectedAssignment && selectedUnassignLevel && (\r\n            <>\r\n              <div className=\"mb-6\">\r\n                <div className=\"flex items-center gap-3 mb-4\">\r\n                  <div className=\"bg-yellow-100 p-2 rounded-full\">\r\n                    <AlertCircle className=\"h-5 w-5 text-yellow-600\" />\r\n                  </div>\r\n                  <h3 className=\"font-semibold text-gray-800\">Confirm Unassignment</h3>\r\n                </div>\r\n                \r\n                <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4\">\r\n                  <p className=\"text-gray-700\">\r\n                    {getConfirmationMessage()}\r\n                  </p>\r\n                </div>\r\n\r\n                {selectedAssignment.serial_number && (\r\n                  <div className=\"text-sm text-gray-600 mb-4\">\r\n                    Serial Number: <span className=\"font-mono\">{selectedAssignment.serial_number}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {error && (\r\n                <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n                  <div className=\"flex items-center gap-2 text-red-700 mb-2\">\r\n                    <AlertCircle className=\"h-4 w-4\" />\r\n                    <span className=\"text-sm font-medium\">Error</span>\r\n                  </div>\r\n                  <div className=\"text-sm text-red-700 mb-2\">{error}</div>\r\n                  <button\r\n                    onClick={handleRetry}\r\n                    className=\"text-xs px-2 py-1 bg-red-100 text-red-700 rounded hover:bg-red-200 transition-colors\"\r\n                  >\r\n                    Try Again\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"flex space-x-3\">\r\n                <button\r\n                  onClick={handleBack}\r\n                  className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n                  disabled={loading}\r\n                >\r\n                  Back\r\n                </button>\r\n                <button\r\n                  onClick={handleConfirmUnassign}\r\n                  disabled={loading}\r\n                  className=\"flex-1 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors disabled:opacity-50 flex items-center justify-center gap-2\"\r\n                >\r\n                  {loading ? (\r\n                    <>\r\n                      <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n                      Processing...\r\n                    </>\r\n                  ) : (\r\n                    'Proceed'\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnassignPrinterModal;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { X, Loader2, User, MapPin, Building2, ArrowRightLeft } from 'lucide-react';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport type { Printer, Client } from '@/types/database';\r\n\r\ninterface PrinterAssignment {\r\n  id: string;\r\n  client_id: string;\r\n  department_location_id?: string;\r\n  client?: {\r\n    name: string;\r\n  };\r\n  departments_location?: {\r\n    name: string;\r\n    department?: {\r\n      name: string;\r\n    };\r\n  };\r\n  department?: string;\r\n  location?: string;\r\n  serial_number?: string;\r\n  status: string;\r\n}\r\n\r\ninterface TransferPrinterModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  printerId: string;\r\n  clients: Client[];\r\n  getDepartmentsByClient: (clientId: string) => Promise<{ id: string; name: string; location?: string }[]>;\r\n  onTransfer: (assignment: PrinterAssignment, toClientId: string, toDepartmentId: string) => Promise<void>;\r\n}\r\n\r\nconst TransferPrinterModal: React.FC<TransferPrinterModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  printerId,\r\n  clients,\r\n  getDepartmentsByClient,\r\n  onTransfer,\r\n}) => {\r\n  const [step, setStep] = useState<1 | 2>(1);\r\n  const [selectedAssignment, setSelectedAssignment] = useState<PrinterAssignment | null>(null);\r\n  const [toClientId, setToClientId] = useState<string>('');\r\n  const [departments, setDepartments] = useState<{ id: string; name: string; location?: string }[]>([]);\r\n  const [toDepartmentId, setToDepartmentId] = useState<string>('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [assignments, setAssignments] = useState<PrinterAssignment[]>([]);\r\n  const [fetchingAssignments, setFetchingAssignments] = useState(false);\r\n  const [printer, setPrinter] = useState<Printer | null>(null);\r\n  // Add state for printer details\r\n  const [printerDetails, setPrinterDetails] = useState({ name: '', manufacturer: '', series: '', model: '' });\r\n\r\n  // Fetch fresh assignment data when modal opens\r\n  useEffect(() => {\r\n    if (isOpen && printerId) {\r\n      fetchAssignments();\r\n    }\r\n  }, [isOpen, printerId]);\r\n\r\n  // Fetch printer details when modal opens\r\n  useEffect(() => {\r\n    if (isOpen && printerId) {\r\n      (async () => {\r\n        const { data, error } = await supabase\r\n          .from('printers')\r\n          .select('name, manufacturer, series, model')\r\n          .eq('id', printerId)\r\n          .single();\r\n        if (!error && data) setPrinterDetails(data);\r\n      })();\r\n    }\r\n  }, [isOpen, printerId]);\r\n\r\n  useEffect(() => {\r\n    if (step === 2 && toClientId) {\r\n      // Clear department selection when client changes\r\n      setDepartments([]);\r\n      const preservedDepartmentId = toDepartmentId; // Preserve current selection\r\n      \r\n      getDepartmentsByClient(toClientId).then(depts => {\r\n        setDepartments(depts);\r\n        // If we have a preserved department ID and it exists in the new departments, keep it\r\n        if (preservedDepartmentId && depts.some(d => d.id === preservedDepartmentId)) {\r\n          setToDepartmentId(preservedDepartmentId);\r\n        } else {\r\n          // Otherwise, clear department selection\r\n          setToDepartmentId('');\r\n        }\r\n      });\r\n    }\r\n  }, [step, toClientId, getDepartmentsByClient]);\r\n\r\n  const fetchAssignments = async () => {\r\n    setFetchingAssignments(true);\r\n    try {\r\n      // Fetch printer details\r\n      const { data: printerData, error: printerError } = await supabase\r\n        .from('printers')\r\n        .select('*')\r\n        .eq('id', printerId)\r\n        .single();\r\n\r\n      if (printerError) throw printerError;\r\n      setPrinter(printerData);\r\n\r\n      // Fetch assignments with proper joins (no status filter, match EditAssignment)\r\n      const { data: assignmentData, error: assignmentError } = await supabase\r\n        .from('printer_assignments')\r\n        .select(`\r\n          id,\r\n          client_id,\r\n          department_location_id,\r\n          serial_number,\r\n          printer_id,\r\n          clients!inner(id, name),\r\n          departments_location(\r\n            id,\r\n            name,\r\n            departments(id, name)\r\n          ),\r\n          is_client_owned,\r\n          status\r\n        `)\r\n        .eq('printer_id', printerId);\r\n\r\n      if (assignmentError) throw assignmentError;\r\n      // Transform the data to match EditAssignment\r\n      const transformedData = (assignmentData || []).map(assignment => {\r\n        const departmentName = assignment.departments_location?.departments?.name || '';\r\n        const locationName = assignment.departments_location?.name || '';\r\n        return {\r\n          id: assignment.id,\r\n          client_id: assignment.client_id,\r\n          client: { id: assignment.clients?.id || '', name: assignment.clients?.name || '' },\r\n          departments_location: assignment.departments_location ? {\r\n            id: assignment.departments_location.id || '',\r\n            name: assignment.departments_location.name || '',\r\n            department: assignment.departments_location.departments\r\n              ? {\r\n                  id: assignment.departments_location.departments.id || '',\r\n                  name: assignment.departments_location.departments.name || ''\r\n                }\r\n              : undefined\r\n          } : undefined,\r\n          department: departmentName,\r\n          location: locationName,\r\n          serial_number: assignment.serial_number || '',\r\n          status: assignment.status || 'N/A',\r\n          department_location_id: assignment.department_location_id,\r\n        };\r\n      });\r\n      setAssignments(transformedData);\r\n      // If only one assignment, skip step 1 and go directly to transfer step\r\n      if (transformedData.length === 1) {\r\n        setSelectedAssignment(transformedData[0]);\r\n        setToClientId(transformedData[0].client_id);\r\n        setToDepartmentId(transformedData[0].department_location_id || '');\r\n        setStep(2);\r\n      } else {\r\n        setStep(1);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch assignments:', error);\r\n      setError('Failed to load assignment data');\r\n    } finally {\r\n      setFetchingAssignments(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const handleAssignmentSelect = (assignment: PrinterAssignment) => {\r\n    setSelectedAssignment(assignment);\r\n    // Set default transfer destination to current assignment details\r\n    setToClientId(assignment.client_id);\r\n    setToDepartmentId(assignment.department_location_id || '');\r\n    setStep(2);\r\n    setError(null);\r\n  };\r\n\r\n  const handleTransfer = async () => {\r\n    if (!selectedAssignment || !toClientId || !toDepartmentId) return;\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await onTransfer(selectedAssignment, toClientId, toDepartmentId);\r\n      \r\n      // Trigger manual refresh for AssignedToSection\r\n      window.dispatchEvent(new CustomEvent(`refresh-assignments-${printerId}`));\r\n      \r\n      setLoading(false);\r\n      onClose();\r\n    } catch (e: any) {\r\n      console.error('Transfer failed:', e);\r\n      setError(e.message || 'Failed to transfer printer.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setStep(1);\r\n    setSelectedAssignment(null);\r\n    setError(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setStep(1);\r\n    setSelectedAssignment(null);\r\n    setError(null);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-xl shadow-lg max-w-lg w-full mx-4\">\r\n        <div className=\"flex items-center justify-between p-6 border-b\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"bg-purple-100 p-2 rounded-full\">\r\n              <ArrowRightLeft className=\"h-5 w-5 text-purple-600\" />\r\n            </div>\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">\r\n              {step === 1 ? 'Transfer Printer' : 'Transfer Options'}\r\n            </h2>\r\n          </div>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n            disabled={loading}\r\n          >\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"p-6\">\r\n          {step === 1 && (\r\n            <>\r\n              <p className=\"text-gray-700 mb-4\">\r\n                Select an assignment to transfer for printer <b>{[\r\n  printerDetails.manufacturer,\r\n  printerDetails.series,\r\n  printerDetails.model || printerDetails.name\r\n].filter(Boolean).join(' ')}</b>:\r\n              </p>\r\n              {fetchingAssignments ? (\r\n                <div className=\"flex items-center justify-center py-8\">\r\n                  <Loader2 className=\"h-6 w-6 animate-spin text-purple-600\" />\r\n                  <span className=\"ml-2\">Loading assignments...</span>\r\n                </div>\r\n              ) : assignments.length === 0 ? (\r\n                <div className=\"text-gray-500 italic\">No active assignments found.</div>\r\n              ) : (\r\n                <ul className=\"space-y-3 mb-4\">\r\n                  {assignments.map(a => (\r\n                    <li key={a.id} className=\"border rounded-lg p-3 flex flex-col cursor-pointer hover:bg-purple-50 transition\" onClick={() => handleAssignmentSelect(a)}>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <User className=\"h-4 w-4 text-purple-500\" />\r\n                        <span className=\"font-medium\">{a.client?.name || a.client_id}</span>\r\n                        {a.serial_number && <span className=\"ml-2 text-xs text-gray-500\">SN: {a.serial_number}</span>}\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 mt-1 text-xs text-gray-600\">\r\n                        {(a.departments_location?.department?.name || a.department) && (\r\n                          <>\r\n                            <Building2 className=\"h-3 w-3\" />\r\n                            {a.departments_location?.department?.name || a.department}\r\n                            {a.departments_location?.name && ` - ${a.departments_location.name}`}\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </>\r\n          )}\r\n          {step === 2 && selectedAssignment && (\r\n            <>\r\n              <div className=\"mb-4\">\r\n                <div className=\"font-semibold text-gray-800 mb-2\">Current Assignment</div>\r\n                <div className=\"bg-gray-50 border rounded-lg p-3 mb-2\">\r\n                  <div className=\"flex items-center gap-2 mb-1 text-sm\">\r\n                    <User className=\"h-4 w-4 text-purple-500\" />\r\n                    <span>{selectedAssignment.client?.name || selectedAssignment.client_id}</span>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-2 text-xs text-gray-600\">\r\n                    {(selectedAssignment.departments_location?.department?.name || selectedAssignment.department) && (\r\n                      <>\r\n                        <Building2 className=\"h-3 w-3\" />\r\n                        {selectedAssignment.departments_location?.department?.name || selectedAssignment.department}\r\n                        {selectedAssignment.departments_location?.name && ` - ${selectedAssignment.departments_location.name}`}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <div className=\"font-semibold text-gray-800 mb-2\">Transfer To</div>\r\n                <div className=\"space-y-3\">\r\n                  <div>\r\n                    <label className=\"block text-xs font-medium text-gray-700 mb-1\">Client</label>\r\n                    <select\r\n                      className=\"w-full border rounded-lg px-3 py-2\"\r\n                      value={toClientId}\r\n                      onChange={e => {\r\n                        setToClientId(e.target.value);\r\n                        // Clear department when client changes\r\n                        setToDepartmentId('');\r\n                        setDepartments([]);\r\n                      }}\r\n                      disabled={loading}\r\n                    >\r\n                      {clients.map(c => (\r\n                        <option key={c.id} value={c.id}>{c.name}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-xs font-medium text-gray-700 mb-1\">Department</label>\r\n                    <select\r\n                      className=\"w-full border rounded-lg px-3 py-2\"\r\n                      value={toDepartmentId}\r\n                      onChange={e => setToDepartmentId(e.target.value)}\r\n                      disabled={loading || departments.length === 0}\r\n                    >\r\n                      <option value=\"\">Select Department</option>\r\n                      {departments.map(d => (\r\n                        <option key={d.id} value={d.id}>{d.name}{d.location ? ` - ${d.location}` : ''}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {error && <div className=\"text-red-600 mb-2\">{error}</div>}\r\n              <div className=\"flex space-x-3\">\r\n                <button\r\n                  onClick={handleBack}\r\n                  className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n                  disabled={loading}\r\n                >\r\n                  Back\r\n                </button>\r\n                <button\r\n                  onClick={handleTransfer}\r\n                  className=\"flex-1 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors flex items-center justify-center disabled:bg-purple-400\"\r\n                  disabled={loading || !toClientId || !toDepartmentId}\r\n                >\r\n                  {loading ? <Loader2 className=\"h-5 w-5 animate-spin mr-2\" /> : null}\r\n                  Transfer\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransferPrinterModal;\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { ExternalLink, Download, FileText, Settings, Wifi, Printer as PrinterIcon } from 'lucide-react';\r\nimport { Printer } from '@/types/database';\r\n\r\ninterface ViewPrinterModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  printer: Printer | null;\r\n}\r\n\r\ninterface DetailRowProps {\r\n  label: string;\r\n  value: string | number | boolean | null | undefined;\r\n  type?: 'text' | 'boolean' | 'link' | 'badge';\r\n  variant?: 'default' | 'secondary' | 'destructive' | 'outline';\r\n}\r\n\r\nconst DetailRow: React.FC<DetailRowProps> = ({ label, value, type = 'text', variant = 'default' }) => {\r\n  if (!value && value !== false) return null;\r\n\r\n  const renderValue = () => {\r\n    switch (type) {\r\n      case 'boolean':\r\n        return <Badge variant={value ? 'default' : 'secondary'}>{value ? 'Yes' : 'No'}</Badge>;\r\n      case 'link':\r\n        return (\r\n          <a href={value as string} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:text-blue-800 underline flex items-center gap-1\">\r\n            View <ExternalLink className=\"h-3 w-3\" />\r\n          </a>\r\n        );\r\n      case 'badge':\r\n        return <Badge variant={variant}>{value}</Badge>;\r\n      default:\r\n        return <span className=\"text-gray-900\">{value}</span>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col sm:flex-row sm:items-center gap-1 sm:gap-3 py-2 border-b border-gray-100 last:border-b-0\">\r\n      <div className=\"text-xs sm:text-sm font-medium text-gray-600 min-w-0 sm:min-w-[120px]\">{label}</div>\r\n      <div className=\"min-w-0 flex-1\">{renderValue()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function ViewPrinterModal({ isOpen, onClose, printer }: ViewPrinterModalProps) {\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n\r\n  if (!printer) return null;\r\n\r\n  const getStatusVariant = (available?: boolean) => {\r\n    return available ? 'default' : 'secondary';\r\n  };\r\n\r\n  const getTypeVariant = (type?: string) => {\r\n    if (!type) return 'outline';\r\n    if (type.toLowerCase().includes('laser')) return 'default';\r\n    if (type.toLowerCase().includes('inkjet')) return 'secondary';\r\n    return 'outline';\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\r\n      <DialogContent className=\"max-w-full sm:max-w-2xl p-0 max-h-[95vh] flex flex-col\" aria-describedby=\"printer-details-description\">\r\n        {/* Header */}\r\n        <DialogHeader className=\"px-4 sm:px-6 pt-4 sm:pt-6 pb-4 border-b bg-gray-50\">\r\n          <div className=\"flex items-start gap-3\">\r\n            <div className=\"w-10 h-10 bg-blue-600 rounded-lg flex items-center justify-center flex-shrink-0\">\r\n              <PrinterIcon className=\"h-5 w-5 text-white\" />\r\n            </div>\r\n            <div className=\"min-w-0 flex-1\">\r\n              <DialogTitle className=\"text-lg sm:text-xl font-semibold text-gray-900 truncate\">\r\n                {printer.name}\r\n              </DialogTitle>\r\n              <div className=\"flex flex-wrap items-center gap-2 mt-1\">\r\n                {printer.manufacturer && (\r\n                  <span className=\"text-sm text-gray-600\">{printer.manufacturer}</span>\r\n                )}\r\n                {printer.model && (\r\n                  <Badge variant=\"outline\" className=\"text-xs\">{printer.model}</Badge>\r\n                )}\r\n                {printer.series && (\r\n                  <Badge variant=\"outline\" className=\"text-xs\">{printer.series}</Badge>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </DialogHeader>\r\n        \r\n        {/* Hidden description for accessibility */}\r\n        <div id=\"printer-details-description\" className=\"sr-only\">\r\n          Detailed information about {printer.name} printer including specifications, connectivity, and support resources.\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"flex-1 flex flex-col min-h-0\">\r\n          <TabsList className=\"grid w-full grid-cols-4 mx-4 sm:mx-6 mt-4 h-auto\">\r\n            <TabsTrigger value=\"overview\" className=\"text-xs sm:text-sm py-2\">Overview</TabsTrigger>\r\n            <TabsTrigger value=\"specs\" className=\"text-xs sm:text-sm py-2\">Specs</TabsTrigger>\r\n            <TabsTrigger value=\"connectivity\" className=\"text-xs sm:text-sm py-2\">Network</TabsTrigger>\r\n            <TabsTrigger value=\"support\" className=\"text-xs sm:text-sm py-2\">Support</TabsTrigger>\r\n          </TabsList>\r\n\r\n          <div className=\"flex-1 overflow-y-auto\">\r\n            <TabsContent value=\"overview\" className=\"mt-0\">\r\n              <Card className=\"mx-4 sm:mx-6 mt-4 mb-4\">\r\n                <CardContent className=\"p-4\">\r\n                  <div className=\"space-y-1\">\r\n                    <DetailRow label=\"Status\" value={printer.is_available ? 'Available' : 'In Use'} type=\"badge\" variant={getStatusVariant(printer.is_available)} />\r\n                    <DetailRow label=\"Type\" value={printer.printer_type} type=\"badge\" variant={getTypeVariant(printer.printer_type)} />\r\n                    <DetailRow label=\"Color Capability\" value={printer.color} />\r\n                    <DetailRow label=\"Release Year\" value={printer.release_year} />\r\n                    <DetailRow label=\"Functions\" value={printer.functions} />\r\n                    <DetailRow label=\"Description\" value={printer.description} />\r\n                    <DetailRow label=\"Aliases\" value={printer.aliases} />\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </TabsContent>\r\n\r\n            <TabsContent value=\"specs\" className=\"mt-0\">\r\n              <Card className=\"mx-4 sm:mx-6 mt-4 mb-4\">\r\n                <CardContent className=\"p-4\">\r\n                  <div className=\"space-y-1\">\r\n                    <DetailRow label=\"Print Resolution\" value={printer.resolution} />\r\n                    <DetailRow label=\"Print Speed\" value={printer.print_speed} />\r\n                    <DetailRow label=\"Processor\" value={printer.processor} />\r\n                    <DetailRow label=\"RAM\" value={printer.ram} />\r\n                    <DetailRow label=\"Dimensions\" value={printer.dimensions} />\r\n                    <DetailRow label=\"Weight\" value={printer.weight} />\r\n                    <DetailRow label=\"Duplex Printing\" value={printer.duplex_printing} type=\"boolean\" />\r\n                    <DetailRow label=\"ADF\" value={printer.adf} type=\"boolean\" />\r\n                    <DetailRow label=\"Paper Sizes\" value={printer.paper_sizes} />\r\n                    <DetailRow label=\"Paper Types\" value={printer.paper_types} />\r\n                    <DetailRow label=\"Input Capacity\" value={printer.input_capacity} />\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </TabsContent>\r\n\r\n            <TabsContent value=\"connectivity\" className=\"mt-0\">\r\n              <Card className=\"mx-4 sm:mx-6 mt-4 mb-4\">\r\n                <CardContent className=\"p-4\">\r\n                  <div className=\"space-y-1\">\r\n                    <DetailRow label=\"Wired Connectivity\" value={printer.connectivity_wired} />\r\n                    <DetailRow label=\"Wireless Options\" value={printer.connectivity_wireless} />\r\n                    <DetailRow label=\"Network Printing\" value={printer.network_printing} type=\"boolean\" />\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </TabsContent>\r\n\r\n            <TabsContent value=\"support\" className=\"mt-0\">\r\n              <Card className=\"mx-4 sm:mx-6 mt-4 mb-4\">\r\n                <CardContent className=\"p-4\">\r\n                  <div className=\"space-y-1\">\r\n                    <DetailRow label=\"Compatible Cartridges\" value={printer.compatible_cartridges} />\r\n                    <DetailRow label=\"Page Yield\" value={printer.page_yield} />\r\n                    <DetailRow label=\"Drivers\" value={printer.drivers_url} type=\"link\" />\r\n                    <DetailRow label=\"User Manual\" value={printer.manual_url} type=\"link\" />\r\n                    <DetailRow label=\"Setup Guide\" value={printer.setup_guide_url} type=\"link\" />\r\n                    <DetailRow label=\"Troubleshooting\" value={printer.troubleshooting_url} type=\"link\" />\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </TabsContent>\r\n          </div>\r\n        </Tabs>\r\n\r\n        {/* Footer */}\r\n        <div className=\"border-t bg-gray-50 px-4 sm:px-6 py-4\">\r\n          <Button \r\n            variant=\"outline\" \r\n            onClick={onClose} \r\n            className=\"w-full sm:w-auto sm:ml-auto sm:block\"\r\n          >\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { clientService } from '@/services/clientService';\r\n\r\ninterface ClientDepartmentSelectionModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  currentClientId?: string;\r\n  currentDepartmentId?: string;\r\n  onSave: (clientId: string, departmentId: string) => void;\r\n}\r\n\r\nconst ClientDepartmentSelectionModal: React.FC<ClientDepartmentSelectionModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  currentClientId,\r\n  currentDepartmentId,\r\n  onSave,\r\n}) => {\r\n  const [clients, setClients] = useState<{ id: string; name: string }[]>([]);\r\n  const [departments, setDepartments] = useState<{ id: string; name: string }[]>([]);\r\n  const [selectedClientId, setSelectedClientId] = useState<string>(currentClientId || '');\r\n  const [selectedDepartmentId, setSelectedDepartmentId] = useState<string>(currentDepartmentId || '');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setSelectedClientId(currentClientId || '');\r\n      setSelectedDepartmentId(currentDepartmentId || '');\r\n      setDepartments([]);\r\n      setLoading(true);\r\n      clientService.getClients().then(clients => {\r\n        setClients(clients.map(c => ({ id: c.id, name: c.name })));\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [isOpen, currentClientId, currentDepartmentId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedClientId) {\r\n      setLoading(true);\r\n      clientService.getDepartmentsByClient(selectedClientId).then(depts => {\r\n        setDepartments(depts.map(d => ({ id: d.id, name: d.name })));\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      setDepartments([]);\r\n      setSelectedDepartmentId('');\r\n    }\r\n  }, [selectedClientId]);\r\n\r\n  const handleSave = () => {\r\n    if (selectedClientId && selectedDepartmentId) {\r\n      onSave(selectedClientId, selectedDepartmentId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"w-full max-w-[95vw] sm:max-w-[400px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>Change Client & Department</DialogTitle>\r\n        </DialogHeader>\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1\">Client</label>\r\n            <select\r\n              className=\"w-full border rounded-lg px-3 py-2 text-sm\"\r\n              value={selectedClientId}\r\n              onChange={e => setSelectedClientId(e.target.value)}\r\n              disabled={loading}\r\n            >\r\n              <option value=\"\">Select Client</option>\r\n              {clients.map(client => (\r\n                <option key={client.id} value={client.id}>{client.name}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          {selectedClientId && (\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-1\">Department/Location</label>\r\n              <select\r\n                className=\"w-full border rounded-lg px-3 py-2 text-sm\"\r\n                value={selectedDepartmentId}\r\n                onChange={e => setSelectedDepartmentId(e.target.value)}\r\n                disabled={loading || departments.length === 0}\r\n              >\r\n                <option value=\"\">Select Department/Location</option>\r\n                {departments.map(dept => (\r\n                  <option key={dept.id} value={dept.id}>{dept.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex gap-2 pt-4\">\r\n          <Button variant=\"outline\" onClick={onClose} className=\"flex-1\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave} disabled={!selectedClientId || !selectedDepartmentId} className=\"flex-1\">\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ClientDepartmentSelectionModal; ","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Edit3, Loader2, User, Building2 } from 'lucide-react';\r\nimport { clientService } from '@/services/clientService';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport ClientDepartmentSelectionModal from './ClientDepartmentSelectionModal';\r\n\r\ninterface Assignment {\r\n  id: string;\r\n  client_id: string;\r\n  client_name: string;\r\n  department_location_id?: string;\r\n  department_name: string;\r\n  location_name?: string;\r\n  serial_number: string;\r\n  printer_id: string;\r\n  is_client_owned?: boolean;\r\n  status: string;\r\n}\r\n\r\ninterface EditAssignmentModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  printerId: string;\r\n  onAssignmentUpdated: () => void;\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst EditAssignmentModal: React.FC<EditAssignmentModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  printerId,\r\n  onAssignmentUpdated,\r\n  isLoading = false,\r\n}) => {\r\n  const { toast } = useToast();\r\n  const [step, setStep] = useState<1 | 2>(1);\r\n  const [assignments, setAssignments] = useState<Assignment[]>([]);\r\n  const [selectedAssignmentId, setSelectedAssignmentId] = useState<string>('');\r\n  const selectedAssignment = assignments.find(a => a.id === selectedAssignmentId);\r\n  const [fetchingData, setFetchingData] = useState(false);\r\n  const [printerName, setPrinterName] = useState<string>('');\r\n\r\n  // Editable fields\r\n  const [clientId, setClientId] = useState('');\r\n  const [departmentId, setDepartmentId] = useState('');\r\n  const [serialNumber, setSerialNumber] = useState('');\r\n  const [originalSerialNumber, setOriginalSerialNumber] = useState('');\r\n  const [isSerialNumberEditable, setIsSerialNumberEditable] = useState(false);\r\n  const [clients, setClients] = useState<{ id: string; name: string }[]>([]);\r\n  const [departments, setDepartments] = useState<{ id: string; name: string }[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Add state for client owned\r\n  const [isClientOwned, setIsClientOwned] = useState(false);\r\n\r\n  // Store original values for comparison\r\n  const [originalClientId, setOriginalClientId] = useState('');\r\n  const [originalDepartmentId, setOriginalDepartmentId] = useState('');\r\n\r\n  // Add state for client/department selection modal\r\n  const [showClientDeptModal, setShowClientDeptModal] = useState(false);\r\n\r\n  // Add state for selected department name\r\n  const [selectedDepartmentName, setSelectedDepartmentName] = useState<string>('');\r\n\r\n  // Add state for printer details\r\n  const [printerDetails, setPrinterDetails] = useState({ name: '', manufacturer: '', series: '', model: '' });\r\n\r\n  // Fetch printer details when modal opens\r\n  useEffect(() => {\r\n    if (isOpen && printerId) {\r\n      (async () => {\r\n        const { data, error } = await supabase\r\n          .from('printers')\r\n          .select('name, manufacturer, series, model')\r\n          .eq('id', printerId)\r\n          .single();\r\n        if (!error && data) setPrinterDetails(data);\r\n      })();\r\n    }\r\n  }, [isOpen, printerId]);\r\n\r\n  // Fetch latest assignment data when modal opens\r\n  useEffect(() => {\r\n    if (isOpen && printerId) {\r\n      fetchLatestAssignmentData();\r\n    }\r\n  }, [isOpen, printerId]);\r\n\r\n  // Fetch printer name when modal opens\r\n  useEffect(() => {\r\n    if (isOpen && printerId) {\r\n      (async () => {\r\n        const { data, error } = await supabase\r\n          .from('printers')\r\n          .select('name')\r\n          .eq('id', printerId)\r\n          .single();\r\n        if (!error && data?.name) setPrinterName(data.name);\r\n      })();\r\n    }\r\n  }, [isOpen, printerId]);\r\n\r\n  const fetchLatestAssignmentData = async () => {\r\n    setFetchingData(true);\r\n    \r\n    try {\r\n      // Fetch assignments with related data\r\n      const { data: assignmentData, error } = await supabase\r\n        .from('printer_assignments')\r\n        .select(`\r\n          id,\r\n          client_id,\r\n          department_location_id,\r\n          serial_number,\r\n          printer_id,\r\n          clients!inner(name),\r\n          departments_location(\r\n            name,\r\n            departments(name)\r\n          ),\r\n          is_client_owned,\r\n          status\r\n        `)\r\n        .eq('printer_id', printerId);\r\n\r\n      if (error) {\r\n        console.error('❌ Error fetching assignments:', error);\r\n        throw error;\r\n      }\r\n\r\n      // Transform the data\r\n      const transformedAssignments: Assignment[] = (assignmentData || []).map(assignment => {\r\n        const departmentName = assignment.departments_location?.departments?.name || '';\r\n        const locationName = assignment.departments_location?.name || '';\r\n        \r\n        return {\r\n          id: assignment.id,\r\n          client_id: assignment.client_id,\r\n          client_name: assignment.clients?.name || '',\r\n          department_location_id: assignment.department_location_id,\r\n          department_name: departmentName,\r\n          location_name: locationName,\r\n          serial_number: assignment.serial_number || '',\r\n          printer_id: assignment.printer_id,\r\n          is_client_owned: assignment.is_client_owned,\r\n          status: assignment.status || 'N/A',\r\n        };\r\n      });\r\n\r\n      setAssignments(transformedAssignments);\r\n      \r\n      // Auto-select first assignment if available\r\n      if (transformedAssignments.length > 0) {\r\n        setSelectedAssignmentId(transformedAssignments[0].id);\r\n      }\r\n      // If only one assignment, skip step 1 and go directly to edit step\r\n      if (transformedAssignments.length === 1) {\r\n        setStep(2);\r\n      } else {\r\n        setStep(1);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Error fetching assignment data:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to load assignment data',\r\n        variant: 'destructive'\r\n      });\r\n    } finally {\r\n      setFetchingData(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    clientService.getClients().then(clients => {\r\n      setClients(clients.map(c => ({ id: c.id, name: c.name })));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (clientId) {\r\n      // Clear department selection when client changes\r\n      setDepartmentId('');\r\n      setDepartments([]);\r\n      clientService.getDepartmentsByClient(clientId).then(depts => {\r\n        let deptList = depts.map(d => ({ id: d.id, name: d.name }));\r\n        // Ensure the current assignment's department/location is included\r\n        if (\r\n          selectedAssignment &&\r\n          selectedAssignment.department_location_id &&\r\n          !deptList.some(d => d.id === selectedAssignment.department_location_id)\r\n        ) {\r\n          deptList = [\r\n            ...deptList,\r\n            {\r\n              id: selectedAssignment.department_location_id,\r\n              name: [selectedAssignment.department_name, selectedAssignment.location_name].filter(Boolean).join(' - ') || 'Unknown Department/Location',\r\n            },\r\n          ];\r\n        }\r\n        setDepartments(deptList);\r\n      });\r\n    } else {\r\n      setDepartments([]);\r\n      setDepartmentId('');\r\n    }\r\n  }, [clientId, selectedAssignment]);\r\n\r\n  useEffect(() => {\r\n    if (selectedAssignment) {\r\n      const newClientId = selectedAssignment.client_id;\r\n      const newDepartmentId = selectedAssignment.department_location_id || '';\r\n      const newSerialNumber = selectedAssignment.serial_number || '';\r\n      setIsClientOwned(!!selectedAssignment.is_client_owned);\r\n      \r\n      // Set client first\r\n      setClientId(newClientId);\r\n      setSerialNumber(newSerialNumber);\r\n      setOriginalSerialNumber(newSerialNumber);\r\n      setOriginalClientId(newClientId);\r\n      setOriginalDepartmentId(newDepartmentId);\r\n      setIsSerialNumberEditable(false);\r\n      \r\n      // Set department after a short delay to ensure departments are loaded\r\n      setTimeout(() => {\r\n        setDepartmentId(newDepartmentId);\r\n      }, 100);\r\n    }\r\n  }, [selectedAssignment]);\r\n\r\n  const handleAssignmentSelect = (assignmentId: string) => {\r\n    setSelectedAssignmentId(assignmentId);\r\n    setStep(2);\r\n  };\r\n\r\n  const getClientName = (clientId: string) => {\r\n    const client = clients.find(c => c.id === clientId);\r\n    return client?.name || '';\r\n  };\r\n\r\n  const getDepartmentName = (departmentId: string) => {\r\n    const department = departments.find(d => d.id === departmentId);\r\n    return department?.name || '';\r\n  };\r\n\r\n  const getCurrentDepartmentLocationDisplay = () => {\r\n    if (selectedAssignment) {\r\n      const parts = [selectedAssignment.department_name, selectedAssignment.location_name].filter(Boolean);\r\n      const display = parts.join(' - ') || 'No Department/Location';\r\n      return display;\r\n    }\r\n    return 'Select Department + Location';\r\n  };\r\n\r\n  const handleSave = async () => {\r\n\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Prepare update object - only include fields that have actual values and changed\r\n      const updateData: any = {};\r\n      \r\n      if (clientId && clientId !== originalClientId) {\r\n        updateData.client_id = clientId;\r\n      }\r\n      \r\n      // Only include department_location_id if it has a valid value and changed\r\n      if (departmentId && departmentId !== originalDepartmentId) {\r\n        updateData.department_location_id = departmentId;\r\n      }\r\n      \r\n      if (serialNumber !== originalSerialNumber) {\r\n        updateData.serial_number = serialNumber;\r\n      }\r\n\r\n      // Add is_client_owned to updateData if it has changed\r\n      if (isClientOwned !== selectedAssignment.is_client_owned) {\r\n        updateData.is_client_owned = isClientOwned;\r\n      }\r\n\r\n      if ((clientId && clientId !== originalClientId) || (departmentId && departmentId !== originalDepartmentId)) {\r\n        updateData.status = 'active';\r\n      }\r\n\r\n      if (Object.keys(updateData).length === 0) {\r\n        toast({\r\n          title: 'No Changes',\r\n          description: 'No changes were made to save.',\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Update assignment in Supabase\r\n      const { error: updateError } = await supabase\r\n        .from('printer_assignments')\r\n        .update(updateData)\r\n        .eq('id', selectedAssignmentId);\r\n\r\n      if (updateError) {\r\n        console.error('❌ Update error:', updateError);\r\n        throw updateError;\r\n      }\r\n\r\n      // Trigger parent refresh\r\n      await onAssignmentUpdated();\r\n      \r\n      // Trigger manual refresh for AssignedToSection\r\n      window.dispatchEvent(new CustomEvent(`refresh-assignments-${printerId}`));\r\n\r\n      // Show detailed success toast based on what changed\r\n      const originalClientName = getClientName(originalClientId);\r\n      const newClientName = getClientName(clientId);\r\n      const originalDeptName = getDepartmentName(originalDepartmentId);\r\n      const newDeptName = getDepartmentName(departmentId);\r\n      \r\n      if (serialNumber !== originalSerialNumber && (clientId !== originalClientId || departmentId !== originalDepartmentId)) {\r\n        // Both serial number and assignment details changed\r\n        toast({\r\n          title: 'Assignment Updated Successfully',\r\n          description: `Client: ${originalClientName} → ${newClientName}\\nDepartment: ${originalDeptName} → ${newDeptName}\\nSerial: \"${originalSerialNumber}\" → \"${serialNumber}\"`,\r\n        });\r\n      } else if (serialNumber !== originalSerialNumber) {\r\n        // Only serial number changed\r\n        toast({\r\n          title: 'Serial Number Updated Successfully',\r\n          description: `Serial number changed from \"${originalSerialNumber}\" to \"${serialNumber}\"`,\r\n        });\r\n      } else if (clientId !== originalClientId || departmentId !== originalDepartmentId) {\r\n        // Only assignment details changed\r\n        toast({\r\n          title: 'Assignment Updated Successfully',\r\n          description: `Old:\\nClient: ${originalClientName}\\nDepartment: ${originalDeptName}\\n\\nNew:\\nClient: ${newClientName}\\nDepartment: ${newDeptName}\\n\\nSuccessfully Updated`,\r\n        });\r\n      }\r\n      \r\n      onClose();\r\n    } catch (error) {\r\n      console.error('❌ Save operation failed:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to update assignment. Please try again.',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const hasChanges = () => {\r\n    const changes = clientId !== originalClientId ||\r\n      departmentId !== originalDepartmentId ||\r\n      serialNumber !== originalSerialNumber ||\r\n      isClientOwned !== !!selectedAssignment?.is_client_owned;\r\n    return changes;\r\n  };\r\n\r\n  // Add handler for saving client/department from modal\r\n  const handleClientDeptSave = async (newClientId: string, newDepartmentId: string) => {\r\n    setClientId(newClientId);\r\n    setDepartmentId(newDepartmentId);\r\n    setShowClientDeptModal(false);\r\n    setLoading(true);\r\n    try {\r\n      let depts = await clientService.getDepartmentsByClient(newClientId);\r\n      let deptName = '';\r\n      const found = depts.find(d => d.id === newDepartmentId);\r\n      if (found) {\r\n        deptName = found.name;\r\n      } else if (selectedAssignment) {\r\n        deptName = [selectedAssignment.department_name, selectedAssignment.location_name].filter(Boolean).join(' - ') || 'Unknown Department/Location';\r\n      }\r\n      setSelectedDepartmentName(deptName);\r\n      // Ensure the selected department/location is included\r\n      if (\r\n        newDepartmentId &&\r\n        !depts.some(d => d.id === newDepartmentId)\r\n      ) {\r\n        depts = [\r\n          ...depts,\r\n          {\r\n            id: newDepartmentId,\r\n            name: deptName,\r\n          },\r\n        ];\r\n      }\r\n      setDepartments(depts.map(d => ({ id: d.id, name: d.name })));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  if (fetchingData) {\r\n    return (\r\n      <Dialog open={isOpen} onOpenChange={onClose}>\r\n        <DialogContent className=\"max-w-md\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"flex items-center space-x-2\">\r\n              <Edit3 className=\"h-6 w-6 animate-spin mr-2\" />\r\n              <span>Loading latest assignment data...</span>\r\n            </DialogTitle>\r\n          </DialogHeader>\r\n          <div className=\"flex items-center justify-center py-8\">\r\n            <Loader2 className=\"h-6 w-6 animate-spin mr-2\" />\r\n            <span>Loading latest assignment data...</span>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"max-w-md\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center space-x-2\">\r\n            <Edit3 className=\"h-4 w-4 text-blue-600\" />\r\n            <span className=\"text-base font-semibold\">Edit Assignment</span>\r\n            {/* Service Unit / Client Owned Switch removed from header */}\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n        <div className=\"space-y-4\">\r\n          {step === 1 && (\r\n            <div>\r\n              {/* Printer details header, matching TransferPrinterModal */}\r\n              <p className=\"text-gray-700 mb-4\">\r\n                Select an assignment to edit for printer <b>{[\r\n  printerDetails.manufacturer,\r\n  printerDetails.series,\r\n  printerDetails.model || printerDetails.name\r\n].filter(Boolean).join(' ')}</b>:\r\n              </p>\r\n              {fetchingData ? (\r\n                <div className=\"flex items-center justify-center py-8\">\r\n                  <Loader2 className=\"h-6 w-6 animate-spin text-purple-600\" />\r\n                  <span className=\"ml-2\">Loading assignments...</span>\r\n                </div>\r\n              ) : assignments.length === 0 ? (\r\n                <div className=\"text-gray-500 italic\">No active assignments found.</div>\r\n              ) : (\r\n                <ul className=\"space-y-3 mb-4\">\r\n                  {assignments.map(a => (\r\n                    <li\r\n                      key={a.id}\r\n                      className={`border rounded-lg p-3 flex flex-col cursor-pointer hover:bg-purple-50 transition ${selectedAssignmentId === a.id ? 'ring-2 ring-purple-400' : ''}`}\r\n                      onClick={() => handleAssignmentSelect(a.id)}\r\n                    >\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <User className=\"h-4 w-4 text-purple-500\" />\r\n                        <span className=\"font-medium\">{a.client_name || a.client_id}</span>\r\n                        {a.serial_number && <span className=\"ml-2 text-xs text-gray-500\">SN: {a.serial_number}</span>}\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 mt-1 text-xs text-gray-600\">\r\n                        {a.department_name && (\r\n                          <>\r\n                            <Building2 className=\"h-3 w-3\" />\r\n                            {a.department_name}\r\n                            {a.location_name && ` - ${a.location_name}`}\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n              {/* Removed Cancel and navigation buttons from step 1 */}\r\n            </div>\r\n          )}\r\n          {step === 2 && selectedAssignment && (\r\n            <>\r\n              <div className=\"mb-4 p-3 rounded-md bg-gray-50 border flex flex-col gap-1 relative\">\r\n                {/* Service Unit / Client Owned Switch inside info box */}\r\n                <div className=\"flex items-center gap-2 mb-2\">\r\n                  <span className=\"text-xs\">Service Unit</span>\r\n                  <Switch\r\n                    id=\"isClientOwned\"\r\n                    checked={isClientOwned}\r\n                    onCheckedChange={setIsClientOwned}\r\n                    disabled={loading}\r\n                    className=\"h-5 w-9\"\r\n                  />\r\n                  <span className=\"text-xs\">Client Owned</span>\r\n                </div>\r\n                {/* Placeholder Change button, right side, vertically centered */}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"absolute right-3 top-1/2 -translate-y-1/2 px-3 py-1 text-xs rounded bg-gray-200 text-gray-700 hover:bg-gray-300\"\r\n                  style={{ minWidth: '60px' }}\r\n                  onClick={() => setShowClientDeptModal(true)}\r\n                >\r\n                  Change\r\n                </button>\r\n                <div className=\"flex items-center gap-2 text-sm\">\r\n                  <User className=\"h-4 w-4 text-orange-500\" />\r\n                  {/* Show selected client name in real time */}\r\n                  <span className=\"font-medium\">{getClientName(clientId) || clientId}</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2 text-xs text-gray-600\">\r\n                  <span>Department/Location:</span>\r\n                  <span className=\"font-semibold\">\r\n                    {selectedDepartmentName || getDepartmentName(departmentId) || selectedAssignment.department_name || getCurrentDepartmentLocationDisplay()}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2 text-xs text-gray-600\">\r\n                  <span>Printer:</span>\r\n                  <span className=\"font-semibold\">{printerName || printerId}</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2 text-xs text-gray-600\">\r\n                  <span>Status:</span>\r\n                  <span className=\"font-semibold\">{selectedAssignment.status || 'N/A'}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-2 text-sm text-gray-700\">Edit assignment details:</div>\r\n              <div className=\"space-y-3\">\r\n                {/* Client and Department + Location fields have been completely removed */}\r\n                {/* Serial Number (simple display with edit icon) */}\r\n                <div>\r\n                  <Label>Serial Number:</Label>\r\n                  <div className=\"flex items-center gap-2 mt-1\">\r\n                    {isSerialNumberEditable ? (\r\n                      <Input\r\n                        value={serialNumber}\r\n                        onChange={e => setSerialNumber(e.target.value)}\r\n                        disabled={loading}\r\n                        className=\"flex-1\"\r\n                        placeholder=\"Enter serial number...\"\r\n                        autoFocus\r\n                      />\r\n                    ) : (\r\n                      <span className=\"text-base text-gray-900 font-mono\">{serialNumber || '—'}</span>\r\n                    )}\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"ghost\"\r\n                      size=\"icon\"\r\n                      onClick={() => setIsSerialNumberEditable(!isSerialNumberEditable)}\r\n                      disabled={loading}\r\n                      title=\"Edit Serial Number\"\r\n                    >\r\n                      <Edit3 className=\"h-4 w-4 text-blue-500\" />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex space-x-3 mt-6\">\r\n                <Button\r\n                  onClick={() => setStep(1)}\r\n                  variant=\"outline\"\r\n                  disabled={loading}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  onClick={handleSave}\r\n                  disabled={loading || !hasChanges()}\r\n                  className=\"flex-1\"\r\n                >\r\n                  {loading ? <Loader2 className=\"h-5 w-5 animate-spin mr-2\" /> : null}\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </DialogContent>\r\n      {/* Client/Department Selection Modal */}\r\n      <ClientDepartmentSelectionModal\r\n        isOpen={showClientDeptModal}\r\n        onClose={() => setShowClientDeptModal(false)}\r\n        currentClientId={clientId}\r\n        currentDepartmentId={departmentId}\r\n        onSave={handleClientDeptSave}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditAssignmentModal;\r\n","import React, { useState } from 'react';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Button } from '@/components/ui/button';\r\n\r\nconst MAINTENANCE_STATUSES = [\r\n  'For Repair',\r\n  'For Pullout',\r\n  'Need Drumkit Replacement',\r\n  'Need Cleaning',\r\n  'Done',\r\n];\r\n\r\nexport default function AssignmentMaintenanceStatusForm({\r\n  assignment,\r\n  printerId,\r\n  onSuccess,\r\n  onError,\r\n}) {\r\n  const [status, setStatus] = useState(assignment.maintenance_status || '');\r\n  const [details, setDetails] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      // 1. Update the maintenance_status in printer_assignments\r\n      const { error: updateError } = await supabase\r\n        .from('printer_assignments')\r\n        .update({ maintenance_status: status } as any)\r\n        .eq('id', assignment.id);\r\n\r\n      if (updateError) throw updateError;\r\n\r\n      // 2. If status is 'Done', log a maintenance event\r\n      if (status === 'Done') {\r\n        const { error: insertError } = await supabase\r\n          .from('maintenance_history')\r\n          .insert([{\r\n            printer_id: printerId,\r\n            assignment_id: assignment.id,\r\n            maintenance_type: 'General',\r\n            action_description: details || 'Maintenance completed',\r\n            status_before: assignment.maintenance_status || null,\r\n            status_after: 'Done',\r\n            performed_by: 'Technician', // Replace with current user if available\r\n            performed_at: new Date().toISOString(),\r\n            completed_date: new Date().toISOString().split('T')[0],\r\n          }]);\r\n        if (insertError) throw insertError;\r\n      }\r\n\r\n      if (onSuccess) onSuccess();\r\n      alert('Maintenance status updated!');\r\n    } catch (err) {\r\n      if (onError) onError(err);\r\n      alert('Error: ' + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleUpdate} className=\"space-y-4\">\r\n      <div>\r\n        <label className=\"block text-sm font-medium mb-1\">Maintenance Status</label>\r\n        <select\r\n          className=\"border rounded px-2 py-1 w-full\"\r\n          value={status}\r\n          onChange={e => setStatus(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\" disabled>Select status</option>\r\n          {MAINTENANCE_STATUSES.map(s => (\r\n            <option key={s} value={s}>{s}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {status === 'Done' && (\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-1\">Maintenance Details</label>\r\n          <textarea\r\n            className=\"border rounded px-2 py-1 w-full\"\r\n            value={details}\r\n            onChange={e => setDetails(e.target.value)}\r\n            placeholder=\"Describe what was done (optional)\"\r\n            rows={3}\r\n          />\r\n        </div>\r\n      )}\r\n      <Button type=\"submit\" disabled={loading}>\r\n        {loading ? 'Updating...' : 'Update Maintenance Status'}\r\n      </Button>\r\n    </form>\r\n  );\r\n} ","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport AssignmentMaintenanceStatusForm from '../AssignmentMaintenanceStatusForm';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Button } from '@/components/ui/button';\r\nimport { User, Building2 } from 'lucide-react';\r\n\r\ninterface UpdateMaintenanceStatusModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  printerId: string;\r\n  onStatusUpdated?: () => void;\r\n}\r\n\r\nconst UpdateMaintenanceStatusModal: React.FC<UpdateMaintenanceStatusModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  printerId,\r\n  onStatusUpdated,\r\n}) => {\r\n  const [step, setStep] = useState(1);\r\n  const [assignments, setAssignments] = useState<any[]>([]);\r\n  const [selectedAssignment, setSelectedAssignment] = useState<any | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [printerName, setPrinterName] = useState<string>('');\r\n  // Add state for printer details\r\n  const [printerDetails, setPrinterDetails] = useState({ name: '', manufacturer: '', series: '', model: '' });\r\n\r\n  useEffect(() => {\r\n    const fetchAssignments = async () => {\r\n      if (isOpen && printerId) {\r\n        setLoading(true);\r\n        try {\r\n          const { data } = await supabase\r\n            .from('printer_assignments')\r\n            .select(`\r\n              id,\r\n              client_id,\r\n              department_location_id,\r\n              department,\r\n              location,\r\n              serial_number,\r\n              status,\r\n              clients!inner (\r\n                id,\r\n                name\r\n              ),\r\n              departments_location (\r\n                id,\r\n                name,\r\n                department:departments (\r\n                  id,\r\n                  name\r\n                )\r\n              )\r\n            `)\r\n            .eq('printer_id', printerId)\r\n            .eq('status', 'active');\r\n          setAssignments(data || []);\r\n          if (data?.length === 1) {\r\n            setSelectedAssignment(data[0]);\r\n            setStep(2);\r\n          } else {\r\n            setStep(1);\r\n          }\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      } else {\r\n        setAssignments([]);\r\n        setSelectedAssignment(null);\r\n        setStep(1);\r\n      }\r\n    };\r\n    fetchAssignments();\r\n  }, [isOpen, printerId]);\r\n\r\n  // Fetch printer details when modal opens\r\n  useEffect(() => {\r\n    if (isOpen && printerId) {\r\n      (async () => {\r\n        const { data, error } = await supabase\r\n          .from('printers')\r\n          .select('name, manufacturer, series, model')\r\n          .eq('id', printerId)\r\n          .single();\r\n        if (!error && data) setPrinterDetails(data);\r\n      })();\r\n    }\r\n  }, [isOpen, printerId]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && printerId) {\r\n      (async () => {\r\n        const { data, error } = await supabase\r\n          .from('printers')\r\n          .select('name')\r\n          .eq('id', printerId)\r\n          .single();\r\n        if (!error && data?.name) setPrinterName(data.name);\r\n      })();\r\n    }\r\n  }, [isOpen, printerId]);\r\n\r\n  const handleAssignmentSelect = (assignment: any) => {\r\n    setSelectedAssignment(assignment);\r\n    setStep(2);\r\n  };\r\n\r\n  const handleSuccess = () => {\r\n    onStatusUpdated?.();\r\n    // Dispatch custom event for real-time refresh\r\n    window.dispatchEvent(new Event(`refresh-assignments-${printerId}`));\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"rounded-lg\">\r\n        <DialogHeader>\r\n          <DialogTitle>Update Maintenance Status</DialogTitle>\r\n        </DialogHeader>\r\n        {step === 1 && (\r\n          <div>\r\n            <p className=\"text-gray-700 mb-4\">\r\n              Select an assignment to update maintenance status for printer <b>{[\r\n                printerDetails.manufacturer,\r\n                printerDetails.series,\r\n                printerDetails.model || printerDetails.name\r\n              ].filter(Boolean).join(' ')}</b>:\r\n            </p>\r\n            {loading ? (\r\n              <div className=\"flex items-center justify-center py-8\">\r\n                <span className=\"ml-2\">Loading assignments...</span>\r\n              </div>\r\n            ) : assignments.length === 0 ? (\r\n              <div className=\"text-gray-500 italic\">No active assignments found.</div>\r\n            ) : (\r\n              <ul className=\"space-y-3 mb-4\">\r\n                {assignments.map(a => (\r\n                  <li\r\n                    key={a.id}\r\n                    className=\"border rounded-lg p-3 flex flex-col cursor-pointer hover:bg-orange-50 transition\"\r\n                    onClick={() => handleAssignmentSelect(a)}\r\n                  >\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <User className=\"h-4 w-4 text-orange-500\" />\r\n                      <span className=\"font-medium\">{a.clients?.name || a.client_id}</span>\r\n                      {a.serial_number && <span className=\"ml-2 text-xs text-gray-500\">SN: {a.serial_number}</span>}\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2 mt-1 text-xs text-gray-600\">\r\n                      {(a.departments_location?.department?.name || a.department) && (\r\n                        <>\r\n                          <Building2 className=\"h-3 w-3\" />\r\n                          {a.departments_location?.department?.name || a.department}\r\n                          {a.departments_location?.name && ` - ${a.departments_location.name}`}\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        )}\r\n        {step === 2 && selectedAssignment && (\r\n          <>\r\n            <div className=\"mb-4 p-3 rounded-md bg-gray-50 border flex flex-col gap-1\">\r\n              <div className=\"flex items-center gap-2 text-sm\">\r\n                <User className=\"h-4 w-4 text-orange-500\" />\r\n                <span className=\"font-medium\">{selectedAssignment.clients?.name || selectedAssignment.client_id}</span>\r\n                {selectedAssignment.serial_number && (\r\n                  <span className=\"ml-2 text-xs text-gray-500\">SN: {selectedAssignment.serial_number}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"flex items-center gap-2 text-xs text-gray-600\">\r\n                <span>Printer:</span>\r\n                <span className=\"font-semibold\">{[\r\n                  printerDetails.manufacturer,\r\n                  printerDetails.series,\r\n                  printerDetails.model || printerDetails.name\r\n                ].filter(Boolean).join(' ')}</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-2 text-xs text-gray-600\">\r\n                <span>Status:</span>\r\n                <span className=\"font-semibold\">{selectedAssignment.status || 'N/A'}</span>\r\n              </div>\r\n            </div>\r\n            <AssignmentMaintenanceStatusForm\r\n              assignment={selectedAssignment}\r\n              printerId={printerId}\r\n              onSuccess={handleSuccess}\r\n              onError={onClose}\r\n            />\r\n          </>\r\n        )}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UpdateMaintenanceStatusModal; ","import React, { useState, useEffect } from 'react';\r\nimport { Trash2, Edit, Eye, ArrowRightLeft, Edit3, Wrench } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { productService } from '@/services/productService';\r\nimport AssignedToSection from './components/AssignedToSection';\r\nimport { CompatibleProducts } from './components/CompatibleProducts';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from '@/components/ui/dropdown-menu';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport UnassignPrinterModal from './UnassignPrinterModal';\r\nimport TransferPrinterModal from './TransferPrinterModal';\r\nimport { clientService } from '@/services/clientService';\r\nimport ViewPrinterModal from './ViewPrinterModal';\r\nimport EditAssignmentModal from './components/modals/EditAssignment';\r\nimport { assetService } from '@/services/assetService';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport AssignmentMaintenanceStatusForm from './components/AssignmentMaintenanceStatusForm';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogClose } from '@/components/ui/dialog';\r\nimport MaintenanceStatusDisplay from './components/MaintenanceStatusDisplay';\r\nimport UpdateMaintenanceStatusModal from './components/modals/UpdateMaintenanceStatusModal';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\nconst PrinterDashboardCard = ({ printer, onEdit, onDelete, onTransfer, onEditAssignment = undefined, debug = false }) => {\r\n  const { userProfile } = useAuth();\r\n  const [showUnassignModal, setShowUnassignModal] = useState(false);\r\n  const [showTransferModal, setShowTransferModal] = useState(false);\r\n  const [clients, setClients] = useState([]);\r\n  const [showViewModal, setShowViewModal] = useState(false);\r\n  const [showEditAssignmentModal, setShowEditAssignmentModal] = useState(false);\r\n  const [showMaintenanceModal, setShowMaintenanceModal] = useState(false);\r\n  const navigate = useNavigate();\r\n  // Add state for compatible product fallback\r\n  const [firstCompatibleProduct, setFirstCompatibleProduct] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!printer.product_name) {\r\n      // Only fetch if product_name is missing\r\n      (async () => {\r\n        try {\r\n          const products = await productService.getProductsByPrinter(printer.id);\r\n          if (products && products.length > 0) {\r\n            setFirstCompatibleProduct(products[0]);\r\n          }\r\n        } catch (e) {\r\n          setFirstCompatibleProduct(null);\r\n        }\r\n      })();\r\n    }\r\n  }, [printer.product_name, printer.id]);\r\n\r\n  useEffect(() => {\r\n    if (showTransferModal && clients.length === 0) {\r\n      clientService.getClients().then(setClients);\r\n    }\r\n  }, [showTransferModal, clients.length]);\r\n\r\n  const getDepartmentsByClient = async (clientId) => {\r\n    return await clientService.getDepartmentsByClient(clientId);\r\n  };\r\n\r\n  const handleTransfer = async (assignment, toClientId, toDepartmentId) => {\r\n    try {\r\n      // Update the assignment in the database\r\n      const { error } = await supabase\r\n        .from('printer_assignments')\r\n        .update({\r\n          client_id: toClientId,\r\n          department_location_id: toDepartmentId,\r\n          updated_at: new Date().toISOString()\r\n        })\r\n        .eq('id', assignment.id);\r\n\r\n      if (error) {\r\n        console.error('Transfer failed:', error);\r\n        throw error;\r\n      }\r\n\r\n      setShowTransferModal(false);\r\n    } catch (error) {\r\n      console.error('Transfer error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const assignmentsByClient = (printer.printer_assignments || []).reduce((acc, assignment) => {\r\n    const clientName = assignment.clients?.name || 'Unknown Client';\r\n    acc[clientName] = (acc[clientName] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const handleDeleteClick = () => {\r\n    setShowUnassignModal(true);\r\n  };\r\n\r\n  const handleTransferClick = () => {\r\n    setShowTransferModal(true);\r\n  };\r\n\r\n  const handleTransferModalClose = () => {\r\n    setShowTransferModal(false);\r\n  };\r\n\r\n  const handleEditAssignmentClick = () => {\r\n    if (typeof onEditAssignment === 'function') {\r\n      onEditAssignment(printer);\r\n    } else {\r\n      setShowEditAssignmentModal(true);\r\n    }\r\n  };\r\n\r\n  // Get all assignments (including inactive ones)\r\n  const allAssignments = printer.printer_assignments || [];\r\n\r\n  // Use the assigned_count from the data service (same pattern as Available tab)\r\n  const assignmentCount = printer.assigned_count || 0;\r\n\r\n  return (\r\n    <div className=\"bg-orange-50/80 border border-orange-200/80 rounded-lg shadow-sm w-full max-w-full hover:shadow-md transition-shadow touch-manipulation\">\r\n      {/* Mobile Debug Info - Collapsible */}\r\n      {debug && (\r\n        <details className=\"mb-2\">\r\n          <summary className=\"text-xs font-medium text-yellow-800 cursor-pointer p-2 bg-yellow-100 rounded-t\">\r\n            Debug Info (tap to expand)\r\n          </summary>\r\n          <div className=\"p-2 bg-yellow-50 border border-yellow-200 rounded-b text-xs text-yellow-900 max-h-48 overflow-y-auto\">\r\n            <div className=\"space-y-1\">\r\n              <div><b>Printer ID:</b> {printer.id}</div>\r\n              <div><b>Name:</b> {printer.name}</div>\r\n              <div><b>Manufacturer:</b> {printer.manufacturer}</div>\r\n              <div><b>Model:</b> {printer.model}</div>\r\n              <div><b>Series:</b> {printer.series}</div>\r\n              <div><b>Assignments:</b> {printer.printer_assignments?.length || 0}</div>\r\n            </div>\r\n          </div>\r\n        </details>\r\n      )}\r\n      \r\n      {/* Mobile-First Card Layout */}\r\n      <div className=\"p-3 w-full max-w-full flex flex-col\">\r\n        {/* Printer name (top row) */}\r\n        <div className=\"mb-1\">\r\n          <span className=\"font-bold text-base text-gray-900 truncate\">\r\n            {[printer.manufacturer, printer.series, printer.model || printer.name].filter(Boolean).join(' ')}\r\n          </span>\r\n        </div>\r\n        {/* Second row: image (left), right: action buttons (top), product info (below) */}\r\n        <div className=\"flex items-start gap-3 mb-1\">\r\n          {/* Printer image */}\r\n          <div className=\"relative flex-shrink-0\">\r\n            <img\r\n              src={printer.image_url || '/placeholder.svg'}\r\n              alt={printer.name || 'Printer'}\r\n              className=\"w-24 h-24 object-cover rounded-md\"\r\n              onError={e => { e.currentTarget.src = '/placeholder.svg'; }}\r\n            />\r\n            {/* Only show assignment count badge if user is NOT a client */}\r\n            {userProfile?.role !== 'client' && assignmentCount > 1 && (\r\n              <Badge\r\n                variant=\"secondary\"\r\n                className=\"absolute -top-1 -right-1 h-5 w-5 rounded-full p-0 flex items-center justify-center text-xs bg-blue-500 text-white\"\r\n              >\r\n                {assignmentCount}\r\n              </Badge>\r\n            )}\r\n          </div>\r\n          {/* Right side: action buttons (top), product info (below, left-aligned under buttons) */}\r\n          <div className=\"flex-1 min-w-0 flex flex-col justify-start h-16\">\r\n            {/* Action buttons */}\r\n            {userProfile?.role !== 'client' && (\r\n              <div className=\"flex gap-2 mb-1 justify-start\">\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"icon\"\r\n                  className=\"h-8 w-8\"\r\n                  title=\"Update Assignment\"\r\n                  onClick={handleEditAssignmentClick}\r\n                >\r\n                  <Edit className=\"h-4 w-4 text-green-600\" />\r\n                </Button>\r\n                {userProfile?.role === 'superadmin' && (\r\n                  <Button \r\n                    variant=\"ghost\" \r\n                    size=\"icon\" \r\n                    className=\"h-8 w-8\" \r\n                    onClick={handleDeleteClick} \r\n                    title=\"Delete\"\r\n                  >\r\n                    <Trash2 className=\"h-4 w-4 text-red-500\" />\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"icon\"\r\n                  className=\"h-8 w-8\"\r\n                  title=\"View\"\r\n                  onClick={e => { e.stopPropagation(); setShowViewModal(true); }}\r\n                >\r\n                  <Eye className=\"h-4 w-4 text-gray-600\" />\r\n                </Button>\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"icon\"\r\n                  className=\"h-8 w-8\"\r\n                  title=\"Transfer\"\r\n                  onClick={handleTransferClick}\r\n                >\r\n                  <ArrowRightLeft className=\"h-4 w-4 text-blue-500\" />\r\n                </Button>\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"icon\"\r\n                  className=\"h-8 w-8\"\r\n                  title=\"Maintenance\"\r\n                  onClick={() => setShowMaintenanceModal(true)}\r\n                >\r\n                  <Wrench className=\"h-4 w-4 text-orange-500\" />\r\n                </Button>\r\n              </div>\r\n            )}\r\n            {/* Compatible Products: product name, sku, color dot */}\r\n            <CompatibleProducts \r\n              printerId={printer.id} \r\n              className=\"text-xs flex flex-row flex-wrap gap-2 mt-1\" \r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Section Divider */}\r\n        <hr className=\"my-2 border-t border-orange-200/50\" />\r\n        {/* Assignment Section */}\r\n        <div>\r\n          <AssignedToSection printerId={printer.id} />\r\n        </div>\r\n      </div>\r\n\r\n      <UnassignPrinterModal\r\n        isOpen={showUnassignModal}\r\n        onClose={() => setShowUnassignModal(false)}\r\n        printerId={printer.id}\r\n        onUnassigned={async () => {\r\n          setShowUnassignModal(false);\r\n          // Only refresh data, don't call onDelete which causes DeleteConfirmDialog\r\n          if (onEdit) onEdit(); // This triggers a data refresh\r\n        }}\r\n      />\r\n      <TransferPrinterModal\r\n        isOpen={showTransferModal}\r\n        onClose={() => setShowTransferModal(false)}\r\n        printerId={printer.id}\r\n        clients={clients}\r\n        getDepartmentsByClient={getDepartmentsByClient}\r\n        onTransfer={handleTransfer}\r\n      />\r\n      <ViewPrinterModal\r\n        isOpen={showViewModal}\r\n        onClose={() => setShowViewModal(false)}\r\n        printer={printer}\r\n      />\r\n      {showEditAssignmentModal && (\r\n        <EditAssignmentModal\r\n          isOpen={showEditAssignmentModal}\r\n          onClose={() => setShowEditAssignmentModal(false)}\r\n          printerId={printer.id}\r\n          onAssignmentUpdated={async () => {\r\n            try {\r\n              setShowEditAssignmentModal(false);\r\n              // Trigger a refresh to show updated data\r\n              if (onEdit) onEdit();\r\n            } catch (error) {\r\n              console.error('Failed to refresh after assignment update:', error);\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n      <UpdateMaintenanceStatusModal\r\n        isOpen={showMaintenanceModal}\r\n        onClose={() => setShowMaintenanceModal(false)}\r\n        printerId={printer.id}\r\n        onStatusUpdated={onEdit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrinterDashboardCard;\r\n","import React from 'react';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Printer } from '@/types/database';\r\n\r\ninterface PrinterFormData extends Omit<Printer, 'id' | 'created_at' | 'updated_at' | 'purchase_price' | 'rental_price_per_month'> {\r\n  purchase_price: string;\r\n  rental_price_per_month: string;\r\n}\r\n\r\ninterface PrinterSpecificationsFormProps {\r\n  formData: Partial<PrinterFormData>;\r\n  onInputChange: (field: string, value: any) => void;\r\n}\r\n\r\nconst PrinterSpecificationsForm: React.FC<PrinterSpecificationsFormProps> = ({\r\n  formData,\r\n  onInputChange,\r\n}) => {\r\n  // Common paper sizes - removed unwanted sizes\r\n  const paperSizes = [\r\n    'A4',\r\n    'A3',\r\n    'A5',\r\n    'Letter',\r\n    'Legal',\r\n    'Executive',\r\n    'Folio'\r\n  ];\r\n\r\n  // Parse selected paper sizes from string to array\r\n  const selectedPaperSizes = formData.supported_paper_sizes \r\n    ? formData.supported_paper_sizes.split(',').map(size => size.trim()).filter(size => size)\r\n    : [];\r\n\r\n  // Handle paper size checkbox changes\r\n  const handlePaperSizeChange = (paperSize: string, checked: boolean) => {\r\n    let updatedSizes = [...selectedPaperSizes];\r\n    \r\n    if (checked) {\r\n      // Add size if not already selected\r\n      if (!updatedSizes.includes(paperSize)) {\r\n        updatedSizes.push(paperSize);\r\n      }\r\n    } else {\r\n      // Remove size\r\n      updatedSizes = updatedSizes.filter(size => size !== paperSize);\r\n    }\r\n    \r\n    // Convert back to comma-separated string\r\n    const sizesString = updatedSizes.join(', ');\r\n    onInputChange('supported_paper_sizes', sizesString);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Paper Sizes - Checkbox Selection */}\r\n      <div>\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Paper Specifications</h3>\r\n        <div className=\"space-y-3\">\r\n          <Label className=\"text-sm font-semibold text-gray-700\">\r\n            Supported Paper Sizes\r\n          </Label>\r\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 p-4 bg-gray-50 rounded-lg border\">\r\n            {paperSizes.map((paperSize) => (\r\n              <div key={paperSize} className=\"flex items-center space-x-2\">\r\n                <Checkbox\r\n                  id={`paper-${paperSize}`}\r\n                  checked={selectedPaperSizes.includes(paperSize)}\r\n                  onCheckedChange={(checked) => handlePaperSizeChange(paperSize, checked as boolean)}\r\n                />\r\n                <Label \r\n                  htmlFor={`paper-${paperSize}`}\r\n                  className=\"text-sm font-medium cursor-pointer\"\r\n                >\r\n                  {paperSize}\r\n                </Label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          {/* Display selected sizes */}\r\n          {selectedPaperSizes.length > 0 && (\r\n            <div className=\"mt-3 p-3 bg-blue-50 rounded-lg border border-blue-200\">\r\n              <p className=\"text-sm font-medium text-blue-800 mb-1\">Selected Paper Sizes:</p>\r\n              <p className=\"text-sm text-blue-700\">{selectedPaperSizes.join(', ')}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Connectivity Options */}\r\n      <div>\r\n        <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Connectivity Options</h3>\r\n        <div className=\"grid grid-cols-2 md:grid-cols-2 gap-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <Label htmlFor=\"connectivity_usb\">USB</Label>\r\n            <Switch\r\n              id=\"connectivity_usb\"\r\n              checked={formData.connectivity_usb || false}\r\n              onCheckedChange={(checked) => onInputChange('connectivity_usb', checked)}\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center justify-between\">\r\n            <Label htmlFor=\"connectivity_wifi\">Wi-Fi</Label>\r\n            <Switch\r\n              id=\"connectivity_wifi\"\r\n              checked={formData.connectivity_wifi || false}\r\n              onCheckedChange={(checked) => onInputChange('connectivity_wifi', checked)}\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center justify-between\">\r\n            <Label htmlFor=\"connectivity_wifi_direct\">Wi-Fi Direct</Label>\r\n            <Switch\r\n              id=\"connectivity_wifi_direct\"\r\n              checked={formData.connectivity_wifi_direct || false}\r\n              onCheckedChange={(checked) => onInputChange('connectivity_wifi_direct', checked)}\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center justify-between\">\r\n            <Label htmlFor=\"connectivity_ethernet\">Ethernet</Label>\r\n            <Switch\r\n              id=\"connectivity_ethernet\"\r\n              checked={formData.connectivity_ethernet || false}\r\n              onCheckedChange={(checked) => onInputChange('connectivity_ethernet', checked)}\r\n            />\r\n          </div>\r\n          {/* Removed Bluetooth and NFC options */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrinterSpecificationsForm;\r\n","import React, { useState } from 'react';\r\nimport { X, Upload } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';\r\nimport { Printer } from '@/types/database';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport PrinterSpecificationsForm from './PrinterSpecificationsForm';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ninterface EditPrinterFormModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  printer: Printer;\r\n  onPrinterUpdated: (printerData: Partial<Printer>) => void;\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst EditPrinterFormModal: React.FC<EditPrinterFormModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  printer,\r\n  onPrinterUpdated,\r\n  isLoading = false,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    name: printer.name || '',\r\n    manufacturer: printer.manufacturer || '',\r\n    model: printer.model || '',\r\n    series: printer.series || '',\r\n    color: printer.color || '',\r\n    description: printer.description || '',\r\n    image_url: printer.image_url || '',\r\n    is_available: printer.is_available ?? true,\r\n    rental_eligible: printer.rental_eligible ?? false,\r\n    rental_price_per_month: printer.rental_price_per_month?.toString() || '',\r\n    purchase_price: printer.purchase_price?.toString() || '',\r\n    aliases: printer.aliases || '',\r\n    // New specification fields\r\n    print_resolution: printer.print_resolution || '',\r\n    print_speed_bw: printer.print_speed_bw || '',\r\n    print_speed_color: printer.print_speed_color || '',\r\n    first_page_out_time: printer.first_page_out_time || '',\r\n    input_tray_capacity: printer.input_tray_capacity || '',\r\n    output_tray_capacity: printer.output_tray_capacity || '',\r\n    supported_paper_sizes: printer.supported_paper_sizes || '',\r\n    supported_paper_types: printer.supported_paper_types || '',\r\n    automatic_duplex: printer.automatic_duplex ?? false,\r\n    connectivity_usb: printer.connectivity_usb ?? false,\r\n    connectivity_wifi: printer.connectivity_wifi ?? false,\r\n    connectivity_wifi_direct: printer.connectivity_wifi_direct ?? false,\r\n    connectivity_ethernet: printer.connectivity_ethernet ?? false,\r\n    connectivity_bluetooth: printer.connectivity_bluetooth ?? false,\r\n    connectivity_nfc: printer.connectivity_nfc ?? false,\r\n    cloud_printing_support: printer.cloud_printing_support || '',\r\n    driver_download_url: printer.driver_download_url || '',\r\n    software_download_url: printer.software_download_url || '',\r\n    user_manual_url: printer.user_manual_url || '',\r\n    supported_os: printer.supported_os || '',\r\n  });\r\n  const [imageFile, setImageFile] = useState<File | null>(null);\r\n  const [imagePreview, setImagePreview] = useState<string>(printer.image_url || '');\r\n  const [fetching, setFetching] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\r\n\r\n  // Fetch latest printer data from Supabase when modal opens or printer.id changes\r\n  React.useEffect(() => {\r\n    const fetchPrinter = async () => {\r\n      if (isOpen && printer?.id) {\r\n        setFetching(true);\r\n        const { data, error } = await supabase.from('printers').select('*').eq('id', printer.id).single();\r\n        if (data) {\r\n          setFormData({\r\n            name: data.name || '',\r\n            manufacturer: data.manufacturer || '',\r\n            model: data.model || '',\r\n            series: data.series || '',\r\n            color: data.color || '',\r\n            description: data.description || '',\r\n            image_url: data.image_url || '',\r\n            is_available: data.is_available ?? true,\r\n            rental_eligible: data.rental_eligible ?? false,\r\n            rental_price_per_month: data.rental_price_per_month?.toString() || '',\r\n            purchase_price: data.purchase_price?.toString() || '',\r\n            aliases: data.aliases || '',\r\n            // New specification fields\r\n            print_resolution: data.print_resolution || '',\r\n            print_speed_bw: data.print_speed_bw || '',\r\n            print_speed_color: data.print_speed_color || '',\r\n            first_page_out_time: data.first_page_out_time || '',\r\n            input_tray_capacity: data.input_tray_capacity || '',\r\n            output_tray_capacity: data.output_tray_capacity || '',\r\n            supported_paper_sizes: data.supported_paper_sizes || '',\r\n            supported_paper_types: data.supported_paper_types || '',\r\n            automatic_duplex: data.automatic_duplex ?? false,\r\n            connectivity_usb: data.connectivity_usb ?? false,\r\n            connectivity_wifi: data.connectivity_wifi ?? false,\r\n            connectivity_wifi_direct: data.connectivity_wifi_direct ?? false,\r\n            connectivity_ethernet: data.connectivity_ethernet ?? false,\r\n            connectivity_bluetooth: data.connectivity_bluetooth ?? false,\r\n            connectivity_nfc: data.connectivity_nfc ?? false,\r\n            cloud_printing_support: data.cloud_printing_support || '',\r\n            driver_download_url: data.driver_download_url || '',\r\n            software_download_url: data.software_download_url || '',\r\n            user_manual_url: data.user_manual_url || '',\r\n            supported_os: data.supported_os || '',\r\n          });\r\n          setImagePreview(data.image_url || '');\r\n          setImageFile(null);\r\n        }\r\n        setFetching(false);\r\n      }\r\n    };\r\n    fetchPrinter();\r\n  }, [printer?.id, isOpen]);\r\n\r\n  const handleImageChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      setImageFile(file);\r\n      setErrorMsg(null);\r\n      setUploading(true);\r\n      try {\r\n        const fileExt = file.name.split('.').pop();\r\n        const fileName = `${uuidv4()}.${fileExt}`;\r\n        const { data, error } = await supabase.storage\r\n          .from('printer-images')\r\n          .upload(fileName, file, {\r\n            cacheControl: '3600',\r\n            upsert: false,\r\n            contentType: file.type,\r\n          });\r\n        if (error) {\r\n          setErrorMsg(`Image upload failed: ${error.message || error}`);\r\n          setUploading(false);\r\n          return;\r\n        }\r\n        // Get public URL\r\n        const { data: urlData } = supabase.storage\r\n          .from('printer-images')\r\n          .getPublicUrl(fileName);\r\n        const publicUrl = urlData?.publicUrl || '';\r\n        setImagePreview(publicUrl);\r\n        setFormData(prev => ({ ...prev, image_url: publicUrl }));\r\n        setImageFile(null); // Remove file from state after upload\r\n      } catch (err: any) {\r\n        setErrorMsg(`Image upload failed. ${err?.message || err}`);\r\n      }\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleRemoveImage = () => {\r\n    setImageFile(null);\r\n    setImagePreview('');\r\n    setFormData(prev => ({ ...prev, image_url: '' }));\r\n  };\r\n\r\n  const handleInputChange = (field: string, value: any) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setErrorMsg(null);\r\n    if (uploading) return;\r\n    const updateData: Partial<Printer> = {\r\n      name: formData.name,\r\n      manufacturer: formData.manufacturer,\r\n      model: formData.model,\r\n      series: formData.series,\r\n      color: formData.color,\r\n      description: formData.description,\r\n      image_url: formData.image_url,\r\n      is_available: formData.is_available,\r\n      rental_eligible: formData.rental_eligible,\r\n      aliases: formData.aliases,\r\n      rental_price_per_month: formData.rental_price_per_month ? parseFloat(formData.rental_price_per_month.toString()) : null,\r\n      purchase_price: formData.purchase_price ? parseFloat(formData.purchase_price.toString()) : null,\r\n      // New specification fields\r\n      print_resolution: formData.print_resolution,\r\n      print_speed_bw: formData.print_speed_bw,\r\n      print_speed_color: formData.print_speed_color,\r\n      first_page_out_time: formData.first_page_out_time,\r\n      input_tray_capacity: formData.input_tray_capacity,\r\n      output_tray_capacity: formData.output_tray_capacity,\r\n      supported_paper_sizes: formData.supported_paper_sizes,\r\n      supported_paper_types: formData.supported_paper_types,\r\n      automatic_duplex: formData.automatic_duplex,\r\n      connectivity_usb: formData.connectivity_usb,\r\n      connectivity_wifi: formData.connectivity_wifi,\r\n      connectivity_wifi_direct: formData.connectivity_wifi_direct,\r\n      connectivity_ethernet: formData.connectivity_ethernet,\r\n      connectivity_bluetooth: formData.connectivity_bluetooth,\r\n      connectivity_nfc: formData.connectivity_nfc,\r\n      cloud_printing_support: formData.cloud_printing_support,\r\n      driver_download_url: formData.driver_download_url,\r\n      software_download_url: formData.software_download_url,\r\n      user_manual_url: formData.user_manual_url,\r\n      supported_os: formData.supported_os,\r\n    };\r\n    // Update printer record in Supabase\r\n    try {\r\n      const { error } = await supabase\r\n        .from('printers')\r\n        .update(updateData)\r\n        .eq('id', printer.id);\r\n      if (error) throw error;\r\n      onPrinterUpdated(updateData);\r\n    } catch (err: any) {\r\n      setErrorMsg('Failed to update printer. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  if (fetching) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n        <div className=\"bg-white rounded-xl shadow-xl max-w-4xl w-full max-h-[90vh] flex items-center justify-center\">\r\n          <div className=\"text-gray-500 text-lg\">Loading printer info...</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-xl shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex items-center justify-between p-6 border-b\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900\">Edit Printer</h2>\r\n          <button onClick={onClose} className=\"text-gray-400 hover:text-gray-600\">\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"p-6\">\r\n          <Tabs defaultValue=\"basic\" className=\"w-full\">\r\n            <TabsList className=\"grid w-full grid-cols-2\">\r\n              <TabsTrigger value=\"basic\">Basic Information</TabsTrigger>\r\n              <TabsTrigger value=\"specifications\">Specifications</TabsTrigger>\r\n            </TabsList>\r\n            \r\n            <TabsContent value=\"basic\" className=\"space-y-4 mt-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <Label htmlFor=\"name\">Name *</Label>\r\n                  <Input\r\n                    id=\"name\"\r\n                    value={formData.name}\r\n                    onChange={(e) => handleInputChange('name', e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"manufacturer\">Manufacturer</Label>\r\n                  <Input\r\n                    id=\"manufacturer\"\r\n                    value={formData.manufacturer}\r\n                    onChange={(e) => handleInputChange('manufacturer', e.target.value)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"model\">Model</Label>\r\n                  <Input\r\n                    id=\"model\"\r\n                    value={formData.model}\r\n                    onChange={(e) => handleInputChange('model', e.target.value)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"series\">Series</Label>\r\n                  <Input\r\n                    id=\"series\"\r\n                    value={formData.series}\r\n                    onChange={(e) => handleInputChange('series', e.target.value)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"color\">Color</Label>\r\n                  <Input\r\n                    id=\"color\"\r\n                    value={formData.color}\r\n                    onChange={(e) => handleInputChange('color', e.target.value)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label>Printer Image</Label>\r\n                  <div className=\"flex items-center gap-4 mt-1\">\r\n                    {imagePreview ? (\r\n                      <div className=\"relative\">\r\n                        <img src={imagePreview} alt=\"Printer Preview\" className=\"w-24 h-24 object-cover rounded border\" />\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"absolute top-0 right-0 bg-white bg-opacity-80 rounded-full p-1 text-gray-600 hover:text-red-600\"\r\n                          onClick={handleRemoveImage}\r\n                          title=\"Remove image\"\r\n                        >\r\n                          <X className=\"h-4 w-4\" />\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <label className=\"flex flex-col items-center justify-center w-24 h-24 border-2 border-dashed rounded cursor-pointer hover:border-blue-400\">\r\n                        <Upload className=\"h-6 w-6 text-gray-400 mb-1\" />\r\n                        <span className=\"text-xs text-gray-500\">Upload</span>\r\n                        <input\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          className=\"hidden\"\r\n                          onChange={handleImageChange}\r\n                        />\r\n                      </label>\r\n                    )}\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-400 mt-1\">{imageFile ? 'Image will be uploaded on save.' : 'Current image will be kept unless changed.'}</p>\r\n                  <Label htmlFor=\"image_url\" className=\"mt-2\">Or Image URL</Label>\r\n                  <Input\r\n                    id=\"image_url\"\r\n                    value={formData.image_url}\r\n                    onChange={(e) => handleInputChange('image_url', e.target.value)}\r\n                    placeholder=\"https://...\"\r\n                    disabled={!!imageFile}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"description\">Description</Label>\r\n                <Textarea\r\n                  id=\"description\"\r\n                  value={formData.description}\r\n                  onChange={(e) => handleInputChange('description', e.target.value)}\r\n                  rows={3}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"aliases\">Aliases (comma-separated)</Label>\r\n                <Input\r\n                  id=\"aliases\"\r\n                  value={formData.aliases}\r\n                  onChange={(e) => handleInputChange('aliases', e.target.value)}\r\n                  placeholder=\"Alternative names, separated by commas\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <Label htmlFor=\"rental_price_per_month\">Monthly Rental Price</Label>\r\n                  <Input\r\n                    id=\"rental_price_per_month\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={formData.rental_price_per_month}\r\n                    onChange={(e) => handleInputChange('rental_price_per_month', e.target.value)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"purchase_price\">Purchase Price</Label>\r\n                  <Input\r\n                    id=\"purchase_price\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={formData.purchase_price}\r\n                    onChange={(e) => handleInputChange('purchase_price', e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex flex-col space-y-4 pt-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <Label htmlFor=\"is_available\">Available for Assignment</Label>\r\n                  <Switch\r\n                    id=\"is_available\"\r\n                    checked={formData.is_available}\r\n                    onCheckedChange={(checked) => handleInputChange('is_available', checked)}\r\n                  />\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <Label htmlFor=\"rental_eligible\">Rental Eligible</Label>\r\n                  <Switch\r\n                    id=\"rental_eligible\"\r\n                    checked={formData.rental_eligible}\r\n                    onCheckedChange={(checked) => handleInputChange('rental_eligible', checked)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </TabsContent>\r\n            \r\n            <TabsContent value=\"specifications\" className=\"mt-6\">\r\n              <PrinterSpecificationsForm\r\n                formData={formData}\r\n                onInputChange={handleInputChange}\r\n              />\r\n            </TabsContent>\r\n          </Tabs>\r\n\r\n          {errorMsg && (\r\n            <div className=\"text-red-500 text-sm mb-2\">{errorMsg}</div>\r\n          )}\r\n\r\n          <div className=\"flex space-x-3 pt-6 border-t mt-6\">\r\n            <Button type=\"button\" variant=\"outline\" onClick={onClose} className=\"flex-1\">\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\" disabled={isLoading || uploading} className=\"flex-1\">\r\n              {isLoading || uploading ? 'Updating...' : 'Update Printer'}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPrinterFormModal;\r\n","import { useState } from 'react';\r\nimport { useToast } from './use-toast';\r\nimport { printerService } from '@/services/printerService';\r\nimport { getErrorMessage } from '@/lib/utils';\r\nimport { Printer } from '@/types/database';\r\n\r\nexport const usePrinterActions = () => {\r\n  const { toast } = useToast();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const createPrinter = async (printerData: Omit<Printer, 'id' | 'created_at' | 'updated_at'>): Promise<boolean> => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      await printerService.createPrinter(printerData);\r\n      toast({\r\n        title: 'Success',\r\n        description: 'Printer created successfully!',\r\n      });\r\n      return true;\r\n    } catch (err) {\r\n      const errorMessage = getErrorMessage(err);\r\n      setError(errorMessage);\r\n      toast({\r\n        title: 'Error',\r\n        description: `Failed to create printer: ${errorMessage}`,\r\n        variant: 'destructive',\r\n      });\r\n      return false;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const updatePrinter = async (printerId: string, printerData: Partial<Printer>): Promise<boolean> => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      await printerService.updatePrinter(printerId, printerData);\r\n      toast({\r\n        title: 'Success',\r\n        description: 'Printer updated successfully!',\r\n      });\r\n      return true;\r\n    } catch (err) {\r\n      const errorMessage = getErrorMessage(err);\r\n      setError(errorMessage);\r\n      toast({\r\n        title: 'Error',\r\n        description: `Failed to update printer: ${errorMessage}`,\r\n        variant: 'destructive',\r\n      });\r\n      return false;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const deletePrinter = async (printerId: string, printerName: string): Promise<boolean> => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      await printerService.deletePrinter(printerId);\r\n      toast({\r\n        title: 'Success',\r\n        description: `Printer \"${printerName}\" deleted successfully!`,\r\n      });\r\n      return true;\r\n    } catch (err) {\r\n      const errorMessage = getErrorMessage(err);\r\n      setError(errorMessage);\r\n      toast({\r\n        title: 'Error',\r\n        description: `Failed to delete printer: ${errorMessage}`,\r\n        variant: 'destructive',\r\n      });\r\n      return false;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const unassignPrinter = async (assignmentId: string, printerName: string) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const success = await printerService.unassignPrinter(assignmentId);\r\n      if (success) {\r\n        toast({\r\n          title: 'Success',\r\n          description: `Successfully unassigned printer ${printerName}.`,\r\n        });\r\n        return true;\r\n      } else {\r\n        throw new Error('Unassignment failed for an unknown reason.');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = getErrorMessage(err);\r\n      setError(errorMessage);\r\n      toast({\r\n        title: 'Error',\r\n        description: `Failed to unassign printer: ${errorMessage}`,\r\n        variant: 'destructive',\r\n      });\r\n      return false;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Placeholder for updating an assignment\r\n  const updatePrinterAssignment = async (assignmentId: string, updates: any) => {\r\n    console.log('Updating assignment', assignmentId, updates);\r\n    // In a real implementation, you would call a service here.\r\n    // For now, this is a placeholder.\r\n    toast({\r\n        title: 'In Progress',\r\n        description: 'Update functionality for printer assignments is not yet implemented.',\r\n    });\r\n    return Promise.resolve(true);\r\n  };\r\n\r\n  return {\r\n    createPrinter,\r\n    updatePrinter,\r\n    deletePrinter,\r\n    unassignPrinter,\r\n    updatePrinterAssignment,\r\n    isLoading,\r\n    error,\r\n  };\r\n}; ","\r\nimport React, { useState } from 'react';\r\nimport { AlertTriangle, X, Loader2 } from 'lucide-react';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { assetService } from '@/services/assetService';\r\n\r\ninterface DeleteAssignmentConfirmDialogProps {\r\n  assignmentId: string;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onDeleted: () => void;\r\n  itemName: string;\r\n}\r\n\r\nconst DeleteAssignmentConfirmDialog: React.FC<DeleteAssignmentConfirmDialogProps> = ({\r\n  assignmentId,\r\n  isOpen,\r\n  onClose,\r\n  onDeleted,\r\n  itemName\r\n}) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  const handleConfirm = async () => {\r\n    if (!assignmentId) return;\r\n    setIsLoading(true);\r\n    try {\r\n      console.log('DeleteAssignmentConfirmDialog: Starting deletion process...');\r\n      console.log('Assignment ID:', assignmentId);\r\n      console.log('Item Name:', itemName);\r\n      \r\n      await assetService.deleteAssignment(assignmentId);\r\n      \r\n      toast({\r\n        title: 'Success',\r\n        description: 'Assignment deleted successfully',\r\n      });\r\n      onDeleted();\r\n    } catch (error: any) {\r\n      console.error('DeleteAssignmentConfirmDialog: Error during deletion:', error);\r\n      console.error('Full error details:', JSON.stringify(error, null, 2));\r\n      \r\n      // Provide more detailed error message\r\n      let errorMessage = 'Failed to delete assignment';\r\n      if (error?.message) {\r\n        errorMessage = error.message;\r\n      } else if (error?.code) {\r\n        errorMessage = `Database error (${error.code}): ${error.message || 'Unknown error'}`;\r\n      }\r\n      \r\n      toast({\r\n        title: 'Error',\r\n        description: errorMessage,\r\n        variant: 'destructive'\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-xl shadow-lg max-w-md w-full mx-4\">\r\n        <div className=\"flex items-center justify-between p-6 border-b\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"bg-red-100 p-2 rounded-full\">\r\n              <AlertTriangle className=\"h-5 w-5 text-red-600\" />\r\n            </div>\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">Remove Printer Assignment</h2>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n          >\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          <p className=\"text-gray-600 mb-4\">Are you sure you want to decommission this printer assignment?</p>\r\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 mb-6\">\r\n            <p className=\"text-red-800 font-medium\">\"{itemName}\"</p>\r\n          </div>\r\n          <p className=\"text-sm text-gray-500 mb-6\">\r\n            This action cannot be undone. The assignment will be marked as decommissioned in the system.\r\n          </p>\r\n\r\n          <div className=\"flex space-x-3\">\r\n            <button\r\n              onClick={onClose}\r\n              className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              onClick={handleConfirm}\r\n              className=\"flex-1 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors flex items-center justify-center disabled:bg-red-400\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? <Loader2 className=\"h-5 w-5 animate-spin\" /> : 'Decommission Assignment'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteAssignmentConfirmDialog;\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Plus } from 'lucide-react';\r\n\r\ninterface SelectWithAddNewProps {\r\n  label: string;\r\n  placeholder: string;\r\n  options: Array<{ id: string; name: string }>;\r\n  value: string;\r\n  onValueChange: (value: string) => void;\r\n  newItemValue: string;\r\n  onNewItemChange: (value: string) => void;\r\n  showNewItemInput: boolean;\r\n  onShowNewItemInput: (show: boolean) => void;\r\n  newItemPlaceholder: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst SelectWithAddNew: React.FC<SelectWithAddNewProps> = ({\r\n  label,\r\n  placeholder,\r\n  options,\r\n  value,\r\n  onValueChange,\r\n  newItemValue,\r\n  onNewItemChange,\r\n  showNewItemInput,\r\n  onShowNewItemInput,\r\n  newItemPlaceholder,\r\n  disabled = false\r\n}) => {\r\n  const handleSelectChange = (selectedValue: string) => {\r\n    if (selectedValue === 'add_new') {\r\n      onShowNewItemInput(true);\r\n      onValueChange('');\r\n    } else {\r\n      onShowNewItemInput(false);\r\n      onValueChange(selectedValue);\r\n      onNewItemChange('');\r\n    }\r\n  };\r\n\r\n  if (showNewItemInput) {\r\n    return (\r\n      <div>\r\n        <Label>{label} *</Label>\r\n        <Input\r\n          value={newItemValue}\r\n          onChange={(e) => onNewItemChange(e.target.value)}\r\n          placeholder={newItemPlaceholder}\r\n          disabled={disabled}\r\n          className=\"mt-1\"\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            onShowNewItemInput(false);\r\n            onNewItemChange('');\r\n          }}\r\n          className=\"text-sm text-gray-500 mt-1 hover:text-gray-700\"\r\n          disabled={disabled}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Label>{label} *</Label>\r\n      <Select value={value} onValueChange={handleSelectChange} disabled={disabled}>\r\n        <SelectTrigger className=\"mt-1\">\r\n          <SelectValue placeholder={placeholder} />\r\n        </SelectTrigger>\r\n        <SelectContent>\r\n          {options.map((option) => (\r\n            <SelectItem key={option.id} value={option.id}>\r\n              {option.name}\r\n            </SelectItem>\r\n          ))}\r\n          <SelectItem value=\"add_new\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Plus className=\"h-4 w-4\" />\r\n              <span>Add New {label}</span>\r\n            </div>\r\n          </SelectItem>\r\n        </SelectContent>\r\n      </Select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectWithAddNew;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { UserPlus, Loader2 } from 'lucide-react';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport SelectWithAddNew from './SelectWithAddNew';\r\n\r\ninterface AssignPrinterModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  printerId: string;\r\n  printerName: string;\r\n  onAssignmentComplete: () => void;\r\n  assignmentId?: string;\r\n}\r\n\r\ninterface Client {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ninterface Department {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ninterface Location {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nconst AssignPrinterModal: React.FC<AssignPrinterModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  printerId,\r\n  printerName,\r\n  onAssignmentComplete,\r\n  assignmentId\r\n}) => {\r\n  const { toast } = useToast();\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataLoading, setDataLoading] = useState(false);\r\n\r\n  // Data arrays\r\n  const [clients, setClients] = useState<Client[]>([]);\r\n  const [departmentLocations, setDepartmentLocations] = useState<{ id: string; name: string }[]>([]);\r\n  const [selectedDepartmentLocationId, setSelectedDepartmentLocationId] = useState('');\r\n  const [newDepartmentLocationName, setNewDepartmentLocationName] = useState('');\r\n  const [showNewDepartmentLocationInput, setShowNewDepartmentLocationInput] = useState(false);\r\n\r\n  // Selected values\r\n  const [selectedClientId, setSelectedClientId] = useState('');\r\n  const [newClientName, setNewClientName] = useState('');\r\n\r\n  // Show new item inputs\r\n  const [showNewClientInput, setShowNewClientInput] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      fetchClients();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (selectedClientId && !showNewClientInput) {\r\n      fetchDepartmentLocations(selectedClientId);\r\n    } else {\r\n      setDepartmentLocations([]);\r\n      setSelectedDepartmentLocationId('');\r\n    }\r\n  }, [selectedClientId, showNewClientInput]);\r\n\r\n  const fetchClients = async () => {\r\n    setDataLoading(true);\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('clients')\r\n        .select('id, name')\r\n        .order('name');\r\n\r\n      if (error) throw error;\r\n      setClients(data || []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch clients:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to load clients',\r\n        variant: 'destructive'\r\n      });\r\n    } finally {\r\n      setDataLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchDepartmentLocations = async (clientId: string) => {\r\n    setDataLoading(true);\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('departments_location')\r\n        .select('id, name, department:departments(name)')\r\n        .eq('client_id', clientId)\r\n        .order('name');\r\n      if (error) throw error;\r\n      const options = (data || []).map(dl => ({\r\n        id: dl.id,\r\n        name: `${dl.department?.name || ''} - ${dl.name}`.replace(/^ - /, '').trim()\r\n      }));\r\n      setDepartmentLocations(options);\r\n    } catch (error) {\r\n      toast({ title: 'Error', description: 'Failed to load department/locations', variant: 'destructive' });\r\n    } finally {\r\n      setDataLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    // Reset all form state\r\n    setSelectedClientId('');\r\n    setNewClientName('');\r\n    setShowNewClientInput(false);\r\n    setClients([]);\r\n    setDepartmentLocations([]);\r\n    setSelectedDepartmentLocationId('');\r\n    setNewDepartmentLocationName('');\r\n    setShowNewDepartmentLocationInput(false);\r\n    onClose();\r\n  };\r\n\r\n  const createClientIfNotExists = async (name: string) => {\r\n    if (!name.trim()) return null;\r\n\r\n    // Check if client exists\r\n    const { data: existingClient } = await supabase\r\n      .from('clients')\r\n      .select('id')\r\n      .ilike('name', name.trim())\r\n      .single();\r\n\r\n    if (existingClient) {\r\n      return existingClient.id;\r\n    }\r\n\r\n    // Create new client\r\n    const { data: newClient, error } = await supabase\r\n      .from('clients')\r\n      .insert({ name: name.trim() })\r\n      .select('id')\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return newClient.id;\r\n  };\r\n\r\n  const createDepartmentIfNotExists = async (clientId: string, name: string) => {\r\n    if (!name.trim()) return null;\r\n\r\n    // Check if department exists for this client\r\n    const { data: existingDept } = await supabase\r\n      .from('departments')\r\n      .select('id')\r\n      .eq('client_id', clientId)\r\n      .ilike('name', name.trim())\r\n      .single();\r\n\r\n    if (existingDept) {\r\n      return existingDept.id;\r\n    }\r\n\r\n    // Create new department\r\n    const { data: newDept, error } = await supabase\r\n      .from('departments')\r\n      .insert({ client_id: clientId, name: name.trim() })\r\n      .select('id')\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return newDept.id;\r\n  };\r\n\r\n  const createLocationIfNotExists = async (departmentId: string, name: string) => {\r\n    if (!name.trim()) return null;\r\n\r\n    // Check if location exists for this department\r\n    const { data: existingLocation } = await supabase\r\n      .from('departments_location')\r\n      .select('id')\r\n      .eq('department_id', departmentId)\r\n      .ilike('name', name.trim())\r\n      .single();\r\n\r\n    if (existingLocation) {\r\n      return existingLocation.id;\r\n    }\r\n\r\n    // Create new location\r\n    const { data: newLocation, error } = await supabase\r\n      .from('departments_location')\r\n      .insert({ \r\n        department_id: departmentId, \r\n        name: name.trim(),\r\n        is_primary: false\r\n      })\r\n      .select('id')\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return newLocation.id;\r\n  };\r\n\r\n  const handleAssign = async () => {\r\n    // Determine what client to use\r\n    const clientName = showNewClientInput ? newClientName : \r\n      clients.find(c => c.id === selectedClientId)?.name;\r\n\r\n    if (!clientName?.trim()) {\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Please select or enter a client name',\r\n        variant: 'destructive'\r\n      });\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Create or get client\r\n      const clientId = showNewClientInput ? \r\n        await createClientIfNotExists(newClientName) : selectedClientId;\r\n      \r\n      if (!clientId) throw new Error('Failed to create/find client');\r\n\r\n      let departmentLocationId = null;\r\n      if (showNewDepartmentLocationInput && newDepartmentLocationName.trim()) {\r\n        toast({ title: 'Error', description: 'Adding new department/location not implemented.', variant: 'destructive' });\r\n        setLoading(false);\r\n        return;\r\n      } else {\r\n        departmentLocationId = selectedDepartmentLocationId;\r\n      }\r\n\r\n      let error;\r\n      if (assignmentId) {\r\n        // Update the existing assignment row\r\n        ({ error } = await supabase\r\n          .from('printer_assignments')\r\n          .update({\r\n            client_id: clientId,\r\n            department_location_id: departmentLocationId,\r\n            status: 'active',\r\n            condition: 'good',\r\n            assignment_effective_date: new Date().toISOString().split('T')[0]\r\n          })\r\n          .eq('id', assignmentId));\r\n      } else {\r\n        // Fallback: create new assignment (legacy flow)\r\n        ({ error } = await supabase\r\n          .from('printer_assignments')\r\n          .insert({\r\n            printer_id: printerId,\r\n            client_id: clientId,\r\n            department_location_id: departmentLocationId,\r\n            status: 'active',\r\n            condition: 'good',\r\n            assignment_effective_date: new Date().toISOString().split('T')[0]\r\n          }));\r\n      }\r\n\r\n      if (error) throw error;\r\n\r\n      toast({\r\n        title: 'Success',\r\n        description: `Printer assigned successfully to ${clientName}`,\r\n      });\r\n\r\n      onAssignmentComplete();\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error('Failed to assign printer:', error);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to assign printer. Please try again.',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const canAssign = (showNewClientInput ? newClientName.trim() : selectedClientId) && selectedDepartmentLocationId;\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={handleClose}>\r\n      <DialogContent className=\"max-w-md\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center space-x-2\">\r\n            <UserPlus className=\"h-5 w-5 text-green-600\" />\r\n            <span>Assign Printer</span>\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"text-sm text-gray-600 mb-4\">\r\n            Assigning: <span className=\"font-medium\">{printerName}</span>\r\n          </div>\r\n\r\n          <div className=\"space-y-3\">\r\n            <SelectWithAddNew\r\n              label=\"Client\"\r\n              placeholder=\"Select a client\"\r\n              options={clients}\r\n              value={selectedClientId}\r\n              onValueChange={setSelectedClientId}\r\n              newItemValue={newClientName}\r\n              onNewItemChange={setNewClientName}\r\n              showNewItemInput={showNewClientInput}\r\n              onShowNewItemInput={setShowNewClientInput}\r\n              newItemPlaceholder=\"Enter new client name\"\r\n              disabled={loading || dataLoading}\r\n            />\r\n\r\n            <SelectWithAddNew\r\n              label=\"Department/Location\"\r\n              placeholder=\"Select a department/location\"\r\n              options={departmentLocations}\r\n              value={selectedDepartmentLocationId}\r\n              onValueChange={setSelectedDepartmentLocationId}\r\n              newItemValue={newDepartmentLocationName}\r\n              onNewItemChange={setNewDepartmentLocationName}\r\n              showNewItemInput={showNewDepartmentLocationInput}\r\n              onShowNewItemInput={setShowNewDepartmentLocationInput}\r\n              newItemPlaceholder=\"Enter new department/location\"\r\n              disabled={loading || dataLoading || (!selectedClientId && !showNewClientInput)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex space-x-3 mt-6\">\r\n            <Button\r\n              onClick={handleClose}\r\n              variant=\"outline\"\r\n              disabled={loading}\r\n              className=\"flex-1\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleAssign}\r\n              disabled={loading || !canAssign}\r\n              className=\"flex-1\"\r\n            >\r\n              {loading ? <Loader2 className=\"h-5 w-5 animate-spin mr-2\" /> : null}\r\n              Assign Printer\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AssignPrinterModal;\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\ninterface EditAssignmentSerialModalProps {\r\n  assignmentId: string;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSerialUpdated: (newSerial: string) => void;\r\n}\r\n\r\nconst EditAssignmentSerialModal: React.FC<EditAssignmentSerialModalProps> = ({ \r\n  assignmentId, \r\n  isOpen, \r\n  onClose, \r\n  onSerialUpdated \r\n}) => {\r\n  const [serialNumber, setSerialNumber] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { toast } = useToast();\r\n\r\n  useEffect(() => {\r\n    if (!assignmentId || !isOpen) return;\r\n    \r\n    const fetchSerial = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        const { data, error } = await supabase\r\n          .from('printer_assignments')\r\n          .select('serial_number')\r\n          .eq('id', assignmentId)\r\n          .single();\r\n        \r\n        if (error) {\r\n          console.error('Error fetching serial number:', error);\r\n          setError('Failed to fetch serial number');\r\n        } else {\r\n          setSerialNumber(data?.serial_number || '');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching serial number:', err);\r\n        setError('Failed to fetch serial number');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchSerial();\r\n  }, [assignmentId, isOpen]);\r\n\r\n  const handleSave = async () => {\r\n    if (!assignmentId) return;\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const { error } = await supabase\r\n        .from('printer_assignments')\r\n        .update({ \r\n          serial_number: serialNumber, \r\n          updated_at: new Date().toISOString() \r\n        })\r\n        .eq('id', assignmentId);\r\n      \r\n      if (error) {\r\n        console.error('Error updating serial number:', error);\r\n        setError('Failed to update serial number');\r\n        toast({ \r\n          title: 'Error', \r\n          description: 'Failed to update serial number', \r\n          variant: 'destructive' \r\n        });\r\n      } else {\r\n        toast({ \r\n          title: 'Success', \r\n          description: 'Serial number updated successfully' \r\n        });\r\n        onSerialUpdated(serialNumber);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error updating serial number:', err);\r\n      setError('Failed to update serial number');\r\n      toast({ \r\n        title: 'Error', \r\n        description: 'Failed to update serial number', \r\n        variant: 'destructive' \r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <DialogTitle>Edit Serial Number</DialogTitle>\r\n        </DialogHeader>\r\n        {error && <div className=\"text-red-500 text-sm mb-2\">{error}</div>}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium mb-1\">Serial Number</label>\r\n          <Input\r\n            value={serialNumber}\r\n            onChange={e => setSerialNumber(e.target.value)}\r\n            disabled={loading}\r\n            placeholder=\"Enter serial number\"\r\n            autoFocus\r\n          />\r\n        </div>\r\n        <DialogFooter>\r\n          <Button variant=\"outline\" onClick={onClose} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave} disabled={loading || !serialNumber.trim()}>\r\n            {loading ? 'Saving...' : 'Save'}\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditAssignmentSerialModal;\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Printer as PrinterType } from '@/types/database';\r\n\r\ninterface AssignmentSelectionModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  printer: PrinterType | null;\r\n  onAssignmentSelected: (assignmentId: string) => void;\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nconst AssignmentSelectionModal: React.FC<AssignmentSelectionModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  printer,\r\n  onAssignmentSelected,\r\n  title,\r\n  description\r\n}) => {\r\n  const [selectedAssignmentId, setSelectedAssignmentId] = useState<string | null>(null);\r\n\r\n  if (!printer || !printer.printer_assignments) return null;\r\n\r\n  const handleContinue = () => {\r\n    if (selectedAssignmentId) {\r\n      onAssignmentSelected(selectedAssignmentId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"w-full max-w-[95vw] sm:max-w-[500px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>{title}</DialogTitle>\r\n          <p className=\"text-sm text-gray-600\">{description}</p>\r\n        </DialogHeader>\r\n        \r\n        <div className=\"space-y-4\">\r\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n            <h3 className=\"font-medium text-gray-900 mb-2\">Printer Model</h3>\r\n            <p className=\"text-sm font-medium\">\r\n              {[printer.manufacturer, printer.series, printer.model || printer.name].filter(Boolean).join(' ')}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            <h4 className=\"font-medium text-gray-900\">Select Assignment:</h4>\r\n            {printer.printer_assignments.map((assignment) => (\r\n              <div\r\n                key={assignment.id}\r\n                className={`border rounded-lg p-3 cursor-pointer transition-colors ${\r\n                  selectedAssignmentId === assignment.id\r\n                    ? 'border-blue-500 bg-blue-50'\r\n                    : 'border-gray-200 hover:border-gray-300'\r\n                }`}\r\n                onClick={() => setSelectedAssignmentId(assignment.id)}\r\n              >\r\n                <div className=\"flex items-start gap-3\">\r\n                  {/* Printer Image */}\r\n                  <div className=\"w-16 h-16 flex-shrink-0 flex items-center justify-center bg-gray-100 rounded-xl border-2 border-gray-200 overflow-hidden\">\r\n                    {assignment.printer?.image_url ? (\r\n                      <img\r\n                        src={assignment.printer.image_url}\r\n                        alt={assignment.printer.name}\r\n                        className=\"object-contain w-full h-full\"\r\n                      />\r\n                    ) : (\r\n                      <svg className=\"h-8 w-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" viewBox=\"0 0 24 24\"><rect x=\"6\" y=\"9\" width=\"12\" height=\"7\" rx=\"2\"/><path d=\"M6 18h12M9 18v1a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-1\"/><path d=\"M6 14v-4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v4\"/></svg>\r\n                    )}\r\n                  </div>\r\n                  {/* Details */}\r\n                  <div className=\"flex-1 min-w-0 flex flex-col justify-center\">\r\n                    <div className=\"text-sm text-gray-600 font-medium\">Serial: {assignment.serial_number || 'Not set'}</div>\r\n                    {assignment.client && (\r\n                      <div className=\"text-sm text-gray-600\">Client: {assignment.client.name}</div>\r\n                    )}\r\n                    {assignment.department_location_id && (\r\n                      <div className=\"text-sm text-gray-600\">Location: {assignment.department_location_id}</div>\r\n                    )}\r\n                    {/* Badges */}\r\n                    <div className=\"flex flex-wrap gap-2 mt-2\">\r\n                      <Badge variant=\"outline\" className=\"text-xs\">\r\n                        {assignment.status}\r\n                      </Badge>\r\n                      {assignment.usage_type && (\r\n                        <Badge variant=\"outline\" className=\"text-xs\">\r\n                          {assignment.usage_type}\r\n                        </Badge>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* Radio Button */}\r\n                  <div className=\"flex items-center pl-2\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      checked={selectedAssignmentId === assignment.id}\r\n                      onChange={() => setSelectedAssignmentId(assignment.id)}\r\n                      className=\"h-4 w-4 text-blue-600\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex gap-2 pt-4\">\r\n          <Button variant=\"outline\" onClick={onClose} className=\"flex-1\">\r\n            Cancel\r\n          </Button>\r\n          <Button \r\n            onClick={handleContinue} \r\n            disabled={!selectedAssignmentId}\r\n            className=\"flex-1\"\r\n          >\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AssignmentSelectionModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Edit, Trash2, UserPlus } from 'lucide-react';\r\nimport { Printer as PrinterType } from '@/types/database';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { productService } from '@/services/productService';\r\nimport { assetService } from '@/services/assetService';\r\nimport { useAuth } from '@/hooks/useAuth'; // Change this import\r\nimport { CompatibleProducts } from './components/CompatibleProducts';\r\nimport EditPrinterFormModal from '@/components/EditPrinterFormModal';\r\nimport { usePrinterActions } from '@/hooks/usePrinterActions';\r\nimport DeleteAssignmentConfirmDialog from './components/modals/DeleteAssignmentConfirmDialog';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport AssignPrinterModal from '@/PrinterDashboard/components/modals/AssignPrinter';\r\nimport EditAssignmentModal from './components/modals/EditAssignment';\r\nimport EditAssignmentSerialModal from './components/modals/EditAssignmentSerialModal';\r\nimport AssignmentSelectionModal from './components/modals/AssignmentSelectionModal';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { Dialog, DialogContent, DialogTitle, DialogDescription, DialogClose } from '@/components/ui/dialog';\r\n\r\ninterface Client {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ninterface AvailablePrinterCardProps {\r\n  printer: PrinterType & { available_count?: number };\r\n  onEditVisibility?: (printer: PrinterType) => void;\r\n  onDelete?: (printer: PrinterType) => void;\r\n  onPrinterUpdated?: () => void;\r\n}\r\n\r\nconst AvailablePrinterCard: React.FC<AvailablePrinterCardProps> = ({\r\n  printer,\r\n  onEditVisibility,\r\n  onDelete,\r\n  onPrinterUpdated\r\n}) => {\r\n  const { user, userProfile } = useAuth(); // Get userProfile from useAuth\r\n  const [visibleToClients, setVisibleToClients] = useState<Client[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteAssignmentDialog, setShowDeleteAssignmentDialog] = useState(false);\r\n  const [showVisibilityModal, setShowVisibilityModal] = useState(false);\r\n  const [showAssignModal, setShowAssignModal] = useState(false);\r\n  const [updatingStatus, setUpdatingStatus] = useState(false);\r\n  const [allClients, setAllClients] = useState<Client[]>([]);\r\n  const [showEditAssignmentModal, setShowEditAssignmentModal] = useState(false);\r\n  const [showEditAssignmentSerialModal, setShowEditAssignmentSerialModal] = useState(false);\r\n  const [assignmentId, setAssignmentId] = useState<string | null>(null);\r\n  const [assignmentIdToDelete, setAssignmentIdToDelete] = useState<string | null>(null);\r\n\r\n  // New state for assignment selection modals\r\n  const [showAssignmentSelectionModal, setShowAssignmentSelectionModal] = useState(false);\r\n  const [selectionMode, setSelectionMode] = useState<'assign' | 'decommission' | 'edit_serial'>('assign');\r\n\r\n  const { updatePrinter, deletePrinter, isLoading } = usePrinterActions();\r\n  const { toast } = useToast();\r\n\r\n  const [firstCompatibleProduct, setFirstCompatibleProduct] = useState<any>(null);\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [showDeleteConfirmDialog, setShowDeleteConfirmDialog] = useState(false);\r\n  const [selectedAssignmentToDelete, setSelectedAssignmentToDelete] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    loadVisibleClients();\r\n    loadAllClients();\r\n    if (!printer.sku || !printer.color) {\r\n      (async () => {\r\n        try {\r\n          const products = await productService.getProductsByPrinter(printer.id);\r\n          if (products && products.length > 0) {\r\n            setFirstCompatibleProduct(products[0]);\r\n          }\r\n        } catch (e) {\r\n          setFirstCompatibleProduct(null);\r\n        }\r\n      })();\r\n    }\r\n  }, [printer.id, printer.sku, printer.color]);\r\n\r\n  // Set up real-time subscription for this specific printer\r\n  useEffect(() => {\r\n    const channel = supabase\r\n      .channel(`printer-available-${printer.id}`)\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: '*',\r\n          schema: 'public',\r\n          table: 'printer_assignments',\r\n          filter: `printer_id=eq.${printer.id}`\r\n        },\r\n        (payload) => {\r\n          // Notify parent component to refresh data\r\n          if (onPrinterUpdated) {\r\n            onPrinterUpdated();\r\n          }\r\n        }\r\n      )\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: '*',\r\n          schema: 'public',\r\n          table: 'printers',\r\n          filter: `id=eq.${printer.id}`\r\n        },\r\n        (payload) => {\r\n          if (onPrinterUpdated) {\r\n            onPrinterUpdated();\r\n          }\r\n        }\r\n      )\r\n      .subscribe((status) => {\r\n        // Subscription status handled silently\r\n      });\r\n\r\n    return () => {\r\n      supabase.removeChannel(channel);\r\n    };\r\n  }, [printer.id, onPrinterUpdated]);\r\n\r\n  const loadVisibleClients = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data, error } = await supabase\r\n        .from('printer_visibility')\r\n        .select(`\r\n          client_id,\r\n          clients:client_id (\r\n            id,\r\n            name\r\n          )\r\n        `)\r\n        .eq('printer_id', printer.id);\r\n\r\n      if (error) throw error;\r\n      \r\n      const clients = data?.map(v => v.clients).filter(Boolean) || [];\r\n      setVisibleToClients(clients as Client[]);\r\n    } catch (error) {\r\n      console.error('Error loading visible clients:', error);\r\n      setVisibleToClients([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadAllClients = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('clients')\r\n        .select('id, name')\r\n        .order('name');\r\n\r\n      if (error) throw error;\r\n      setAllClients(data || []);\r\n    } catch (error) {\r\n      console.error('Error loading clients:', error);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (newStatus: string) => {\r\n    setUpdatingStatus(true);\r\n    try {\r\n      const success = await updatePrinter(printer.id, { \r\n        is_available: newStatus === 'available',\r\n      });\r\n      if (success && onPrinterUpdated) {\r\n        onPrinterUpdated();\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to update printer status:', error);\r\n    } finally {\r\n      setUpdatingStatus(false);\r\n    }\r\n  };\r\n\r\n  const handleEditPrinter = () => {\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handleDeleteRecord = async () => {\r\n    setDeleting(true);\r\n    try {\r\n      await assetService.deleteAssignment(selectedAssignmentToDelete.id);\r\n      toast({\r\n        title: 'Success',\r\n        description: 'Assignment permanently deleted.',\r\n      });\r\n      setShowDeleteConfirmDialog(false);\r\n      if (onPrinterUpdated) {\r\n        onPrinterUpdated();\r\n      }\r\n    } catch (err: any) {\r\n      toast({\r\n        title: 'Error',\r\n        description: `Failed to delete assignment ${selectedAssignmentToDelete.id}: ${err?.message || JSON.stringify(err)}`,\r\n        variant: 'destructive',\r\n      });\r\n      console.error('Delete error details:', err);\r\n    } finally {\r\n      setDeleting(false);\r\n    }\r\n  };\r\n\r\n  const handleDeletePrinter = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // Get the available assignment for this printer\r\n      const { data: assignment, error } = await supabase\r\n        .from('printer_assignments')\r\n        .select('id, serial_number, printer_id')\r\n        .eq('printer_id', printer.id)\r\n        .eq('status', 'available')\r\n        .maybeSingle();\r\n\r\n      if (error) throw error;\r\n      \r\n      if (assignment) {\r\n        setSelectedAssignmentToDelete(assignment);\r\n        setShowDeleteConfirmDialog(true);\r\n      } else {\r\n        toast({\r\n          title: 'Error',\r\n          description: 'No available assignment found for this printer.',\r\n          variant: 'destructive',\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.error('Error loading assignment:', err);\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to load printer assignment.',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePrinterUpdated = async (printerData: Partial<PrinterType>) => {\r\n    const success = await updatePrinter(printer.id, printerData);\r\n    if (success) {\r\n      setShowEditModal(false);\r\n      if (onPrinterUpdated) {\r\n        onPrinterUpdated();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleVisibilityClick = () => {\r\n    if (onEditVisibility) {\r\n      onEditVisibility(printer);\r\n    } else {\r\n      setShowVisibilityModal(true);\r\n    }\r\n  };\r\n\r\n  const handleAssignPrinter = () => {\r\n    // Show assignment selection modal for assign\r\n    setSelectionMode('assign');\r\n    setShowAssignmentSelectionModal(true);\r\n  };\r\n\r\n  const handleAssignmentComplete = () => {\r\n    setShowAssignModal(false);\r\n    toast({\r\n      title: 'Success',\r\n      description: 'Printer assigned successfully',\r\n    });\r\n    if (onPrinterUpdated) {\r\n      onPrinterUpdated();\r\n    }\r\n  };\r\n\r\n  const handleEditAssignment = () => {\r\n    // Show assignment selection modal for edit serial\r\n    setSelectionMode('edit_serial');\r\n    setShowAssignmentSelectionModal(true);\r\n  };\r\n\r\n  const handleDeleteAssignment = () => {\r\n    // Show assignment selection modal for decommission\r\n    setSelectionMode('decommission');\r\n    setShowAssignmentSelectionModal(true);\r\n  };\r\n\r\n  const handleDeleteAssignmentSuccess = () => {\r\n    setShowDeleteAssignmentDialog(false);\r\n    toast({\r\n      title: 'Success',\r\n      description: 'Assignment decommissioned successfully',\r\n    });\r\n    if (onPrinterUpdated) {\r\n      onPrinterUpdated();\r\n    }\r\n  };\r\n\r\n  const handleSerialUpdated = () => {\r\n    setShowEditAssignmentSerialModal(false);\r\n    toast({\r\n      title: 'Success',\r\n      description: 'Serial number updated successfully',\r\n    });\r\n    if (onPrinterUpdated) {\r\n      onPrinterUpdated();\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Handle assignment selection\r\n  const handleAssignmentSelected = (assignmentId: string) => {\r\n    setAssignmentId(assignmentId);\r\n    setShowAssignmentSelectionModal(false);\r\n\r\n    switch (selectionMode) {\r\n      case 'assign':\r\n        setShowAssignModal(true);\r\n        break;\r\n      case 'decommission':\r\n        setSelectedAssignmentToDelete({ id: assignmentId });\r\n        setShowDeleteConfirmDialog(true);\r\n        break;\r\n      case 'edit_serial':\r\n        setShowEditAssignmentSerialModal(true);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const getSelectionModalProps = () => {\r\n    switch (selectionMode) {\r\n      case 'assign':\r\n        return {\r\n          title: 'Select Assignment to Assign',\r\n          description: 'Choose which available unit you want to assign to a client.'\r\n        };\r\n      case 'decommission':\r\n        return {\r\n          title: 'Select Assignment to Decommission',\r\n          description: 'Choose which assignment you want to decommission.'\r\n        };\r\n      case 'edit_serial':\r\n        return {\r\n          title: 'Select Assignment to Edit',\r\n          description: 'Choose which assignment\\'s serial number you want to edit.'\r\n        };\r\n      default:\r\n        return {\r\n          title: 'Select Assignment',\r\n          description: 'Choose an assignment to continue.'\r\n        };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"bg-green-50/80 border border-green-200/80 rounded-lg shadow-sm w-full hover:shadow-md transition-shadow touch-manipulation\">\r\n        <div className=\"p-3 w-full max-w-full flex flex-col\">\r\n          {/* Printer name (top row) */}\r\n          <div className=\"mb-1\">\r\n            <span className=\"font-bold text-base text-gray-900 truncate\">\r\n              {[printer.manufacturer, printer.series, printer.model || printer.name].filter(Boolean).join(' ')}\r\n            </span>\r\n          </div>\r\n          {/* Second row: image (left), right: action buttons (top), product info (below) */}\r\n          <div className=\"flex items-start gap-3 mb-1\">\r\n            {/* Printer image */}\r\n            <div className=\"relative flex-shrink-0\">\r\n              <img\r\n                src={printer.image_url || '/placeholder.svg'}\r\n                alt={printer.name}\r\n                className=\"w-24 h-24 object-cover rounded-md\"\r\n              />\r\n              {printer.available_count && printer.available_count > 1 && (\r\n                <Badge \r\n                  variant=\"secondary\" \r\n                  className=\"absolute -top-1 -right-1 h-5 w-5 rounded-full p-0 flex items-center justify-center text-xs bg-blue-500 text-white\"\r\n                >\r\n                  {printer.available_count}\r\n                </Badge>\r\n              )}\r\n            </div>\r\n            {/* Right side: action buttons (top), product info (below, left-aligned under buttons) */}\r\n            <div className=\"flex-1 min-w-0 flex flex-col justify-start h-16\">\r\n              {/* Action buttons - Only show if user is NOT a client */}\r\n              {userProfile?.role !== 'client' && (\r\n                <div className=\"flex gap-2 mb-1 justify-start\">\r\n                  <Button \r\n                    variant=\"ghost\" \r\n                    size=\"icon\" \r\n                    className=\"h-8 w-8\" \r\n                    onClick={handleAssignPrinter} \r\n                    title=\"Assign\"\r\n                  >\r\n                    <UserPlus className=\"h-4 w-4 text-green-600\" />\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"ghost\" \r\n                    size=\"icon\" \r\n                    className=\"h-8 w-8\" \r\n                    onClick={handleEditAssignment} \r\n                    title=\"Edit\"\r\n                  >\r\n                    <Edit className=\"h-4 w-4 text-green-600\" />\r\n                  </Button>\r\n                  {userProfile?.role === 'superadmin' && (\r\n                    <Button\r\n                      variant=\"ghost\"\r\n                      size=\"sm\"\r\n                      className=\"h-8 w-8\"\r\n                      onClick={handleDeletePrinter}\r\n                      disabled={deleting}\r\n                      title=\"Delete Record\"\r\n                    >\r\n                      <Trash2 className=\"h-4 w-4 text-red-500\" />\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {/* Compatible Products: product name, sku, color dot */}\r\n              <CompatibleProducts \r\n                printerId={printer.id} \r\n                className=\"text-xs flex flex-row flex-wrap gap-2 mt-1\" \r\n              />\r\n            </div>\r\n          </div>\r\n          {/* Section Divider */}\r\n          <hr className=\"my-2 border-t border-green-200/50\" />\r\n          {/* Client Visibility Section - Compact */}\r\n          <div className=\"mb-3 pb-3 border-b border-green-200/50\">\r\n            <h5 className=\"text-xs font-medium text-gray-700 mb-1\">Visible to Clients:</h5>\r\n            {loading ? (\r\n              <p className=\"text-xs text-gray-500 italic\">Loading...</p>\r\n            ) : visibleToClients.length > 0 ? (\r\n              <div className=\"flex flex-wrap gap-1\">\r\n                {visibleToClients.slice(0, 3).map(client => (\r\n                  <Badge key={client.id} variant=\"outline\" className=\"text-xs bg-gray-50\">\r\n                    {client.name}\r\n                  </Badge>\r\n                ))}\r\n                {visibleToClients.length > 3 && (\r\n                  <Badge variant=\"outline\" className=\"text-xs bg-gray-50\">\r\n                    +{visibleToClients.length - 3} more\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-xs text-gray-500 italic\">No visibility set</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Assignment Selection Modal */}\r\n      <AssignmentSelectionModal\r\n        isOpen={showAssignmentSelectionModal}\r\n        onClose={() => setShowAssignmentSelectionModal(false)}\r\n        printer={printer}\r\n        onAssignmentSelected={handleAssignmentSelected}\r\n        {...getSelectionModalProps()}\r\n      />\r\n\r\n      {/* Edit Printer Modal */}\r\n      <EditPrinterFormModal\r\n        isOpen={showEditModal}\r\n        onClose={() => setShowEditModal(false)}\r\n        printer={printer}\r\n        onPrinterUpdated={handlePrinterUpdated}\r\n        isLoading={isLoading}\r\n      />\r\n\r\n      {/* Delete Assignment Confirm Dialog */}\r\n      <DeleteAssignmentConfirmDialog\r\n        assignmentId={assignmentIdToDelete || ''}\r\n        isOpen={showDeleteAssignmentDialog}\r\n        onClose={() => setShowDeleteAssignmentDialog(false)}\r\n        onDeleted={handleDeleteAssignmentSuccess}\r\n        itemName={printer.name}\r\n      />\r\n\r\n      {/* Assign Printer Modal */}\r\n      <AssignPrinterModal\r\n        isOpen={showAssignModal}\r\n        onClose={() => setShowAssignModal(false)}\r\n        printerId={printer.id}\r\n        printerName={[printer.manufacturer, printer.series, printer.model || printer.name].filter(Boolean).join(' ')}\r\n        onAssignmentComplete={handleAssignmentComplete}\r\n        assignmentId={assignmentId}\r\n      />\r\n\r\n      {/* Edit Assignment Modal */}\r\n      <EditAssignmentModal\r\n        isOpen={showEditAssignmentModal}\r\n        onClose={() => setShowEditAssignmentModal(false)}\r\n        printerId={printer.id}\r\n        onAssignmentUpdated={() => {\r\n          setShowEditAssignmentModal(false);\r\n          if (onPrinterUpdated) onPrinterUpdated();\r\n        }}\r\n      />\r\n\r\n      {/* Edit Assignment Serial Number Modal */}\r\n      <EditAssignmentSerialModal\r\n        assignmentId={assignmentId || ''}\r\n        isOpen={showEditAssignmentSerialModal}\r\n        onClose={() => setShowEditAssignmentSerialModal(false)}\r\n        onSerialUpdated={handleSerialUpdated}\r\n      />\r\n\r\n      {/* Delete Record Dialog */}\r\n      <Dialog open={showDeleteConfirmDialog} onOpenChange={setShowDeleteConfirmDialog}>\r\n        <DialogContent>\r\n          <DialogTitle>Delete Record</DialogTitle>\r\n          <DialogDescription>\r\n            Are you sure you want to permanently delete this record? This action cannot be undone.<br />\r\n            <b>Assignment ID:</b> {selectedAssignmentToDelete?.id}\r\n          </DialogDescription>\r\n          <div className=\"flex gap-2 justify-end mt-4\">\r\n            <DialogClose asChild>\r\n              <Button variant=\"outline\" disabled={deleting}>Cancel</Button>\r\n            </DialogClose>\r\n            <Button \r\n              variant=\"destructive\" \r\n              onClick={() => {\r\n                if (selectedAssignmentToDelete?.id) {\r\n                  console.log('Attempting to delete assignment with ID:', selectedAssignmentToDelete.id);\r\n                  handleDeleteRecord();\r\n                }\r\n              }}\r\n              disabled={deleting}\r\n            >\r\n              {deleting ? 'Deleting...' : 'Delete Record'}\r\n            </Button>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AvailablePrinterCard;\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\nconst AddToInventoryModal = ({ isOpen, onClose, printer, onAdded }) => {\r\n  const [serialNumber, setSerialNumber] = useState('');\r\n  const [status, setStatus] = useState('available');\r\n  const [loading, setLoading] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    // For inventory, client_id is null and usage_type is 'service_unit'\r\n    const { error } = await supabase.from('printer_assignments').insert({\r\n      printer_id: printer.id,\r\n      client_id: null, // Not assigned to a client\r\n      serial_number: serialNumber,\r\n      usage_type: 'service_unit',\r\n      status: status,\r\n    });\r\n    setLoading(false);\r\n    if (error) {\r\n      toast({ title: 'Error', description: error.message, variant: 'destructive' });\r\n    } else {\r\n      onAdded();\r\n      toast({ title: 'Success', description: 'Printer added to inventory.' });\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <DialogTitle>Add Printer to Inventory</DialogTitle>\r\n        </DialogHeader>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1\">Serial Number</label>\r\n            <input\r\n              type=\"text\"\r\n              value={serialNumber}\r\n              onChange={e => setSerialNumber(e.target.value)}\r\n              className=\"w-full border rounded px-2 py-1\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium mb-1\">Status</label>\r\n            <select\r\n              value={status}\r\n              onChange={e => setStatus(e.target.value)}\r\n              className=\"w-full border rounded px-2 py-1\"\r\n            >\r\n              <option value=\"available\">Available</option>\r\n              <option value=\"active\">Active</option>\r\n              <option value=\"inactive\">Inactive</option>\r\n              <option value=\"decommissioned\">Decommissioned</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"flex gap-2\">\r\n            <Button type=\"button\" variant=\"outline\" onClick={onClose} disabled={loading}>Cancel</Button>\r\n            <Button type=\"submit\" disabled={loading}>Add to Inventory</Button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddToInventoryModal; ","import React, { useState } from 'react';\r\nimport { AlertTriangle, X, Loader2, Trash2 } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { printerService } from '@/services/printerService';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\ninterface DeletePrinterModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  printer: any;\r\n  onSuccess?: () => void;\r\n}\r\n\r\nconst DeletePrinterModal: React.FC<DeletePrinterModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  printer,\r\n  onSuccess\r\n}) => {\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!printer?.id) return;\r\n\r\n    setIsDeleting(true);\r\n    try {\r\n      await printerService.deletePrinter(\r\n        printer.id,\r\n        'System', // deletedBy - could be enhanced with actual user info\r\n        'Deleted from printer catalog via dashboard'\r\n      );\r\n      \r\n      toast({\r\n        title: 'Success',\r\n        description: 'Printer deleted successfully',\r\n      });\r\n\r\n      onClose();\r\n      onSuccess?.();\r\n    } catch (error) {\r\n      console.error('Delete error:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n      toast({\r\n        title: 'Error',\r\n        description: errorMessage,\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (!isDeleting) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const printerName = `${printer?.manufacturer || ''} ${printer?.series || ''} ${printer?.model || printer?.name || ''}`.trim();\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 animate-fade-in\">\r\n      <div className=\"bg-white rounded-xl shadow-lg max-w-md w-full mx-4 animate-scale-in\">\r\n        <div className=\"flex items-center justify-between p-6 border-b\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"bg-red-100 p-2 rounded-full\">\r\n              <AlertTriangle className=\"h-5 w-5 text-red-600\" />\r\n            </div>\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">Delete Printer</h2>\r\n          </div>\r\n          <button\r\n            onClick={handleClose}\r\n            disabled={isDeleting}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors disabled:opacity-50\"\r\n          >\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          <p className=\"text-gray-600 mb-4\">\r\n            Are you sure you want to permanently delete this printer? This action cannot be undone.\r\n          </p>\r\n          \r\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Trash2 className=\"h-5 w-5 text-red-600 flex-shrink-0\" />\r\n              <div>\r\n                <p className=\"text-red-800 font-medium\">{printerName}</p>\r\n                <p className=\"text-red-600 text-sm\">\r\n                  ID: {printer?.id}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3 mb-6\">\r\n            <p className=\"text-yellow-800 text-sm\">\r\n              <strong>Warning:</strong> This will permanently remove the printer from the catalog. \r\n              All associated data and product compatibility information will be lost.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"flex space-x-3\">\r\n            <Button\r\n              onClick={handleClose}\r\n              variant=\"outline\"\r\n              className=\"flex-1\"\r\n              disabled={isDeleting}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleDeleteConfirm}\r\n              variant=\"destructive\"\r\n              className=\"flex-1\"\r\n              disabled={isDeleting}\r\n            >\r\n              {isDeleting ? (\r\n                <>\r\n                  <Loader2 className=\"h-4 w-4 animate-spin mr-2\" />\r\n                  Deleting...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Trash2 className=\"h-4 w-4 mr-2\" />\r\n                  Delete Printer\r\n                </>\r\n              )}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeletePrinterModal;","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { ScrollArea } from '@/components/ui/scroll-area';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { Search, Package } from 'lucide-react';\r\n\r\ninterface Product {\r\n  id: string;\r\n  name: string;\r\n  sku?: string;\r\n  alias?: string;\r\n  category?: string;\r\n  description?: string;\r\n}\r\n\r\ninterface CompatibleProductUpdateModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  printer: any;\r\n  onUpdated?: () => void;\r\n}\r\n\r\nconst CompatibleProductUpdateModal: React.FC<CompatibleProductUpdateModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  printer,\r\n  onUpdated\r\n}) => {\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [selectedProducts, setSelectedProducts] = useState<Set<string>>(new Set());\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  // Load products and current compatible products\r\n  useEffect(() => {\r\n    if (isOpen && printer?.id) {\r\n      loadProducts();\r\n      loadCurrentCompatibleProducts();\r\n    }\r\n  }, [isOpen, printer?.id]);\r\n\r\n  const loadProducts = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('products')\r\n        .select('id, name, sku, alias, category, description')\r\n        .order('name');\r\n\r\n      if (error) throw error;\r\n      setProducts(data || []);\r\n    } catch (error) {\r\n      console.error('Error loading products:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to load products\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadCurrentCompatibleProducts = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('product_printers')\r\n        .select('product_id')\r\n        .eq('printer_id', printer.id);\r\n\r\n      if (error) throw error;\r\n      \r\n      const currentProductIds = new Set(data?.map(item => item.product_id) || []);\r\n      setSelectedProducts(currentProductIds);\r\n    } catch (error) {\r\n      console.error('Error loading compatible products:', error);\r\n    }\r\n  };\r\n\r\n  const handleProductToggle = (productId: string) => {\r\n    const newSelected = new Set(selectedProducts);\r\n    if (newSelected.has(productId)) {\r\n      newSelected.delete(productId);\r\n    } else {\r\n      newSelected.add(productId);\r\n    }\r\n    setSelectedProducts(newSelected);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setSaving(true);\r\n    try {\r\n      // First, remove all existing compatible products for this printer\r\n      const { error: deleteError } = await supabase\r\n        .from('product_printers')\r\n        .delete()\r\n        .eq('printer_id', printer.id);\r\n\r\n      if (deleteError) throw deleteError;\r\n\r\n      // Then, insert the new selections\r\n      if (selectedProducts.size > 0) {\r\n        const insertData = Array.from(selectedProducts).map(productId => ({\r\n          printer_id: printer.id,\r\n          product_id: productId\r\n        }));\r\n\r\n        const { error: insertError } = await supabase\r\n          .from('product_printers')\r\n          .insert(insertData);\r\n\r\n        if (insertError) throw insertError;\r\n      }\r\n\r\n      toast({\r\n        title: \"Success\",\r\n        description: `Compatible products updated for ${printer.name}`,\r\n      });\r\n\r\n      // Emit custom event for real-time updates\r\n      const refreshEvent = new CustomEvent('refresh-compatible-products', {\r\n        detail: { printerId: printer.id }\r\n      });\r\n      window.dispatchEvent(refreshEvent);\r\n\r\n      // Also emit the general refresh event for other components\r\n      const generalRefreshEvent = new CustomEvent('refresh-printer-data');\r\n      window.dispatchEvent(generalRefreshEvent);\r\n\r\n      if (onUpdated) {\r\n        onUpdated();\r\n      }\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Error updating compatible products:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to update compatible products\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const filteredProducts = products.filter(product =>\r\n    product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    (product.sku && product.sku.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (product.alias && product.alias.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (product.category && product.category.toLowerCase().includes(searchTerm.toLowerCase()))\r\n  );\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"max-w-2xl max-h-[80vh]\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center gap-2\">\r\n            <Package className=\"h-5 w-5\" />\r\n            Update Compatible Products for {printer?.name}\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n\r\n        <div className=\"space-y-4\">\r\n          {/* Search */}\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n            <Input\r\n              placeholder=\"Search products by name, SKU, or alias...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"pl-10\"\r\n            />\r\n          </div>\r\n\r\n          {/* Product List */}\r\n          <div className=\"space-y-2\">\r\n            <Label>Select Compatible Products ({selectedProducts.size} selected)</Label>\r\n            <ScrollArea className=\"h-80 border rounded-md p-4\">\r\n              {loading ? (\r\n                <div className=\"text-center py-8 text-muted-foreground\">Loading products...</div>\r\n              ) : filteredProducts.length === 0 ? (\r\n                <div className=\"text-center py-8 text-muted-foreground\">\r\n                  {searchTerm ? 'No products found matching your search' : 'No products available'}\r\n                </div>\r\n              ) : (\r\n                <div className=\"space-y-3\">\r\n                  {filteredProducts.map((product) => (\r\n                    <div\r\n                      key={product.id}\r\n                      className=\"flex items-center space-x-3 p-2 rounded-md hover:bg-muted/50\"\r\n                    >\r\n                      <Checkbox\r\n                        id={`product-${product.id}`}\r\n                        checked={selectedProducts.has(product.id)}\r\n                        onCheckedChange={() => handleProductToggle(product.id)}\r\n                      />\r\n                      <div className=\"flex-1\">\r\n                        <label\r\n                          htmlFor={`product-${product.id}`}\r\n                          className=\"text-sm font-medium cursor-pointer block\"\r\n                        >\r\n                          {product.name}\r\n                        </label>\r\n                        <div className=\"text-xs text-muted-foreground space-y-1\">\r\n                          {product.sku && (\r\n                            <div>SKU: {product.sku}</div>\r\n                          )}\r\n                          {product.alias && (\r\n                            <div>Alias: {product.alias}</div>\r\n                          )}\r\n                          {(product.category || product.description) && (\r\n                            <div>\r\n                              {[product.category, product.description].filter(Boolean).join(' • ')}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </ScrollArea>\r\n          </div>\r\n        </div>\r\n\r\n        <DialogFooter>\r\n          <Button variant=\"outline\" onClick={onClose} disabled={saving}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave} disabled={loading || saving}>\r\n            {saving ? 'Saving...' : 'Save Changes'}\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CompatibleProductUpdateModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Trash2, Edit, Eye, PlusCircle, Package } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { productService } from '@/services/productService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CompatibleProducts } from './components/CompatibleProducts';\r\nimport ViewPrinterModal from './ViewPrinterModal';\r\nimport EditPrinterFormModal from '@/components/EditPrinterFormModal';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport AddToInventoryModal from './AddToInventoryModal';\r\nimport DeletePrinterModal from './DeletePrinterModal';\r\nimport CompatibleProductUpdateModal from './CompatibleProductUpdateModal';\r\n\r\n\r\nconst colorClasses: { [key: string]: string } = {\r\n  black: 'bg-black',\r\n  cyan: 'bg-cyan-500',\r\n  magenta: 'bg-pink-500',\r\n  yellow: 'bg-yellow-400',\r\n};\r\n\r\nconst ColorDot = ({ color }: { color: string }) => {\r\n  const colorClass = colorClasses[color?.toLowerCase()] || 'bg-gray-400';\r\n  return <div className={`w-3 h-3 rounded-full ${colorClass}`} />;\r\n};\r\n\r\nconst PrinterCatalogCard = ({ printer, onEdit, onDelete, debug = false }) => {\r\n  const [showViewModal, setShowViewModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showAddToInventory, setShowAddToInventory] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showCompatibleProductUpdate, setShowCompatibleProductUpdate] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Show delete modal when delete button is clicked\r\n  const handleDelete = () => {\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  // Handle successful deletion\r\n  const handleDeleteSuccess = () => {\r\n    // Trigger data refresh if onDelete callback is provided\r\n    if (onDelete) {\r\n      onDelete(printer);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"bg-orange-50/50 border border-orange-200/80 rounded-lg p-3 my-2 shadow-sm w-full hover:bg-orange-100/60 transition\"\r\n    >\r\n      {debug && (\r\n        <div className=\"mb-3 p-3 bg-yellow-100 border border-yellow-300 rounded text-xs text-yellow-900 max-h-96 overflow-y-auto\">\r\n          <div className=\"space-y-2\">\r\n            <div><b>Printer ID:</b> {printer.id}</div>\r\n            <div><b>Printer Name:</b> {printer.name}</div>\r\n            <div><b>Manufacturer:</b> {printer.manufacturer}</div>\r\n            <div><b>Model:</b> {printer.model}</div>\r\n            <div><b>Series:</b> {printer.series}</div>\r\n            <div><b>Image URL:</b> {printer.image_url || 'No image URL'}</div>\r\n            <div className=\"border-t pt-2 mt-2\">\r\n              <b>Raw Printer Object Keys:</b>\r\n              <div className=\"ml-2 text-xs\">\r\n                {Object.keys(printer).join(', ')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"flex items-start space-x-4\">\r\n        <img\r\n          src={printer.image_url || '/placeholder.svg'}\r\n          alt={printer.name || 'Printer'}\r\n          className=\"w-24 h-24 object-cover rounded-md flex-shrink-0\"\r\n          onError={(e) => {\r\n            e.currentTarget.src = '/placeholder.svg';\r\n          }}\r\n        />\r\n        <div className=\"flex-1 pr-8\">\r\n          <div className=\"flex justify-between items-start\">\r\n            <div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <h4 className=\"font-bold text-gray-800\">\r\n                  {[printer.manufacturer, printer.series, printer.model || printer.name].filter(Boolean).join(' ')}\r\n                </h4>\r\n              </div>\r\n              <div className=\"flex gap-1 mt-1\">\r\n                <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={() => setShowEditModal(true)} title=\"Edit Printer Details\">\r\n                  <Edit className=\"h-4 w-4 text-blue-600\" />\r\n                </Button>\r\n                <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={handleDelete} title=\"Delete Printer\">\r\n                  <Trash2 className=\"h-4 w-4 text-red-500\" />\r\n                </Button>\r\n                <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={() => setShowViewModal(true)} title=\"View Printer\">\r\n                  <Eye className=\"h-4 w-4 text-gray-700\" />\r\n                </Button>\r\n                <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={() => setShowAddToInventory(true)} title=\"Add to Inventory\">\r\n                  <PlusCircle className=\"h-4 w-4 text-green-600\" />\r\n                </Button>\r\n                <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={() => setShowCompatibleProductUpdate(true)} title=\"Update Compatible Products\">\r\n                  <Package className=\"h-4 w-4 text-purple-600\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-3 pt-3 border-t border-orange-200/50\">\r\n        <CompatibleProducts \r\n          printerId={printer.id} \r\n          className=\"mt-1\" \r\n        />\r\n      </div>\r\n      <ViewPrinterModal\r\n        isOpen={showViewModal}\r\n        onClose={() => setShowViewModal(false)}\r\n        printer={printer}\r\n      />\r\n      <EditPrinterFormModal\r\n        isOpen={showEditModal}\r\n        onClose={() => setShowEditModal(false)}\r\n        printer={printer}\r\n        onPrinterUpdated={() => setShowEditModal(false)}\r\n        isLoading={false}\r\n      />\r\n      <AddToInventoryModal\r\n        isOpen={showAddToInventory}\r\n        onClose={() => setShowAddToInventory(false)}\r\n        printer={printer}\r\n        onAdded={() => {\r\n          setShowAddToInventory(false);\r\n        }}\r\n      />\r\n      <DeletePrinterModal\r\n        isOpen={showDeleteModal}\r\n        onClose={() => setShowDeleteModal(false)}\r\n        printer={printer}\r\n        onSuccess={handleDeleteSuccess}\r\n      />\r\n      <CompatibleProductUpdateModal\r\n        isOpen={showCompatibleProductUpdate}\r\n        onClose={() => setShowCompatibleProductUpdate(false)}\r\n        printer={printer}\r\n        onUpdated={() => {\r\n          setShowCompatibleProductUpdate(false);\r\n          // Optionally trigger a refresh of the compatible products component\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrinterCatalogCard;\r\n","import React from 'react';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Plus, Users, Package, Printer, Building, UserCheck } from 'lucide-react';\r\nimport { ADMIN_DASHBOARD_TABS } from '@/constants/adminDashboard';\r\n\r\ntype TabType = typeof ADMIN_DASHBOARD_TABS[keyof typeof ADMIN_DASHBOARD_TABS];\r\n\r\ninterface AdminEmptyStateProps {\r\n  activeTab: TabType;\r\n  searchQuery?: string;\r\n  onAddNew?: () => void;\r\n  printerFilter?: 'assigned' | 'catalog' | 'available' | 'inventory';\r\n}\r\n\r\nconst AdminEmptyState: React.FC<AdminEmptyStateProps> = ({\r\n  activeTab,\r\n  searchQuery,\r\n  onAddNew,\r\n  printerFilter\r\n}) => {\r\n  const getEmptyStateConfig = () => {\r\n    if (activeTab === ADMIN_DASHBOARD_TABS.PRINTERS && printerFilter === 'assigned') {\r\n      return {\r\n        icon: Printer,\r\n        title: searchQuery ? 'No printers found' : 'No printers yet',\r\n        description: searchQuery \r\n          ? `No printers match \"${searchQuery}\". Try adjusting your search.`\r\n          : 'Assign printers to your clients for deployment and management.',\r\n        buttonText: 'Assign Printer',\r\n        color: 'text-purple-600'\r\n      };\r\n    }\r\n    switch (activeTab) {\r\n      case ADMIN_DASHBOARD_TABS.CLIENT:\r\n        return {\r\n          icon: Users,\r\n          title: searchQuery ? 'No clients found' : 'No clients yet',\r\n          description: searchQuery \r\n            ? `No clients match \"${searchQuery}\". Try adjusting your search.`\r\n            : 'Start by adding your first client to manage their departments and printers.',\r\n          buttonText: 'Add Client',\r\n          color: 'text-blue-600'\r\n        };\r\n\r\n      case ADMIN_DASHBOARD_TABS.SUPPLIERS:\r\n        return {\r\n          icon: Building,\r\n          title: searchQuery ? 'No suppliers found' : 'No suppliers yet',\r\n          description: searchQuery \r\n            ? `No suppliers match \"${searchQuery}\". Try adjusting your search.`\r\n            : 'Add suppliers to manage product sourcing and pricing.',\r\n          buttonText: 'Add Supplier',\r\n          color: 'text-green-600'\r\n        };\r\n\r\n      case ADMIN_DASHBOARD_TABS.PRINTERS:\r\n        return {\r\n          icon: Printer,\r\n          title: searchQuery ? 'No printers found' : 'No printers yet',\r\n          description: searchQuery \r\n            ? `No printers match \"${searchQuery}\". Try adjusting your search.`\r\n            : 'Add printers to your inventory for assignment and rental management.',\r\n          buttonText: 'Add Printer',\r\n          color: 'text-purple-600'\r\n        };\r\n\r\n      case ADMIN_DASHBOARD_TABS.PRODUCT:\r\n        return {\r\n          icon: Package,\r\n          title: searchQuery ? 'No products found' : 'No products yet',\r\n          description: searchQuery \r\n            ? `No products match \"${searchQuery}\". Try adjusting your search.`\r\n            : 'Start adding products to manage inventory and pricing.',\r\n          buttonText: 'Add Product',\r\n          color: 'text-orange-600'\r\n        };\r\n\r\n      default:\r\n        return {\r\n          icon: Package,\r\n          title: 'No data found',\r\n          description: 'No items to display.',\r\n          buttonText: 'Add Item',\r\n          color: 'text-gray-600'\r\n        };\r\n    }\r\n  };\r\n\r\n  const config = getEmptyStateConfig();\r\n  const Icon = config.icon;\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent className=\"p-8 text-center\">\r\n        <Icon className={`h-16 w-16 mx-auto mb-4 ${config.color} opacity-50`} />\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{config.title}</h3>\r\n        <p className=\"text-gray-600 mb-6 max-w-md mx-auto\">{config.description}</p>\r\n        \r\n        {!searchQuery && onAddNew && (\r\n          <Button onClick={onAddNew} className=\"inline-flex items-center\">\r\n            <Plus className=\"mr-2 h-4 w-4\" />\r\n            {config.buttonText}\r\n          </Button>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AdminEmptyState; ","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Select, SelectTrigger, SelectContent, SelectItem, SelectValue } from '@/components/ui/select';\r\nimport { supabase } from '@/integrations/supabase/client';\r\n\r\nconst HISTORY_TYPES = [\r\n  { key: 'all', label: 'All Events' },\r\n  { key: 'maintenance', label: 'Maintenance History' },\r\n  { key: 'assignment', label: 'Assignment History' },\r\n  { key: 'general', label: 'General Printer History' },\r\n  { key: 'last_maintenance', label: 'Last Maintenance Date' },\r\n];\r\n\r\nexport default function PrinterHistoryModal({ open, onClose, printerId }) {\r\n  const [selectedType, setSelectedType] = useState('all');\r\n  const [loading, setLoading] = useState(false);\r\n  const [timeline, setTimeline] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    setLoading(true);\r\n    // Fetch all assignment IDs for this printer\r\n    supabase.from('printer_assignments').select('id,last_service_date').eq('printer_id', printerId).then(async ({ data: assignments }) => {\r\n      const assignmentIds = (assignments || []).map(a => a.id);\r\n      const lastServiceDates = (assignments || []).map(a => a.last_service_date).filter(Boolean);\r\n      // Fetch all types in parallel\r\n      const [maint, assign, general] = await Promise.all([\r\n        supabase.from('maintenance_history').select('*').eq('printer_id', printerId),\r\n        assignmentIds.length > 0\r\n          ? supabase.from('printer_assignment_history').select(`\r\n              *,\r\n              previous_client:clients!printer_assignment_history_previous_client_id_fkey(name),\r\n              new_client:clients!printer_assignment_history_new_client_id_fkey(name),\r\n              previous_department_location:departments_location!printer_assignment_history_previous_department_location_id_fkey(\r\n                name,\r\n                department:departments(name)\r\n              ),\r\n              new_department_location:departments_location!printer_assignment_history_new_department_location_id_fkey(\r\n                name,\r\n                department:departments(name)\r\n              )\r\n            `).in('printer_assignment_id', assignmentIds)\r\n          : Promise.resolve({ data: [] }),\r\n        supabase.from('printer_history').select('*').eq('printer_id', printerId),\r\n      ]);\r\n      // Normalize and merge\r\n      const events = [\r\n        ...(maint.data || []).map(e => ({ ...e, type: 'maintenance', date: e.performed_at })),\r\n        ...(assign.data || []).map(e => ({ ...e, type: 'assignment', date: e.performed_at })),\r\n        ...(general.data || []).map(e => ({ ...e, type: 'general', date: e.timestamp })),\r\n        ...lastServiceDates.map(date => ({ type: 'last_maintenance', date, label: 'Last Service Performed' })),\r\n      ];\r\n      // Sort by date descending\r\n      events.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n      setTimeline(events);\r\n      setLoading(false);\r\n    });\r\n  }, [open, printerId]);\r\n\r\n  // Filtered view\r\n  const filtered = selectedType === 'all'\r\n    ? timeline\r\n    : timeline.filter(e => e.type === selectedType);\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onClose}>\r\n      <DialogContent className=\"max-w-md w-full rounded-t-lg sm:rounded-lg p-0\">\r\n        <DialogHeader>\r\n          <DialogTitle>Printer History</DialogTitle>\r\n        </DialogHeader>\r\n        <div className=\"p-4\">\r\n          <Select value={selectedType} onValueChange={setSelectedType}>\r\n            <SelectTrigger>\r\n              <SelectValue placeholder=\"Select history type\" />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              {HISTORY_TYPES.map(type => (\r\n                <SelectItem key={type.key} value={type.key}>{type.label}</SelectItem>\r\n              ))}\r\n            </SelectContent>\r\n          </Select>\r\n          <div className=\"mt-4 max-h-[60vh] overflow-y-auto\">\r\n            {loading ? (\r\n              <div className=\"text-center text-gray-500 py-8\">Loading...</div>\r\n            ) : (\r\n              <ul className=\"space-y-3\">\r\n                {filtered.map((rec, idx) => (\r\n                  <li key={rec.id || rec.date || idx} className=\"bg-gray-50 rounded p-3 text-xs\">\r\n                    {/* Render fields based on type */}\r\n                    {rec.type === 'maintenance' && (\r\n                      <>\r\n                        <div><b>Type:</b> {rec.maintenance_type}</div>\r\n                        <div><b>Action:</b> {rec.action_description}</div>\r\n                        <div><b>Notes:</b> {rec.notes}</div>\r\n                        <div><b>Date:</b> {rec.performed_at}</div>\r\n                      </>\r\n                    )}\r\n                    {rec.type === 'assignment' && (\r\n                      <>\r\n                        <div><b>Action:</b> {rec.action_type}</div>\r\n                        {rec.action_type === 'transferred' && (\r\n                          <div>\r\n                            <b>From:</b> {rec.previous_client?.name || 'N/A'}\r\n                            {rec.previous_department_location && (\r\n                              <span> ({rec.previous_department_location.department?.name || ''} - {rec.previous_department_location.name || ''})</span>\r\n                            )}\r\n                            <br />\r\n                            <b>To:</b> {rec.new_client?.name || 'N/A'}\r\n                            {rec.new_department_location && (\r\n                              <span> ({rec.new_department_location.department?.name || ''} - {rec.new_department_location.name || ''})</span>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                        {rec.action_type === 'assigned' && rec.new_client && (\r\n                          <div>\r\n                            <b>Assigned to:</b> {rec.new_client.name}\r\n                            {rec.new_department_location && (\r\n                              <span> ({rec.new_department_location.department?.name || ''} - {rec.new_department_location.name || ''})</span>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                        {rec.action_type === 'unassigned' && rec.previous_client && (\r\n                          <div>\r\n                            <b>Unassigned from:</b> {rec.previous_client.name}\r\n                            {rec.previous_department_location && (\r\n                              <span> ({rec.previous_department_location.department?.name || ''} - {rec.previous_department_location.name || ''})</span>\r\n                            )}\r\n                          </div>\r\n                        )}\r\n                        {rec.reason && (\r\n                          <div><b>Reason:</b> {rec.reason}</div>\r\n                        )}\r\n                        <div><b>Date:</b> {rec.performed_at}</div>\r\n                      </>\r\n                    )}\r\n                    {rec.type === 'general' && (\r\n                      <>\r\n                        <div><b>Action:</b> {rec.action_type}</div>\r\n                        <div><b>Description:</b> {rec.description}</div>\r\n                        <div><b>Date:</b> {rec.timestamp}</div>\r\n                      </>\r\n                    )}\r\n                    {rec.type === 'last_maintenance' && (\r\n                      <>\r\n                        <div><b>{rec.label}</b></div>\r\n                        <div><b>Date:</b> {rec.date}</div>\r\n                      </>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n                {!loading && filtered.length === 0 && (\r\n                  <div className=\"text-center text-gray-400 py-8\">No history found.</div>\r\n                )}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n} ","\r\nimport React from 'react';\r\nimport { X, Printer, Tag, Info, Hash, Palette, Calendar, CheckCircle, FileText, User, DollarSign, ClipboardList, Layers, MapPin, Package } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';\r\nimport { Printer as PrinterType, PrinterAssignment } from '@/types/database';\r\nimport { useIsMobile } from '@/hooks/use-mobile';\r\n\r\ninterface PrinterDetailsModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  printer: PrinterType | null;\r\n  assignment?: PrinterAssignment | null;\r\n  inventoryRecords?: PrinterAssignment[];\r\n}\r\n\r\nconst DetailItem = ({ icon: Icon, label, value, isBadge = false, badgeVariant = 'outline' }: { \r\n  icon: React.ElementType, \r\n  label: string, \r\n  value: any, \r\n  isBadge?: boolean, \r\n  badgeVariant?: \"outline\" | \"default\" | \"secondary\" | \"destructive\" \r\n}) => (\r\n  <div className=\"flex items-start space-x-4 py-2\">\r\n    <Icon className=\"h-5 w-5 text-gray-400 mt-1 flex-shrink-0\" />\r\n    <div>\r\n      <p className=\"text-sm text-gray-500\">{label}</p>\r\n      {isBadge ? (\r\n        <Badge variant={badgeVariant} className=\"capitalize\">{value}</Badge>\r\n      ) : (\r\n        <p className=\"text-base text-gray-800 font-medium\">{value || <span className=\"text-gray-400 italic\">Not provided</span>}</p>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst PrinterDetailsModal: React.FC<PrinterDetailsModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  printer,\r\n  assignment,\r\n  inventoryRecords = [],\r\n}) => {\r\n  const isMobile = useIsMobile();\r\n  \r\n  if (!isOpen || !printer) return null;\r\n\r\n  const getStatusBadge = (status?: string): \"outline\" | \"default\" | \"secondary\" | \"destructive\" => {\r\n    if (status === 'active') return 'default';\r\n    if (status === 'inactive') return 'secondary';\r\n    if (status === 'returned') return 'destructive';\r\n    return 'outline';\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-xl shadow-xl max-w-4xl w-full max-h-[90vh] flex flex-col\">\r\n        <div className=\"flex items-center justify-between p-6 border-b\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"bg-blue-600 p-2 rounded-lg\">\r\n              <Printer className=\"h-5 w-5 text-white\" />\r\n            </div>\r\n            <div>\r\n              <h2 className=\"text-xl font-semibold text-gray-900\">{printer.name}</h2>\r\n              <p className=\"text-sm text-gray-600\">{printer.manufacturer} {printer.model}</p>\r\n            </div>\r\n          </div>\r\n          <button onClick={onClose} className=\"text-gray-400 hover:text-gray-600\">\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"flex-1 overflow-y-auto\">\r\n          <Tabs defaultValue=\"general\" className=\"h-full flex flex-col\">\r\n            <TabsList className=\"flex justify-center mt-2\">\r\n              <TabsTrigger value=\"general\">General Information</TabsTrigger>\r\n              <TabsTrigger value=\"specifications\">Specifications</TabsTrigger>\r\n              <TabsTrigger value=\"inventory\">Inventory</TabsTrigger>\r\n              {assignment && <TabsTrigger value=\"assignment\">Assignment</TabsTrigger>}\r\n            </TabsList>\r\n            \r\n            <div className=\"flex-1 overflow-y-auto p-6\">\r\n              <TabsContent value=\"general\">\r\n                <DetailItem icon={Tag} label=\"Model\" value={printer.model} />\r\n                <DetailItem icon={Info} label=\"Series\" value={printer.series} />\r\n                <DetailItem icon={Palette} label=\"Color\" value={printer.color} />\r\n                <DetailItem icon={Layers} label=\"Type\" value={printer.printer_type} />\r\n                <DetailItem icon={FileText} label=\"Description\" value={printer.description} />\r\n                <DetailItem icon={CheckCircle} label=\"Available for Assignment\" value={printer.is_available ? 'Yes' : 'No'} isBadge badgeVariant={printer.is_available ? 'default' : 'secondary'} />\r\n                <DetailItem icon={ClipboardList} label=\"Functions\" value={printer.functions} />\r\n                <DetailItem icon={DollarSign} label=\"Purchase Price\" value={printer.purchase_price ? `$${printer.purchase_price}` : null} />\r\n                <DetailItem icon={DollarSign} label=\"Monthly Rental Price\" value={printer.rental_price_per_month ? `$${printer.rental_price_per_month}` : null} />\r\n                <DetailItem icon={Calendar} label=\"Created At\" value={printer.created_at ? new Date(printer.created_at).toLocaleDateString() : undefined} />\r\n              </TabsContent>\r\n              \r\n              <TabsContent value=\"specifications\">\r\n                <div className=\"space-y-4\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Performance Specifications</h3>\r\n                  <DetailItem icon={Info} label=\"Print Resolution\" value={printer.print_resolution} />\r\n                  <DetailItem icon={Info} label=\"Print Speed (B&W)\" value={printer.print_speed_bw} />\r\n                  <DetailItem icon={Info} label=\"Print Speed (Color)\" value={printer.print_speed_color} />\r\n                  <DetailItem icon={Info} label=\"First Page Out Time\" value={printer.first_page_out_time} />\r\n                  \r\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4 mt-6\">Paper Handling</h3>\r\n                  <DetailItem icon={Info} label=\"Input Tray Capacity\" value={printer.input_tray_capacity} />\r\n                  <DetailItem icon={Info} label=\"Output Tray Capacity\" value={printer.output_tray_capacity} />\r\n                  <DetailItem icon={Info} label=\"Supported Paper Sizes\" value={printer.supported_paper_sizes} />\r\n                  <DetailItem icon={Info} label=\"Supported Paper Types\" value={printer.supported_paper_types} />\r\n                  <DetailItem icon={CheckCircle} label=\"Automatic Duplex\" value={printer.automatic_duplex ? 'Yes' : 'No'} isBadge badgeVariant={printer.automatic_duplex ? 'default' : 'secondary'} />\r\n                  \r\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4 mt-6\">Connectivity</h3>\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <DetailItem icon={CheckCircle} label=\"USB\" value={printer.connectivity_usb ? 'Yes' : 'No'} isBadge badgeVariant={printer.connectivity_usb ? 'default' : 'secondary'} />\r\n                    <DetailItem icon={CheckCircle} label=\"Wi-Fi\" value={printer.connectivity_wifi ? 'Yes' : 'No'} isBadge badgeVariant={printer.connectivity_wifi ? 'default' : 'secondary'} />\r\n                    <DetailItem icon={CheckCircle} label=\"Wi-Fi Direct\" value={printer.connectivity_wifi_direct ? 'Yes' : 'No'} isBadge badgeVariant={printer.connectivity_wifi_direct ? 'default' : 'secondary'} />\r\n                    <DetailItem icon={CheckCircle} label=\"Ethernet\" value={printer.connectivity_ethernet ? 'Yes' : 'No'} isBadge badgeVariant={printer.connectivity_ethernet ? 'default' : 'secondary'} />\r\n                    <DetailItem icon={CheckCircle} label=\"Bluetooth\" value={printer.connectivity_bluetooth ? 'Yes' : 'No'} isBadge badgeVariant={printer.connectivity_bluetooth ? 'default' : 'secondary'} />\r\n                    <DetailItem icon={CheckCircle} label=\"NFC\" value={printer.connectivity_nfc ? 'Yes' : 'No'} isBadge badgeVariant={printer.connectivity_nfc ? 'default' : 'secondary'} />\r\n                  </div>\r\n                  <DetailItem icon={Info} label=\"Cloud Printing Support\" value={printer.cloud_printing_support} />\r\n                  \r\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4 mt-6\">Software & Support</h3>\r\n                  <DetailItem icon={Info} label=\"Supported OS\" value={printer.supported_os} />\r\n                  <DetailItem icon={FileText} label=\"Driver Download\" value={printer.driver_download_url} />\r\n                  <DetailItem icon={FileText} label=\"Software Download\" value={printer.software_download_url} />\r\n                  <DetailItem icon={FileText} label=\"User Manual\" value={printer.user_manual_url} />\r\n                </div>\r\n              </TabsContent>\r\n              \r\n              <TabsContent value=\"inventory\">\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900\">Inventory Records</h3>\r\n                    <Badge variant=\"outline\">{inventoryRecords.length} units</Badge>\r\n                  </div>\r\n                  \r\n                  {inventoryRecords.length > 0 ? (\r\n                    <div className=\"space-y-3\">\r\n                      {inventoryRecords.map((record) => (\r\n                        <div key={record.id} className=\"border rounded-lg p-4\">\r\n                          <div className=\"flex items-center justify-between mb-2\">\r\n                            <div className=\"flex items-center space-x-2\">\r\n                              <Package className=\"h-4 w-4 text-gray-400\" />\r\n                              <span className=\"font-medium\">S/N: {record.serial_number || 'Not provided'}</span>\r\n                            </div>\r\n                            <div className=\"flex space-x-2\">\r\n                              <Badge variant={getStatusBadge(record.status)}>{record.status}</Badge>\r\n                              <Badge variant=\"outline\">{record.usage_type}</Badge>\r\n                            </div>\r\n                          </div>\r\n                          {record.deployment_date && (\r\n                            <p className=\"text-sm text-gray-600\">\r\n                              Deployed: {new Date(record.deployment_date).toLocaleDateString()}\r\n                            </p>\r\n                          )}\r\n                          {record.notes && (\r\n                            <p className=\"text-sm text-gray-600 mt-1\">{record.notes}</p>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-center py-8\">\r\n                      <Package className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                      <p className=\"text-gray-600\">No inventory records found for this printer model.</p>\r\n                      <p className=\"text-sm text-gray-500 mt-1\">Add units to inventory to track physical printers.</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </TabsContent>\r\n              \r\n              {assignment && (\r\n                <TabsContent value=\"assignment\">\r\n                  <DetailItem icon={User} label=\"Client ID\" value={assignment.client_id} />\r\n                  <DetailItem icon={MapPin} label=\"Department\" value={assignment.department} />\r\n                  <DetailItem icon={Calendar} label=\"Deployment Date\" value={assignment.deployment_date ? new Date(assignment.deployment_date).toLocaleDateString() : undefined} />\r\n                  <DetailItem icon={ClipboardList} label=\"Usage Type\" value={assignment.usage_type} />\r\n                  <DetailItem icon={DollarSign} label=\"Monthly Price\" value={assignment.monthly_price ? `$${assignment.monthly_price}` : null} />\r\n                  <DetailItem icon={CheckCircle} label=\"Assignment Status\" value={assignment.status} isBadge badgeVariant={getStatusBadge(assignment.status)} />\r\n                  <DetailItem icon={ClipboardList} label=\"Security Deposit\" value={assignment.has_security_deposit ? 'Yes' : 'No'} />\r\n                  <DetailItem icon={DollarSign} label=\"Security Deposit Amount\" value={assignment.security_deposit_amount ? `$${assignment.security_deposit_amount}` : null} />\r\n                  <DetailItem icon={FileText} label=\"Notes\" value={assignment.notes} />\r\n                  <DetailItem icon={Calendar} label=\"Created At\" value={assignment.created_at ? new Date(assignment.created_at).toLocaleDateString() : undefined} />\r\n                </TabsContent>\r\n              )}\r\n            </div>\r\n          </Tabs>\r\n        </div>\r\n        \r\n        <div className=\"flex space-x-3 p-6 bg-gray-50 border-t\">\r\n          <Button variant=\"outline\" onClick={onClose} className=\"flex-1\">Close</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrinterDetailsModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport MaintenanceStatusDisplay from './MaintenanceStatusDisplay';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { History, Edit, Trash2, CheckCircle, UserPlus } from 'lucide-react';\r\nimport PrinterHistoryModal from './PrinterHistoryModal';\r\nimport PrinterDetailsModal from '@/components/PrinterDetailsModal';\r\nimport { assetService } from '@/services/assetService';\r\nimport { CompatibleProducts } from './CompatibleProducts';\r\nimport { Dialog, DialogContent, DialogTitle, DialogDescription, DialogClose } from '@/components/ui/dialog';\r\nimport AssignmentSelectionModal from './modals/AssignmentSelectionModal';\r\nimport EditPrinterFormModal from '@/components/EditPrinterFormModal';\r\nimport DeleteAssignmentConfirmDialog from './modals/DeleteAssignmentConfirmDialog';\r\nimport { supabase } from '@/integrations/supabase/client';\r\n\r\nfunction getStatusLabel(status: string) {\r\n  switch (status) {\r\n    case 'active':\r\n      return 'Assigned to Client';\r\n    case 'inactive':\r\n      return 'Assigned to Client (not in use)';\r\n    case 'decommissioned':\r\n      return 'Decommissioned';\r\n    case 'available':\r\n      return 'Not Assigned (available)';\r\n    default:\r\n      return status;\r\n  }\r\n}\r\n\r\nconst AllPrintersCard = ({ assignment, onEdit, onDelete, onDataRefresh, debug = false }) => {\r\n  const { printer } = assignment;\r\n  const { toast } = useToast();\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [showHistoryModal, setShowHistoryModal] = useState(false);\r\n  const [showPrinterDetails, setShowPrinterDetails] = useState(false);\r\n  const [showDeleteRecordDialog, setShowDeleteRecordDialog] = useState(false);\r\n  const [updatingStatus, setUpdatingStatus] = useState(false);\r\n  const [showAssignmentSelectionModal, setShowAssignmentSelectionModal] = useState(false);\r\n  const [selectionMode, setSelectionMode] = useState<'assign' | 'decommission' | 'edit_serial'>('assign');\r\n  const [showEditAssignmentModal, setShowEditAssignmentModal] = useState(false);\r\n  const [showDeleteAssignmentDialog, setShowDeleteAssignmentDialog] = useState(false);\r\n  const [enrichedPrinter, setEnrichedPrinter] = useState(printer);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const fetchAssignments = async () => {\r\n      if (!printer?.printer_assignments) {\r\n        const { data, error } = await supabase\r\n          .from('printers')\r\n          .select('*, printer_assignments(*)')\r\n          .eq('id', printer.id)\r\n          .single();\r\n        if (data && isMounted) {\r\n          setEnrichedPrinter(data);\r\n        }\r\n      } else {\r\n        setEnrichedPrinter(printer);\r\n      }\r\n    };\r\n    fetchAssignments();\r\n    return () => { isMounted = false; };\r\n  }, [printer]);\r\n\r\n  const handleDeleteRecord = async () => {\r\n    setDeleting(true);\r\n    try {\r\n      await assetService.deleteAssignment(assignment.id);\r\n      toast({\r\n        title: 'Success',\r\n        description: 'Assignment permanently deleted.',\r\n      });\r\n      setShowDeleteRecordDialog(false);\r\n      // Trigger data refresh to update the UI\r\n      if (onDataRefresh) {\r\n        onDataRefresh();\r\n      }\r\n    } catch (err: any) {\r\n      toast({\r\n        title: 'Error',\r\n        description: `Failed to delete assignment ${assignment.id}: ${err?.message || JSON.stringify(err)}`,\r\n        variant: 'destructive',\r\n      });\r\n      console.error('Delete error details:', err);\r\n    } finally {\r\n      setDeleting(false);\r\n    }\r\n  };\r\n\r\n  const handleMakeAvailable = async () => {\r\n    setUpdatingStatus(true);\r\n    try {\r\n      await assetService.makePrinterAvailable(assignment.id);\r\n      toast({\r\n        title: 'Success',\r\n        description: 'Printer is now available for assignment.',\r\n      });\r\n      // Trigger data refresh to update the UI\r\n      if (onDataRefresh) {\r\n        onDataRefresh();\r\n      }\r\n    } catch (err: any) {\r\n      toast({\r\n        title: 'Error',\r\n        description: `Failed to make printer available: ${err?.message || JSON.stringify(err)}`,\r\n        variant: 'destructive',\r\n      });\r\n      console.error('Make available error details:', err);\r\n    } finally {\r\n      setUpdatingStatus(false);\r\n    }\r\n  };\r\n\r\n  const handleAssignPrinter = () => {\r\n    setSelectionMode('assign');\r\n    setShowAssignmentSelectionModal(true);\r\n  };\r\n  const handleEditAssignment = () => {\r\n    setSelectionMode('edit_serial');\r\n    setShowAssignmentSelectionModal(true);\r\n  };\r\n  const handleDeleteAssignment = () => {\r\n    setSelectionMode('decommission');\r\n    setShowAssignmentSelectionModal(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-orange-50/80 border border-orange-200/80 rounded-lg shadow-sm w-full hover:shadow-md transition-shadow touch-manipulation\">\r\n      {/* Mobile Debug Info - Collapsible */}\r\n      {debug && (\r\n        <details className=\"m-2\">\r\n          <summary className=\"text-xs font-medium text-yellow-800 cursor-pointer p-2 bg-yellow-100 rounded\">\r\n            Debug Info (tap to expand)\r\n          </summary>\r\n          <pre className=\"mt-1 text-xs text-yellow-900 bg-yellow-50 border border-yellow-200 rounded p-2 max-h-32 overflow-y-auto\">\r\n            {JSON.stringify(assignment, null, 2)}\r\n          </pre>\r\n        </details>\r\n      )}\r\n\r\n      {/* Modern Card Layout */}\r\n      <div className=\"p-3 w-full max-w-full flex flex-col\">\r\n        {/* Printer name (top row) */}\r\n        <div className=\"mb-1\">\r\n          <span className=\"font-bold text-base text-gray-900 truncate\">\r\n            {[printer?.manufacturer, printer?.series, printer?.model || printer?.name].filter(Boolean).join(' ')}\r\n          </span>\r\n        </div>\r\n        {/* Second row: image (left), right: all info/details stacked */}\r\n        <div className=\"flex items-start gap-3 mb-1\">\r\n          {/* Printer image */}\r\n          <div className=\"relative flex-shrink-0\">\r\n            <img\r\n              src={printer?.image_url || '/placeholder.svg'}\r\n              alt={printer?.name || 'Printer'}\r\n              className=\"w-24 h-24 object-cover rounded-md\"\r\n              onError={e => { e.currentTarget.src = '/placeholder.svg'; }}\r\n            />\r\n          </div>\r\n          {/* Right side: all info/details stacked, fully contained */}\r\n          <div className=\"flex-1 min-w-0 flex flex-col justify-start h-auto space-y-1\">\r\n            {/* Action buttons row */}\r\n            <div className=\"flex gap-2 mb-1 justify-start\">\r\n              <Button\r\n                size=\"icon\"\r\n                variant=\"ghost\"\r\n                className=\"h-8 w-8\"\r\n                title=\"Assign\"\r\n                onClick={handleAssignPrinter}\r\n              >\r\n                <UserPlus className=\"h-4 w-4 text-green-600\" />\r\n              </Button>\r\n              <Button\r\n                size=\"icon\"\r\n                variant=\"ghost\"\r\n                className=\"h-8 w-8\"\r\n                title=\"Edit Assignment\"\r\n                onClick={handleEditAssignment}\r\n              >\r\n                <Edit className=\"h-4 w-4 text-green-600\" />\r\n              </Button>\r\n              <Button\r\n                size=\"icon\"\r\n                variant=\"ghost\"\r\n                className=\"h-8 w-8\"\r\n                title=\"Delete Assignment\"\r\n                onClick={handleDeleteAssignment}\r\n              >\r\n                <Trash2 className=\"h-4 w-4 text-red-500\" />\r\n              </Button>\r\n              {/* Existing buttons: Edit, History, Make Available, Delete Record */}\r\n              <Button \r\n                size=\"icon\" \r\n                variant=\"ghost\" \r\n                className=\"h-8 w-8\" \r\n                title=\"Edit\" \r\n                onClick={() => setShowPrinterDetails(true)}\r\n              >\r\n                <Edit className=\"h-4 w-4 text-green-600\" />\r\n              </Button>\r\n              <Button \r\n                size=\"icon\" \r\n                variant=\"ghost\" \r\n                className=\"h-8 w-8\" \r\n                title=\"History\" \r\n                onClick={() => setShowHistoryModal(true)}\r\n              >\r\n                <History className=\"h-4 w-4 text-blue-500\" />\r\n              </Button>\r\n              {assignment.status !== 'available' && (\r\n                <Button \r\n                  size=\"icon\" \r\n                  variant=\"ghost\" \r\n                  className=\"h-8 w-8\" \r\n                  title=\"Make Available\" \r\n                  onClick={handleMakeAvailable}\r\n                  disabled={updatingStatus}\r\n                >\r\n                  {updatingStatus ? (\r\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\r\n                  ) : (\r\n                    <CheckCircle className=\"h-4 w-4 text-blue-600\" />\r\n                  )}\r\n                </Button>\r\n              )}\r\n              <Button\r\n                size=\"icon\"\r\n                variant=\"ghost\"\r\n                className=\"h-8 w-8\"\r\n                title=\"Delete Record\"\r\n                onClick={() => setShowDeleteRecordDialog(true)}\r\n              >\r\n                <Trash2 className=\"h-4 w-4 text-red-500\" />\r\n              </Button>\r\n            </div>\r\n            {/* All info/details stacked, fully contained */}\r\n            <div className=\"text-xs text-gray-600\">\r\n              <div><span className=\"font-medium\">Serial:</span> {assignment.serial_number || 'N/A'}</div>\r\n              <div><span className=\"font-medium\">Client:</span> {assignment.clients?.name || 'N/A'}</div>\r\n              <div><span className=\"font-medium\">Location:</span> {assignment.departments_location?.name || 'N/A'}</div>\r\n              <div><span className=\"font-medium\">Created:</span> {assignment.created_at ? new Date(assignment.created_at).toLocaleDateString() : 'N/A'}</div>\r\n            </div>\r\n            {/* Status Badge and badges row */}\r\n            <div className=\"flex flex-wrap gap-2 mb-1\">\r\n              <Badge\r\n                variant=\"secondary\"\r\n                className={`text-xs ${\r\n                  assignment.status === 'active'\r\n                    ? 'bg-orange-100 text-orange-700'\r\n                    : assignment.status === 'available'\r\n                    ? 'bg-green-100 text-green-700'\r\n                    : assignment.status === 'decommissioned'\r\n                    ? 'bg-gray-200 text-gray-700'\r\n                    : 'bg-blue-100 text-blue-700'\r\n                }`}\r\n              >\r\n                {getStatusLabel(assignment.status)}\r\n              </Badge>\r\n              {assignment.usage_type && (\r\n                <Badge variant=\"outline\" className=\"text-xs\">\r\n                  {assignment.usage_type}\r\n                </Badge>\r\n              )}\r\n              {printer?.color && (\r\n                <Badge variant=\"outline\" className=\"text-xs\">\r\n                  {printer.color}\r\n                </Badge>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Section Divider */}\r\n        <hr className=\"my-2 border-t border-orange-200/50\" />\r\n        {/* Move Compatible Products here, remove Maintenance Status label */}\r\n        <CompatibleProducts \r\n          printerId={printer?.id} \r\n          className=\"text-xs flex flex-row flex-wrap gap-2 mt-1\" \r\n        />\r\n        {/* Assignment Details - Compact */}\r\n        {/* (already included above) */}\r\n        {/* Action Buttons (unchanged) */}\r\n        {/* The full-width Make Available and Delete Record buttons are removed from here */}\r\n      </div>\r\n\r\n      {/* Delete Record Modal */}\r\n      <Dialog open={showDeleteRecordDialog} onOpenChange={setShowDeleteRecordDialog}>\r\n        <DialogContent>\r\n          <DialogTitle>Delete Record</DialogTitle>\r\n          <DialogDescription>\r\n            Are you sure you want to permanently delete this record? This action cannot be undone.<br />\r\n            <b>Assignment ID:</b> {assignment.id}\r\n          </DialogDescription>\r\n          <div className=\"flex gap-2 justify-end mt-4\">\r\n            <DialogClose asChild>\r\n              <Button variant=\"outline\" disabled={deleting}>Cancel</Button>\r\n            </DialogClose>\r\n            <Button variant=\"destructive\" onClick={() => { console.log('Attempting to delete assignment with ID:', assignment.id); handleDeleteRecord(); }} disabled={deleting}>\r\n              {deleting ? 'Deleting...' : 'Delete Record'}\r\n            </Button>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <PrinterHistoryModal \r\n        open={showHistoryModal} \r\n        onClose={() => setShowHistoryModal(false)} \r\n        printerId={printer?.id} \r\n      />\r\n      <PrinterDetailsModal\r\n        isOpen={showPrinterDetails}\r\n        onClose={() => setShowPrinterDetails(false)}\r\n        printer={printer}\r\n        assignment={assignment}\r\n      />\r\n      <AssignmentSelectionModal\r\n        isOpen={showAssignmentSelectionModal}\r\n        onClose={() => setShowAssignmentSelectionModal(false)}\r\n        printer={enrichedPrinter}\r\n        onAssignmentSelected={() => setShowAssignmentSelectionModal(false)}\r\n        title={selectionMode === 'assign' ? 'Assign Printer' : selectionMode === 'edit_serial' ? 'Edit Assignment Serial' : 'Decommission Assignment'}\r\n        description={selectionMode === 'assign' ? 'Select an assignment to assign this printer.' : selectionMode === 'edit_serial' ? 'Select an assignment to edit its serial number.' : 'Select an assignment to decommission.'}\r\n      />\r\n      <EditPrinterFormModal\r\n        isOpen={showEditAssignmentModal}\r\n        onClose={() => setShowEditAssignmentModal(false)}\r\n        printer={printer}\r\n        onPrinterUpdated={() => setShowEditAssignmentModal(false)}\r\n      />\r\n      <DeleteAssignmentConfirmDialog\r\n        isOpen={showDeleteAssignmentDialog}\r\n        onClose={() => setShowDeleteAssignmentDialog(false)}\r\n        assignmentId={assignment.id}\r\n        itemName={printer?.name || 'Printer'}\r\n        onDeleted={() => setShowDeleteAssignmentDialog(false)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllPrintersCard;\r\n","\r\nimport React, { useState } from 'react';\r\nimport AssignedPrinterCard from '@/PrinterDashboard/PrinterDashboardCard';\r\nimport AvailablePrinterCard from '@/PrinterDashboard/PrinterDashboardAvailable';\r\nimport PrinterDashboardCard from './PrinterDashboardCard';\r\nimport PrinterCatalogCard from './PrinterCatalogCard';\r\nimport AdminEmptyState from '@/PrinterDashboard/AdminEmptyState';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Plus } from 'lucide-react';\r\nimport { ADMIN_DASHBOARD_TABS } from '@/constants/adminDashboard';\r\nimport AllPrintersCard from './components/AllPrintersCard';\r\nimport { CustomLoading } from \"@/components/ui/CustomLoading\";\r\n\r\ntype TabType = typeof ADMIN_DASHBOARD_TABS[keyof typeof ADMIN_DASHBOARD_TABS];\r\n\r\ninterface PrinterDashboardTabProps {\r\n  activeTab: TabType;\r\n  isLoading: boolean;\r\n  filteredData: any[];\r\n  searchQuery: string;\r\n  onItemClick: (item: any) => void;\r\n  onAddNew?: () => void;\r\n  onEdit?: (item: any) => void;\r\n  onDelete?: (item: any) => void;\r\n  onDataRefresh?: () => void;\r\n  printerFilter?: 'assigned' | 'catalog' | 'available' | 'inventory';\r\n  debug?: boolean;\r\n}\r\n\r\nconst PrinterDashboardTab: React.FC<PrinterDashboardTabProps> = ({\r\n  activeTab,\r\n  isLoading,\r\n  filteredData,\r\n  searchQuery,\r\n  onItemClick,\r\n  onAddNew,\r\n  onEdit,\r\n  onDelete,\r\n  onDataRefresh,\r\n  printerFilter,\r\n  debug = false\r\n}) => {\r\n  if (isLoading) {\r\n    return (\r\n      <CustomLoading />\r\n    );\r\n  }\r\n  \r\n  if (filteredData.length === 0) {\r\n    return <AdminEmptyState activeTab={activeTab} searchQuery={searchQuery} onAddNew={onAddNew} printerFilter={printerFilter} />;\r\n  }\r\n  \r\n  return (\r\n    <div className={`space-y-3 w-full px-1 max-w-full${['assigned','available','inventory','catalog'].includes(printerFilter ?? '') ? ' pb-[60px]' : ''}`}>\r\n      {/* Mobile-First Grid - Single column layout */}\r\n      <div className=\"grid grid-cols-1 gap-3 w-full max-w-full\">\r\n        {filteredData.map((item, idx) => {\r\n          if (printerFilter === 'assigned') {\r\n            return (\r\n              <AssignedPrinterCard\r\n                key={item.id || idx}\r\n                printer={item}\r\n                onEdit={onEdit}\r\n                onDelete={onDelete}\r\n                onTransfer={() => {}}\r\n                debug={debug}\r\n              />\r\n            );\r\n          }\r\n          if (printerFilter === 'available') {\r\n            return (\r\n              <AvailablePrinterCard\r\n                key={item.id || idx}\r\n                printer={item}\r\n                onEditVisibility={() => {}}\r\n                onDelete={onDelete}\r\n              />\r\n            );\r\n          }\r\n          if (printerFilter === 'catalog') {\r\n            return (\r\n              <PrinterCatalogCard\r\n                key={item.id || idx}\r\n                printer={item}\r\n                onEdit={onEdit}\r\n                onDelete={onDelete}\r\n                debug={debug}\r\n              />\r\n            );\r\n          }\r\n          if (printerFilter === 'inventory') {\r\n            // For 'inventory', show all assignments (not just one per printer)\r\n            // Assume item is an assignment object with printer info\r\n            return (\r\n              <AllPrintersCard\r\n                key={item.id || idx}\r\n                assignment={item}\r\n                onEdit={onEdit}\r\n                onDelete={onDelete}\r\n                onDataRefresh={onDataRefresh}\r\n                debug={debug}\r\n              />\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrinterDashboardTab;\r\n","\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Printer } from '@/types/database';\r\nimport PrinterDashboardTab from './PrinterDashboardTab';\r\nimport AddPrinterModal from '@/components/AddPrinterModal';\r\nimport EditPrinterFormModal from '@/components/EditPrinterFormModal';\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n} from '@/components/ui/alert-dialog';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { printerService } from '@/services/printerService';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\ninterface PrinterTabContentProps {\r\n  isLoading: boolean;\r\n  filteredData: Printer[];\r\n  searchQuery: string;\r\n  onDataRefresh: () => void;\r\n  printerFilter?: 'assigned' | 'catalog' | 'available' | 'inventory';\r\n  debug?: boolean;\r\n  onEditAssignment?: (printer: Printer) => void;\r\n  onShowAssignModal?: () => void; // NEW PROP\r\n  onShowAddToInventoryModal?: () => void; // NEW\r\n}\r\n\r\nconst PrinterTabContent = React.memo<PrinterTabContentProps>(({\r\n  isLoading,\r\n  filteredData,\r\n  searchQuery,\r\n  onDataRefresh,\r\n  printerFilter,\r\n  debug = false,\r\n  onEditAssignment,\r\n  onShowAssignModal,\r\n  onShowAddToInventoryModal // NEW\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const [showAddPrinter, setShowAddPrinter] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [selectedPrinter, setSelectedPrinter] = useState<Printer | null>(null);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  const handleItemClick = (printer: Printer) => {\r\n    navigate(`/admin-dashboard/printers/${printer.id}`);\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    if (printerFilter === 'assigned' && onShowAssignModal) {\r\n      onShowAssignModal();\r\n    } else if ((printerFilter === 'available' || printerFilter === 'inventory') && onShowAddToInventoryModal) {\r\n      onShowAddToInventoryModal();\r\n    } else {\r\n    setShowAddPrinter(true);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (printer: Printer) => {\r\n    setSelectedPrinter(printer);\r\n    if (printerFilter === 'assigned' && onEditAssignment) {\r\n      onEditAssignment(printer);\r\n    } else {\r\n      setShowEditModal(true);\r\n    }\r\n  };\r\n\r\n  const handleDelete = (printer: Printer) => {\r\n    setSelectedPrinter(printer);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const handlePrinterUpdated = () => {\r\n    setShowEditModal(false);\r\n    setSelectedPrinter(null);\r\n    onDataRefresh();\r\n  };\r\n\r\n  const handleAssignmentUpdated = async (assignmentId, update) => {\r\n    await supabase\r\n      .from('printer_assignments')\r\n      .update(update)\r\n      .eq('id', assignmentId);\r\n    setSelectedPrinter(null);\r\n    onDataRefresh();\r\n  };\r\n\r\n  const handleDeleteConfirmed = async () => {\r\n    if (!selectedPrinter || isDeleting) return;\r\n    \r\n    // Set deleting flag to prevent multiple calls\r\n    setIsDeleting(true);\r\n    \r\n    // Capture the printer data before resetting state\r\n    const printerToDelete = selectedPrinter;\r\n    \r\n    // Immediately close the dialog and reset state\r\n    setShowDeleteModal(false);\r\n    setSelectedPrinter(null);\r\n    \r\n    try {\r\n      // Conditional delete logic based on printer filter\r\n      if (printerFilter === 'catalog') {\r\n        await printerService.softDeletePrinter(printerToDelete.id);\r\n        toast({\r\n          title: 'Success',\r\n          description: 'Printer removed from catalog (soft deleted)',\r\n        });\r\n      } else {\r\n        await printerService.deletePrinter(printerToDelete.id);\r\n        toast({\r\n          title: 'Success',\r\n          description: 'Printer deleted successfully',\r\n        });\r\n      }\r\n      onDataRefresh();\r\n    } catch (err: any) {\r\n      toast({\r\n        title: 'Error',\r\n        description: `Failed to ${printerFilter === 'catalog' ? 'remove printer' : 'delete printer'}: ${err?.message || err?.toString()}`,\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      // Reset deleting flag\r\n      setIsDeleting(false);\r\n    }\r\n  };\r\n\r\n  // Generate appropriate dialog props based on printer filter\r\n  const getDeleteDialogProps = () => {\r\n    if (printerFilter === 'catalog') {\r\n      return {\r\n        title: \"Remove from Catalog\",\r\n        message: \"Are you sure you want to remove this printer from the catalog? The printer data and history will be preserved.\",\r\n        confirmText: \"Remove from Catalog\"\r\n      };\r\n    } else {\r\n      return {\r\n        title: \"Delete Printer\",\r\n        message: \"Are you sure you want to permanently delete this printer? This action cannot be undone.\",\r\n        confirmText: \"Delete\"\r\n      };\r\n    }\r\n  };\r\n\r\n  const dialogProps = getDeleteDialogProps();\r\n\r\n  return (\r\n    <>\r\n      <PrinterDashboardTab\r\n        activeTab=\"printers\"\r\n        isLoading={isLoading}\r\n        filteredData={filteredData}\r\n        searchQuery={searchQuery}\r\n        onItemClick={handleItemClick}\r\n        onAddNew={handleAddNew}\r\n        onEdit={handleEdit}\r\n        onDelete={handleDelete}\r\n        onDataRefresh={onDataRefresh}\r\n        printerFilter={printerFilter}\r\n        debug={debug}\r\n      />\r\n      {/* Add Printer Modal */}\r\n      <AddPrinterModal\r\n        isOpen={showAddPrinter}\r\n        onClose={() => setShowAddPrinter(false)}\r\n        onPrinterAdded={onDataRefresh}\r\n      />\r\n      {/* Edit Printer Modal for other tabs */}\r\n      {selectedPrinter && showEditModal && printerFilter !== 'assigned' && (\r\n        <EditPrinterFormModal\r\n          isOpen={showEditModal}\r\n          onClose={() => {\r\n            setShowEditModal(false);\r\n            setSelectedPrinter(null);\r\n          }}\r\n          printer={selectedPrinter}\r\n          onPrinterUpdated={handlePrinterUpdated}\r\n          isLoading={false}\r\n        />\r\n      )}\r\n      {/* Delete Confirmation Modal with conditional props */}\r\n      {selectedPrinter && showDeleteModal && !isDeleting && (\r\n        <AlertDialog \r\n          open={showDeleteModal && !!selectedPrinter && !isDeleting} \r\n          onOpenChange={(open) => {\r\n            if (!open) {\r\n              setShowDeleteModal(false);\r\n              setSelectedPrinter(null);\r\n            }\r\n          }}\r\n        >\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader>\r\n              <AlertDialogTitle>{dialogProps.title}</AlertDialogTitle>\r\n              <AlertDialogDescription>\r\n                {dialogProps.message}\r\n              </AlertDialogDescription>\r\n            </AlertDialogHeader>\r\n            <AlertDialogFooter>\r\n              <AlertDialogCancel>Cancel</AlertDialogCancel>\r\n              <AlertDialogAction onClick={handleDeleteConfirmed} className=\"bg-red-600 hover:bg-red-700\">\r\n                {dialogProps.confirmText}\r\n              </AlertDialogAction>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialog>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nPrinterTabContent.displayName = 'PrinterTabContent';\r\n\r\nexport default PrinterTabContent;\r\n","import React, { useState } from 'react';\r\nimport { CompatibleProducts } from './CompatibleProducts';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Search, Printer, ArrowLeft, ArrowRight, X, Package, Settings, Check } from 'lucide-react';\r\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { CustomLoading } from \"@/components/ui/CustomLoading\";\r\nimport { dataService } from '@/services/dataService';\r\nimport ClientListModal from '@/ClientDashboard/ClientListModal';\r\nimport { Dialog, DialogContent, DialogTitle, DialogDescription, DialogFooter } from '@/components/ui/dialog';\r\n\r\ninterface AddToInventoryModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onAdded: () => void;\r\n}\r\n\r\ninterface PrinterCatalog {\r\n  id: string;\r\n  name: string;\r\n  manufacturer?: string;\r\n  model?: string;\r\n  series?: string;\r\n  image_url?: string;\r\n}\r\n\r\nexport const AddToInventoryModal: React.FC<AddToInventoryModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onAdded\r\n}) => {\r\n  const [step, setStep] = useState<1 | 2>(1);\r\n  const [selectedPrinter, setSelectedPrinter] = useState<PrinterCatalog | null>(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [serialNumber, setSerialNumber] = useState('');\r\n  const [ownerType, setOwnerType] = useState<'client' | 'service_unit'>('service_unit');\r\n  const [makeAvailable, setMakeAvailable] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const { toast } = useToast();\r\n  const queryClient = useQueryClient();\r\n  const [isClientOwned, setIsClientOwned] = useState(false);\r\n  const [showClientModal, setShowClientModal] = useState(false);\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n  const [showSerialPrompt, setShowSerialPrompt] = useState(false);\r\n\r\n  // Fetch all active printers from catalog\r\n  const { data: printers = [], isLoading } = useQuery({\r\n    queryKey: ['catalog-printers'],\r\n    queryFn: async () => {\r\n      const { data, error } = await supabase\r\n        .from('printers')\r\n        .select('id, name, manufacturer, model, series, image_url')\r\n        .eq('status', 'active')\r\n        .order('name');\r\n\r\n      if (error) throw error;\r\n      return data as PrinterCatalog[];\r\n    },\r\n    enabled: isOpen && step === 1\r\n  });\r\n\r\n  const filteredPrinters = printers.filter(printer =>\r\n    printer.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    (printer.model && printer.model.toLowerCase().includes(searchQuery.toLowerCase())) ||\r\n    (printer.manufacturer && printer.manufacturer.toLowerCase().includes(searchQuery.toLowerCase()))\r\n  );\r\n\r\n  const handlePrinterSelect = (printer: PrinterCatalog) => {\r\n    setSelectedPrinter(printer);\r\n    setStep(2);\r\n  };\r\n\r\n  const handleClientOwnedToggle = (checked: boolean) => {\r\n    setIsClientOwned(checked);\r\n    if (checked) {\r\n      setShowClientModal(true);\r\n    } else {\r\n      setSelectedClient(null);\r\n    }\r\n  };\r\n\r\n  const handleClientSelected = (client) => {\r\n    setSelectedClient(client);\r\n    setShowClientModal(false);\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { error } = await supabase\r\n        .from('printer_assignments')\r\n        .insert({\r\n          printer_id: selectedPrinter.id,\r\n          client_id: isClientOwned && selectedClient ? selectedClient.id : null,\r\n          serial_number: serialNumber.trim() || null,\r\n          usage_type: isClientOwned ? 'client_owned' : 'service_unit',\r\n          status: isClientOwned ? 'undeployed' : 'available',\r\n          is_client_owned: isClientOwned,\r\n        });\r\n      if (error) throw error;\r\n      toast({\r\n        title: 'Success',\r\n        description: 'Printer added to inventory successfully.',\r\n      });\r\n      dataService.clearCache();\r\n      await queryClient.invalidateQueries({ queryKey: ['all-assignments'] });\r\n      await queryClient.invalidateQueries({ queryKey: ['available-assignments'] });\r\n      await queryClient.invalidateQueries({ queryKey: ['optimized-printer-data'] });\r\n      await queryClient.invalidateQueries({ queryKey: ['catalog-printers'] });\r\n      window.dispatchEvent(new CustomEvent('refresh-printer-data'));\r\n      onAdded();\r\n      handleClose();\r\n    } catch (error: any) {\r\n      toast({\r\n        title: 'Error',\r\n        description: error.message || 'Failed to add printer to inventory.',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedPrinter) return;\r\n    handleConfirm();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setStep(1);\r\n    setSelectedPrinter(null);\r\n    setSearchQuery('');\r\n    setSerialNumber('');\r\n    setOwnerType('service_unit');\r\n    setMakeAvailable(false);\r\n    onClose();\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setStep(1);\r\n    setSelectedPrinter(null);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/60 backdrop-blur-sm flex items-end sm:items-center justify-center z-50\">\r\n      {/* Mobile-first modal container */}\r\n      <div className=\"relative flex flex-col h-screen w-screen sm:h-auto sm:w-full sm:max-w-lg sm:rounded-2xl sm:shadow-2xl bg-white animate-in fade-in-0 slide-in-from-bottom-8\">\r\n        \r\n        {/* Mobile Header - Sticky */}\r\n        <div className=\"sticky top-0 z-10 bg-white border-b border-gray-200 sm:rounded-t-2xl\">\r\n          <div className=\"flex items-center justify-between p-4 sm:p-6\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"bg-green-100 p-2.5 rounded-xl\">\r\n                <Printer className=\"h-5 w-5 text-green-600\" />\r\n              </div>\r\n              <div>\r\n                <h2 className=\"text-lg sm:text-xl font-semibold text-gray-900\">\r\n                  {step === 1 ? 'Select Printer' : 'Add to Inventory'}\r\n                </h2>\r\n                <p className=\"text-xs sm:text-sm text-gray-500\">\r\n                  {step === 1 ? 'Choose a printer from catalog' : 'Configure inventory details'}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={handleClose}\r\n              className=\"p-2 -m-2 text-gray-400 hover:text-gray-600 transition-colors rounded-lg hover:bg-gray-100\"\r\n            >\r\n              <X className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Scrollable Content */}\r\n        <div className=\"flex-1 overflow-y-auto\">\r\n          <div className=\"p-4 sm:p-6 space-y-6\">\r\n            \r\n            {step === 1 && (\r\n              <>\r\n                {/* Search Section */}\r\n                <div className=\"bg-gradient-to-br from-green-50 to-emerald-50 p-4 rounded-xl border border-green-100\">\r\n                  <h3 className=\"font-semibold text-gray-900 mb-4 flex items-center\">\r\n                    <Search className=\"h-4 w-4 mr-2 text-green-600\" />\r\n                    Search Printers\r\n                  </h3>\r\n                  <div className=\"relative\">\r\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Search printers...\"\r\n                      value={searchQuery}\r\n                      onChange={(e) => setSearchQuery(e.target.value)}\r\n                      className=\"pl-10 h-12 text-base\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Printer List Section */}\r\n                <div className=\"space-y-4\">\r\n                  <h3 className=\"font-semibold text-gray-900 flex items-center\">\r\n                    <Package className=\"h-4 w-4 mr-2 text-gray-600\" />\r\n                    Available Printers\r\n                  </h3>\r\n                  \r\n                  {isLoading ? (\r\n                    <CustomLoading />\r\n                  ) : filteredPrinters.length === 0 ? (\r\n                    <div className=\"text-center py-12 bg-gray-50 rounded-xl border border-gray-200\">\r\n                      <Printer className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\r\n                      <p className=\"text-gray-500 font-medium\">No printers found</p>\r\n                      <p className=\"text-sm text-gray-400 mt-1\">Try adjusting your search criteria</p>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"space-y-3\">\r\n                      {filteredPrinters.map((printer) => (\r\n                        <Card\r\n                          key={printer.id}\r\n                          className=\"cursor-pointer border-gray-200 hover:border-gray-300 hover:bg-gray-50 hover:shadow-sm transition-all duration-200\"\r\n                          onClick={() => handlePrinterSelect(printer)}\r\n                        >\r\n                          <CardContent className=\"p-4\">\r\n                            <div className=\"flex flex-col\">\r\n                              {/* Printer Name at the top */}\r\n                              <div className=\"font-bold text-base text-gray-900 mb-2 truncate\">\r\n                                {[\r\n                                  printer.manufacturer,\r\n                                  printer.series,\r\n                                  printer.model || printer.name\r\n                                ].filter(Boolean).join(' ')}\r\n                              </div>\r\n                              <div className=\"flex items-start gap-3\">\r\n                                {/* Printer Image */}\r\n                                <div className=\"w-16 h-16 flex-shrink-0 flex items-center justify-center bg-gray-100 rounded-xl border-2 border-gray-200 overflow-hidden\">\r\n                                  {printer.image_url ? (\r\n                                    <img\r\n                                      src={printer.image_url}\r\n                                      alt={printer.name}\r\n                                      className=\"object-contain w-full h-full\"\r\n                                    />\r\n                                  ) : (\r\n                                    <Printer className=\"h-8 w-8 text-gray-400\" />\r\n                                  )}\r\n                                </div>\r\n                                {/* Details */}\r\n                                <div className=\"flex-1 min-w-0 flex flex-col justify-center\">\r\n                                  <CompatibleProducts \r\n                                    printerId={printer.id} \r\n                                    className=\"mt-2 flex flex-row flex-wrap gap-2\" \r\n                                  />\r\n                                </div>\r\n                                <ArrowRight className=\"h-4 w-4 text-gray-400 flex-shrink-0\" />\r\n                              </div>\r\n                            </div>\r\n                          </CardContent>\r\n                        </Card>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {step === 2 && selectedPrinter && (\r\n              <>\r\n                {/* Form Section */}\r\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                  <div className=\"bg-gradient-to-br from-purple-50 to-violet-50 p-4 rounded-xl border border-purple-100\">\r\n                    <h3 className=\"font-semibold text-gray-900 mb-4 flex items-center\">\r\n                      <Settings className=\"h-4 w-4 mr-2 text-purple-600\" />\r\n                      Inventory Details\r\n                    </h3>\r\n                    \r\n                    <div className=\"space-y-4\">\r\n                      <div className=\"space-y-2\">\r\n                        <Label htmlFor=\"serialNumber\" className=\"text-sm font-semibold text-gray-700\">\r\n                          Serial Number\r\n                        </Label>\r\n                        <Input\r\n                          id=\"serialNumber\"\r\n                          type=\"text\"\r\n                          value={serialNumber}\r\n                          onChange={(e) => setSerialNumber(e.target.value)}\r\n                          placeholder=\"Enter serial number (optional)\"\r\n                          className=\"h-12 text-base\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"flex items-center justify-between p-3 bg-white rounded-lg border border-purple-200\">\r\n                        <div>\r\n                          <Label htmlFor=\"client_owned_toggle\" className=\"text-sm font-semibold text-gray-700\">\r\n                            Service Unit / Client Owned\r\n                          </Label>\r\n                          <p className=\"text-xs text-gray-500 mt-1\">Switch to Client Owned to assign to a client</p>\r\n                        </div>\r\n                        <Button\r\n                          type=\"button\"\r\n                          variant=\"outline\"\r\n                          onClick={() => setShowClientModal(true)}\r\n                          className=\"mr-2\"\r\n                          disabled={!isClientOwned}\r\n                        >\r\n                          {selectedClient ? `Client: ${selectedClient.name}` : 'Select Client'}\r\n                        </Button>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"client_owned_toggle\"\r\n                          checked={isClientOwned}\r\n                          onChange={e => handleClientOwnedToggle(e.target.checked)}\r\n                          className=\"h-5 w-5 text-purple-600 focus:ring-purple-500 border-gray-300 rounded\"\r\n                        />\r\n                      </div>\r\n                      {isClientOwned && selectedClient && (\r\n                        <div className=\"ml-4 text-xs text-gray-600 mb-2\">Selected: {selectedClient.name}</div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <ClientListModal\r\n                  isOpen={showClientModal}\r\n                  onClose={() => setShowClientModal(false)}\r\n                  onClientSelected={handleClientSelected}\r\n                  title=\"Select Client Owner\"\r\n                  description=\"Choose a client to own this printer.\"\r\n                />\r\n                <Dialog open={showSerialPrompt} onOpenChange={setShowSerialPrompt}>\r\n                  <DialogContent>\r\n                    <DialogTitle>No serial number has been added</DialogTitle>\r\n                    <DialogDescription>\r\n                      You can go back to enter it now, or click 'Done' to skip and update it later.\r\n                    </DialogDescription>\r\n                    <DialogFooter>\r\n                      <Button variant=\"outline\" onClick={() => setShowSerialPrompt(false)}>\r\n                        Go Back\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => {\r\n                          setShowSerialPrompt(false);\r\n                          handleConfirm();\r\n                        }}\r\n                        className=\"bg-green-600 hover:bg-green-700 text-white\"\r\n                      >\r\n                        Done\r\n                      </Button>\r\n                    </DialogFooter>\r\n                  </DialogContent>\r\n                </Dialog>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Mobile Footer - Sticky */}\r\n        <div className=\"sticky bottom-0 z-10 bg-white border-t border-gray-200 sm:rounded-b-2xl\">\r\n          <div className=\"p-4 sm:p-6\">\r\n            <div className=\"flex flex-col sm:flex-row space-y-3 sm:space-y-0 sm:space-x-3\">\r\n              {step === 1 ? (\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={handleClose}\r\n                  className=\"w-full sm:w-auto h-12 text-base font-medium\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              ) : (\r\n                <>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"outline\"\r\n                    onClick={handleBack}\r\n                    className=\"w-full sm:w-auto h-12 text-base font-medium\"\r\n                  >\r\n                    <ArrowLeft className=\"h-4 w-4 mr-2\" />\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    onClick={handleSubmit}\r\n                    disabled={loading}\r\n                    className=\"w-full sm:w-auto h-12 text-base font-medium bg-green-600 hover:bg-green-700 text-white\"\r\n                  >\r\n                    {loading ? (\r\n                      <div className=\"flex items-center\">\r\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                        Adding...\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"flex items-center\">\r\n                        <Check className=\"h-4 w-4 mr-2\" />\r\n                        Add to Inventory\r\n                      </div>\r\n                    )}\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","\r\nimport React from 'react';\r\n\r\ninterface MobileNavLayoutProps {\r\n  leftSection?: React.ReactNode;\r\n  centerSection?: React.ReactNode;\r\n  rightSection?: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const MobileNavLayout = ({ \r\n  leftSection, \r\n  centerSection, \r\n  rightSection, \r\n  className = '' \r\n}: MobileNavLayoutProps) => {\r\n  return (\r\n    <nav className={`fixed bottom-0 left-0 w-full z-50 bg-white/95 backdrop-blur-lg border-t border-gray-200 shadow-2xl transition-all ${className}`}>\r\n      <div className=\"flex items-center px-2 py-2 min-h-[60px]\">\r\n        {/* Left section - fixed width */}\r\n        {leftSection && (\r\n          <div className=\"flex-shrink-0 w-12 flex justify-center\">\r\n            {leftSection}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Center section - takes remaining space */}\r\n        {centerSection && (\r\n          <div className=\"flex-1 flex items-center min-w-0\">\r\n            {centerSection}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Right section - make it stretch responsively */}\r\n        {rightSection && rightSection}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import { Monitor, Package } from 'lucide-react';\r\nimport { MobileFilterButtons } from '@/components/navigation/MobileFilterButtons';\r\n\r\ninterface FilterButtonsProps {\r\n  printerFilter: 'assigned' | 'catalog' | 'available' | 'inventory' | 'all';\r\n  setPrinterFilter: (filter: 'assigned' | 'catalog' | 'available' | 'inventory' | 'all') => void;\r\n}\r\n\r\nconst FILTERS = [\r\n  { key: 'assigned', label: 'Assigned', icon: Monitor },\r\n  { key: 'available', label: 'Available', icon: Package },\r\n];\r\n\r\nexport const FilterButtons = ({ printerFilter, setPrinterFilter }: FilterButtonsProps) => {\r\n  return (\r\n    <MobileFilterButtons\r\n      options={FILTERS}\r\n      activeFilter={printerFilter}\r\n      onFilterChange={(filter) => setPrinterFilter(filter as any)}\r\n    />\r\n  );\r\n};\r\n","\r\nimport React from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { ArrowLeft } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface NavigationButtonProps {\r\n  label: string;\r\n  count?: number;\r\n  isActive: boolean;\r\n  onClick: () => void;\r\n  icon?: React.ReactNode;\r\n  show?: boolean;\r\n  isInitial?: boolean;\r\n}\r\n\r\nconst NavigationButton: React.FC<NavigationButtonProps> = ({\r\n  label,\r\n  count,\r\n  isActive,\r\n  onClick,\r\n  icon,\r\n  show = true,\r\n  isInitial = false\r\n}) => {\r\n  if (!show) return null;\r\n  \r\n  // If this is a back button, show icon only\r\n  if (label.toLowerCase() === 'back') {\r\n    return (\r\n      <button\r\n        onClick={onClick}\r\n        className=\"h-12 w-12 rounded-lg flex items-center justify-center text-gray-500 hover:text-gray-700 hover:bg-gray-50 transition-all duration-200\"\r\n        aria-label=\"Back\"\r\n      >\r\n        <ArrowLeft className=\"h-5 w-5\" />\r\n      </button>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <Button\r\n      variant={isActive ? \"default\" : \"ghost\"}\r\n      onClick={onClick}\r\n      className={cn(\r\n        \"flex-1 relative h-12 flex flex-col items-center justify-center gap-1 text-xs\",\r\n        isActive && \"bg-blue-600 text-white\"\r\n      )}\r\n    >\r\n      {icon && <span className=\"text-base\">{icon}</span>}\r\n      <span className=\"font-medium\">{label}</span>\r\n      {count !== undefined && count > 0 && (\r\n        <Badge \r\n          variant=\"secondary\" \r\n          className=\"absolute -top-1 -right-1 h-5 w-5 rounded-full p-0 flex items-center justify-center text-xs\"\r\n        >\r\n          {count}\r\n        </Badge>\r\n      )}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default NavigationButton;\r\nexport { NavigationButton };\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { Product } from \"@/types/sales\";\r\nimport { ProductDetailsModal } from \"@/components/modals/ProductDetailsModal\";\r\nimport AddPrinterModal from \"@/components/AddPrinterModal\";\r\nimport { Printer as PrinterType } from \"@/types/database\";\r\nimport { AssignModal } from \"./AssignModal\";\r\nimport { AddToInventoryModal } from \"./components/AddToInventoryModal\";\r\nimport { MobileNavLayout } from \"@/components/navigation/MobileNavLayout\";\r\n\r\n// Components\r\nimport { FilterButtons } from \"./components/FilterButtons\";\r\nimport NavigationButton from \"@/PrinterDashboard/components/NavigationButton\";\r\nimport { AddButtonNavigation } from \"./components/AddButtonNavigation\";\r\n\r\ninterface PrinterWithProducts extends Omit<PrinterType, 'printer_assignments'> {\r\n  compatibleProducts: Array<{\r\n    id: string;\r\n    name: string;\r\n    sku?: string;\r\n    color?: string;\r\n  }>;\r\n  printer_assignments?: Array<{\r\n    id: string;\r\n    status: string;\r\n    is_unassigned?: boolean;\r\n    serial_number?: string;\r\n    client_id?: string;\r\n    clients?: { id: string; name: string };\r\n    department_location?: { name: string; department: { name: string } };\r\n  }>;\r\n}\r\n\r\ninterface PrinterDashboardNavProps {\r\n  printerFilter: 'assigned' | 'catalog' | 'available' | 'inventory' | 'all';\r\n  setPrinterFilter: (filter: 'assigned' | 'catalog' | 'available' | 'inventory' | 'all') => void;\r\n  onFilteredDataChange: (data: PrinterWithProducts[]) => void;\r\n  editAssignmentModal?: React.ReactNode;\r\n}\r\n\r\nexport const PrinterDashboardNav = ({ \r\n  printerFilter, \r\n  setPrinterFilter,\r\n  onFilteredDataChange,\r\n  editAssignmentModal\r\n}: PrinterDashboardNavProps) => {\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\r\n  const [showProductDetails, setShowProductDetails] = useState(false);\r\n  const [showAddPrinter, setShowAddPrinter] = useState(false);\r\n  const [showPrinterSelection, setShowPrinterSelection] = useState(false);\r\n  const [showAssignToClient, setShowAssignToClient] = useState(false);\r\n  const [showAddToInventory, setShowAddToInventory] = useState(false);\r\n  const [selectedPrinter, setSelectedPrinter] = useState<{ id: string; name: string } | null>(null);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const handleProductSelect = (product: Product) => {\r\n    setSelectedProduct(product);\r\n    setShowProductDetails(true);\r\n  };\r\n\r\n  const handleCloseProductDetails = () => {\r\n    setShowProductDetails(false);\r\n    setSelectedProduct(null);\r\n  };\r\n\r\n  const handlePrinterSelected = (printerId: string, printerName: string) => {\r\n    setSelectedPrinter({ id: printerId, name: printerName });\r\n    setShowPrinterSelection(false);\r\n    setShowAssignToClient(true);\r\n  };\r\n\r\n  const handleAssignmentComplete = () => {\r\n    setShowAssignToClient(false);\r\n    setSelectedPrinter(null);\r\n  };\r\n\r\n  const handleAssignPrinter = () => {\r\n    setShowPrinterSelection(true);\r\n  };\r\n\r\n  const handleAddPrinter = () => {\r\n    setShowAddPrinter(true);\r\n  };\r\n\r\n  const handleAddToInventory = () => {\r\n    setShowAddToInventory(true);\r\n  };\r\n\r\n  const handleInventoryAdded = () => {\r\n    setShowAddToInventory(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MobileNavLayout\r\n        leftSection={\r\n          <NavigationButton \r\n            label=\"Back\"\r\n            isActive={false}\r\n            show={location.pathname !== '/'}\r\n            onClick={() => navigate(-1)}\r\n          />\r\n        }\r\n        centerSection={\r\n          <FilterButtons \r\n            printerFilter={printerFilter}\r\n            setPrinterFilter={setPrinterFilter}\r\n          />\r\n        }\r\n        rightSection={\r\n          <AddButtonNavigation\r\n            onAssignPrinter={handleAssignPrinter}\r\n            onAddPrinter={handleAddPrinter}\r\n            onAddToInventory={handleAddToInventory}\r\n          />\r\n        }\r\n      />\r\n\r\n      {/* Modals */}\r\n      {showProductDetails && selectedProduct && (\r\n        <ProductDetailsModal\r\n          isOpen={showProductDetails}\r\n          onClose={handleCloseProductDetails}\r\n          product={selectedProduct} \r\n        />\r\n      )}\r\n      {showAddPrinter && (\r\n        <AddPrinterModal \r\n          isOpen={showAddPrinter} \r\n          onClose={() => setShowAddPrinter(false)} \r\n          onPrinterAdded={() => {}} \r\n        />\r\n      )}\r\n      {showAddToInventory && (\r\n        <AddToInventoryModal\r\n          isOpen={showAddToInventory}\r\n          onClose={() => setShowAddToInventory(false)}\r\n          onAdded={handleInventoryAdded}\r\n        />\r\n      )}\r\n      {showPrinterSelection && (\r\n        <AssignModal\r\n          isOpen={showPrinterSelection}\r\n          onClose={() => setShowPrinterSelection(false)}\r\n          onAssigned={handleAssignmentComplete}\r\n        />\r\n      )}\r\n      {showAssignToClient && selectedPrinter && (\r\n        <AssignModal\r\n          isOpen={showAssignToClient}\r\n          onClose={() => setShowAssignToClient(false)}\r\n          onAssigned={handleAssignmentComplete}\r\n          preSelectedClientId={selectedPrinter.id}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","\r\nimport React from 'react';\r\n\r\ninterface PrinterDashboardHelpBannerProps {\r\n  printerFilter: 'assigned' | 'available' | 'catalog' | 'inventory' | 'all';\r\n}\r\n\r\nconst PrinterDashboardHelpBanner = React.memo(({ printerFilter }: PrinterDashboardHelpBannerProps) => {\r\n  const getHelpText = () => {\r\n    switch (printerFilter) {\r\n      case 'assigned':\r\n        return null;\r\n      case 'available':\r\n        return '🛈 Available Tab: List of Printers with Status = Available';\r\n      case 'catalog':\r\n        return '🛈 Catalog Tab: List of Printers Supported by Our Products';\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const helpText = getHelpText();\r\n  \r\n  if (!helpText) return null;\r\n\r\n  return (\r\n    <div className=\"w-full bg-blue-50 border-b border-blue-100 py-2 px-4 text-sm text-blue-900 flex items-center gap-2\">\r\n      <span><b>{helpText}</b></span>\r\n    </div>\r\n  );\r\n});\r\n\r\nPrinterDashboardHelpBanner.displayName = 'PrinterDashboardHelpBanner';\r\n\r\nexport default PrinterDashboardHelpBanner;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { X, Upload } from 'lucide-react';\r\nimport { printerService } from '@/services/printerService';\r\nimport { productService } from '@/services/productService';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\n\r\ninterface AddPrinterModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onPrinterAdded: () => void;\r\n}\r\n\r\nconst AddPrinterModal: React.FC<AddPrinterModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onPrinterAdded,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    manufacturer: '',\r\n    model: '',\r\n    series: '',\r\n    color: '',\r\n    description: '',\r\n    image_url: '',\r\n  });\r\n  const [supportedProducts, setSupportedProducts] = useState<{ id: string, name: string, color?: string }[]>([]);\r\n  const [productInput, setProductInput] = useState('');\r\n  const [availableProducts, setAvailableProducts] = useState<any[]>([]);\r\n  const [showProductDropdown, setShowProductDropdown] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [imageFile, setImageFile] = useState<File | null>(null);\r\n  const [imagePreview, setImagePreview] = useState<string>('');\r\n  const [nameExists, setNameExists] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  const colorOptions = [\r\n    { value: 'CMYK', label: 'CMYK (Color)' },\r\n    { value: 'Monochrome', label: 'Monochrome (Black Only)' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      // Reset form when modal opens\r\n      setFormData({\r\n        name: '',\r\n        manufacturer: '',\r\n        model: '',\r\n        series: '',\r\n        color: '',\r\n        description: '',\r\n        image_url: '',\r\n      });\r\n      setSupportedProducts([]);\r\n      setProductInput('');\r\n      setImageFile(null);\r\n      setImagePreview('');\r\n      setNameExists(false);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    loadAvailableProducts();\r\n  }, []);\r\n\r\n  // Check if printer name exists\r\n  const checkPrinterNameExists = async (name: string) => {\r\n    if (!name.trim()) {\r\n      setNameExists(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const existingPrinters = await printerService.searchPrinters(name.trim());\r\n      const exactMatch = existingPrinters.find(p => p.name.toLowerCase() === name.trim().toLowerCase());\r\n      setNameExists(!!exactMatch);\r\n    } catch (error) {\r\n      console.error('Error checking printer name:', error);\r\n    }\r\n  };\r\n\r\n  const loadAvailableProducts = async () => {\r\n    try {\r\n      const products = await productService.getProducts();\r\n      setAvailableProducts(products);\r\n    } catch (error) {\r\n      console.error('Failed to load available products:', error);\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      setImageFile(file);\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setImagePreview(e.target?.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (nameExists) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"A printer with this name already exists. Please choose a different name.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!formData.name.trim()) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Printer name is required.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      // Double-check for duplicates before creating\r\n      const existingPrinters = await printerService.searchPrinters(formData.name.trim());\r\n      const exactMatch = existingPrinters.find(p => p.name.toLowerCase() === formData.name.trim().toLowerCase());\r\n      \r\n      if (exactMatch) {\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"A printer with this name already exists. Please choose a different name.\",\r\n          variant: \"destructive\",\r\n        });\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Create printer with either uploaded image URL or provided URL\r\n      let finalImageUrl = formData.image_url;\r\n      \r\n      // For now, if an image file is selected, we'll use a placeholder\r\n      // In a real implementation, you'd upload to a service like Supabase Storage\r\n      if (imageFile && !formData.image_url) {\r\n        finalImageUrl = imagePreview; // Use the data URL for now\r\n      }\r\n\r\n      const newPrinter = await printerService.createPrinter({\r\n        name: formData.name.trim(),\r\n        manufacturer: formData.manufacturer.trim() || null,\r\n        model: formData.model.trim() || null,\r\n        series: formData.series.trim() || null,\r\n        color: formData.color || null,\r\n        description: formData.description.trim() || null,\r\n        image_url: finalImageUrl || null,\r\n      });\r\n\r\n      // Add supported products if any\r\n      if (supportedProducts.length > 0) {\r\n        const productIds = supportedProducts.map(p => p.id);\r\n        await printerService.updatePrinterProducts(newPrinter.id, productIds);\r\n      }\r\n\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Printer added successfully!\",\r\n      });\r\n\r\n      onPrinterAdded();\r\n      onClose();\r\n    } catch (error: any) {\r\n      console.error('Failed to add printer:', error);\r\n      \r\n      let errorMessage = \"Failed to add printer. Please try again.\";\r\n      \r\n      if (error?.code === '23505' && error?.details?.includes('printers_name_key')) {\r\n        errorMessage = \"A printer with this name already exists. Please choose a different name.\";\r\n      }\r\n      \r\n      toast({\r\n        title: \"Error\",\r\n        description: errorMessage,\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n\r\n    // Check for duplicate names when name field changes\r\n    if (name === 'name') {\r\n      checkPrinterNameExists(value);\r\n    }\r\n  };\r\n\r\n  const handleColorChange = (value: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      color: value\r\n    }));\r\n  };\r\n\r\n  const handleProductInputChange = (value: string) => {\r\n    setProductInput(value);\r\n    setShowProductDropdown(value.length > 0);\r\n  };\r\n\r\n  const addProduct = (productId: string) => {\r\n    const product = availableProducts.find(p => p.id === productId);\r\n    if (!product) return;\r\n    // Prevent duplicate (same id)\r\n    if (!supportedProducts.some(p => p.id === product.id)) {\r\n      setSupportedProducts(prev => [...prev, { id: product.id, name: product.name, color: product.color }]);\r\n    }\r\n    setProductInput('');\r\n    setShowProductDropdown(false);\r\n  };\r\n\r\n  const removeProduct = (productId: string) => {\r\n    setSupportedProducts(prev => prev.filter(p => p.id !== productId));\r\n  };\r\n\r\n  const handleProductInputKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' || e.key === ',') {\r\n      e.preventDefault();\r\n      const trimmedValue = productInput.trim();\r\n      if (trimmedValue) {\r\n        addProduct(trimmedValue);\r\n      }\r\n    }\r\n  };\r\n\r\n  const filteredProducts = availableProducts.filter(product =>\r\n    product.name.toLowerCase().includes(productInput.toLowerCase()) &&\r\n    !supportedProducts.some(p => p.id === product.id)\r\n  );\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-xl shadow-lg max-w-md w-full mx-4 max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex items-center justify-between p-6 border-b\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900\">Add New Printer</h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n          >\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Printer Name *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              required\r\n              disabled={loading}\r\n              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 ${\r\n                nameExists ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n              placeholder=\"Enter printer name\"\r\n            />\r\n            {nameExists && (\r\n              <p className=\"mt-1 text-sm text-red-600\">\r\n                A printer with this name already exists. Please choose a different name.\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"manufacturer\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Make/Manufacturer\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"manufacturer\"\r\n              name=\"manufacturer\"\r\n              value={formData.manufacturer}\r\n              onChange={handleChange}\r\n              disabled={loading}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100\"\r\n              placeholder=\"e.g., HP, Canon, Epson\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"model\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Model\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"model\"\r\n              name=\"model\"\r\n              value={formData.model}\r\n              onChange={handleChange}\r\n              disabled={loading}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100\"\r\n              placeholder=\"e.g., LaserJet Pro M404n\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"series\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Series\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"series\"\r\n              name=\"series\"\r\n              value={formData.series}\r\n              onChange={handleChange}\r\n              disabled={loading}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100\"\r\n              placeholder=\"e.g., LaserJet Pro, PIXMA, MFP\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Color Variation\r\n            </label>\r\n            <Select value={formData.color} onValueChange={handleColorChange} disabled={loading}>\r\n              <SelectTrigger className=\"w-full\">\r\n                <SelectValue placeholder=\"Select color type\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {colorOptions.map((option) => (\r\n                  <SelectItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              id=\"description\"\r\n              name=\"description\"\r\n              value={formData.description}\r\n              onChange={handleChange}\r\n              disabled={loading}\r\n              rows={3}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100\"\r\n              placeholder=\"Enter printer description...\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Printer Image\r\n            </label>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center justify-center w-full\">\r\n                <label\r\n                  htmlFor=\"image-upload\"\r\n                  className=\"flex flex-col items-center justify-center w-full h-32 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100 disabled:cursor-not-allowed disabled:opacity-50\"\r\n                >\r\n                  <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\r\n                    <Upload className=\"w-8 h-8 mb-2 text-gray-500\" />\r\n                    <p className=\"mb-2 text-sm text-gray-500\">\r\n                      <span className=\"font-semibold\">Click to upload</span> printer image\r\n                    </p>\r\n                    <p className=\"text-xs text-gray-500\">PNG, JPG or JPEG (MAX. 10MB)</p>\r\n                  </div>\r\n                  <input\r\n                    id=\"image-upload\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleImageChange}\r\n                    disabled={loading}\r\n                    className=\"hidden\"\r\n                  />\r\n                </label>\r\n              </div>\r\n              \r\n              {imagePreview && (\r\n                <div className=\"relative\">\r\n                  <img\r\n                    src={imagePreview}\r\n                    alt=\"Preview\"\r\n                    className=\"w-full h-32 object-cover rounded-lg border\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      setImageFile(null);\r\n                      setImagePreview('');\r\n                    }}\r\n                    className=\"absolute top-2 right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center hover:bg-red-600\"\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"text-center text-sm text-gray-500\">OR</div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"image_url\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Image URL\r\n                </label>\r\n                <input\r\n                  type=\"url\"\r\n                  id=\"image_url\"\r\n                  name=\"image_url\"\r\n                  value={formData.image_url}\r\n                  onChange={handleChange}\r\n                  disabled={loading}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100\"\r\n                  placeholder=\"https://example.com/printer-image.jpg\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Supported Products\r\n            </label>\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"text\"\r\n                value={productInput}\r\n                onChange={(e) => handleProductInputChange(e.target.value)}\r\n                onKeyPress={handleProductInputKeyPress}\r\n                disabled={loading}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100\"\r\n                placeholder=\"Type product name and press Enter or comma\"\r\n              />\r\n              {showProductDropdown && filteredProducts.length > 0 && (\r\n                <div className=\"absolute z-10 w-full bg-white border border-gray-300 rounded-lg shadow-lg mt-1 max-h-40 overflow-y-auto\">\r\n                  {filteredProducts.slice(0, 5).map((product) => (\r\n                    <button\r\n                      key={product.id}\r\n                      type=\"button\"\r\n                      onClick={() => addProduct(product.id)}\r\n                      className=\"w-full text-left px-3 py-2 hover:bg-gray-100 border-b border-gray-100 last:border-b-0 flex items-center gap-2\"\r\n                    >\r\n                      {product.color && (\r\n                        <span className=\"w-3 h-3 rounded-full border border-gray-300\" style={{ backgroundColor: product.color, display: 'inline-block' }} />\r\n                      )}\r\n                      {product.name}\r\n                      {product.sku && (\r\n                        <span className=\"ml-1 text-gray-400\">({product.sku})</span>\r\n                      )}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n            {supportedProducts.length > 0 && (\r\n              <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                {supportedProducts.map((product) => (\r\n                  <span\r\n                    key={product.id}\r\n                    className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 gap-1\"\r\n                  >\r\n                    {product.color && (\r\n                      <span className=\"w-3 h-3 rounded-full border border-gray-300 mr-1\" style={{ backgroundColor: product.color, display: 'inline-block' }} />\r\n                    )}\r\n                    {product.name}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => removeProduct(product.id)}\r\n                      className=\"ml-1 inline-flex items-center justify-center w-4 h-4 rounded-full text-blue-400 hover:bg-blue-200 hover:text-blue-600\"\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            )}\r\n            <p className=\"text-xs text-gray-500 mt-1\">\r\n              Type product names and press Enter or comma to add them\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"flex space-x-3 pt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              disabled={loading}\r\n              className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors disabled:opacity-50\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading || nameExists}\r\n              className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Adding...' : 'Add Printer'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPrinterModal;\r\n","\r\nimport React from 'react';\r\nimport { AssignModal } from '@/PrinterDashboard/AssignModal';\r\nimport AddPrinterModal from '@/PrinterDashboard/AddPrinterModal';\r\nimport EditAssignmentModal from '@/PrinterDashboard/components/modals/EditAssignment';\r\n\r\ninterface PrinterDashboardModalsProps {\r\n  showPrinterSelection: boolean;\r\n  onClosePrinterSelection: () => void;\r\n  onPrinterSelected: (printerId: string, printerName: string) => void;\r\n  \r\n  showAssignToClient: boolean;\r\n  onCloseAssignToClient: () => void;\r\n  selectedPrinter: { id: string; name: string } | null;\r\n  onAssignmentComplete: () => void;\r\n  \r\n  showAddPrinter: boolean;\r\n  onCloseAddPrinter: () => void;\r\n  onPrinterAdded: () => void;\r\n  \r\n  showEditAssignmentModal: boolean;\r\n  onCloseEditAssignmentModal: () => void;\r\n  selectedPrinterForAssignment: any;\r\n  onAssignmentUpdated: () => void;\r\n}\r\n\r\nconst PrinterDashboardModals = React.memo(({\r\n  showPrinterSelection,\r\n  onClosePrinterSelection,\r\n  onPrinterSelected,\r\n  showAssignToClient,\r\n  onCloseAssignToClient,\r\n  selectedPrinter,\r\n  onAssignmentComplete,\r\n  showAddPrinter,\r\n  onCloseAddPrinter,\r\n  onPrinterAdded,\r\n  showEditAssignmentModal,\r\n  onCloseEditAssignmentModal,\r\n  selectedPrinterForAssignment,\r\n  onAssignmentUpdated,\r\n}: PrinterDashboardModalsProps) => {\r\n  return (\r\n    <>\r\n      {showPrinterSelection && (\r\n        <AssignModal \r\n          isOpen={showPrinterSelection} \r\n          onClose={onClosePrinterSelection} \r\n          onAssigned={onAssignmentComplete}\r\n        />\r\n      )}\r\n      \r\n      {showAddPrinter && (\r\n        <AddPrinterModal \r\n          isOpen={showAddPrinter} \r\n          onClose={onCloseAddPrinter} \r\n          onPrinterAdded={onPrinterAdded} \r\n        />\r\n      )}\r\n      \r\n      {showEditAssignmentModal && selectedPrinterForAssignment && (\r\n        <EditAssignmentModal\r\n          isOpen={showEditAssignmentModal}\r\n          onClose={onCloseEditAssignmentModal}\r\n          printerId={selectedPrinterForAssignment.id}\r\n          onAssignmentUpdated={onAssignmentUpdated}\r\n          isLoading={false}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nPrinterDashboardModals.displayName = 'PrinterDashboardModals';\r\n\r\nexport default PrinterDashboardModals;\r\n","export class MemoryManager {\r\n  private static instance: MemoryManager;\r\n  private memoryThreshold = 50 * 1024 * 1024; // 50MB threshold\r\n  private checkInterval: NodeJS.Timeout | null = null;\r\n\r\n  static getInstance(): MemoryManager {\r\n    if (!MemoryManager.instance) {\r\n      MemoryManager.instance = new MemoryManager();\r\n    }\r\n    return MemoryManager.instance;\r\n  }\r\n\r\n  startMonitoring(): void {\r\n    if (this.checkInterval) return;\r\n\r\n    this.checkInterval = setInterval(() => {\r\n      this.checkMemoryUsage();\r\n    }, 30000); // Check every 30 seconds\r\n  }\r\n\r\n  stopMonitoring(): void {\r\n    if (this.checkInterval) {\r\n      clearInterval(this.checkInterval);\r\n      this.checkInterval = null;\r\n    }\r\n  }\r\n\r\n  // Check if memory usage is high (over 80% of threshold)\r\n  isMemoryPressure(): boolean {\r\n    if ('memory' in performance) {\r\n      const memInfo = (performance as any).memory;\r\n      const usedMemory = memInfo.usedJSHeapSize;\r\n      return usedMemory > (this.memoryThreshold * 0.8);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // Manual check for high memory usage (over threshold)\r\n  isHighMemoryUsage(): boolean {\r\n    if ('memory' in performance) {\r\n      const memInfo = (performance as any).memory;\r\n      const usedMemory = memInfo.usedJSHeapSize;\r\n      return usedMemory > this.memoryThreshold;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // Adjustable threshold\r\n  setMemoryThreshold(megabytes: number): void {\r\n    this.memoryThreshold = megabytes * 1024 * 1024;\r\n  }\r\n\r\n  private checkMemoryUsage(): void {\r\n    if ('memory' in performance) {\r\n      const memInfo = (performance as any).memory;\r\n      const usedMemory = memInfo.usedJSHeapSize;\r\n      \r\n      console.log(`📊 Memory usage: ${(usedMemory / 1024 / 1024).toFixed(2)}MB`);\r\n      \r\n      if (usedMemory > this.memoryThreshold) {\r\n        console.warn('🚨 High memory usage detected, triggering cleanup...');\r\n        this.performMemoryCleanup();\r\n      }\r\n    }\r\n  }\r\n\r\n  private performMemoryCleanup(): void {\r\n    // Clear all non-essential localStorage data during memory pressure\r\n    const keysToCheck = [\r\n      'cached_products',\r\n      'cached_printers', \r\n      'cached_clients',\r\n      'search_cache',\r\n      'normalized_printer_data',\r\n      'temp_data',\r\n      'filter_cache'\r\n    ];\r\n\r\n    // More aggressive cleanup during high memory pressure\r\n    const maxAge = this.isHighMemoryUsage() ? 15 * 60 * 1000 : 60 * 60 * 1000; // 15 mins or 1 hour\r\n\r\n    keysToCheck.forEach(key => {\r\n      const timestamp = localStorage.getItem(`${key}_timestamp`);\r\n      if (timestamp) {\r\n        const age = Date.now() - parseInt(timestamp);\r\n        if (age > maxAge) {\r\n          localStorage.removeItem(key);\r\n          localStorage.removeItem(`${key}_timestamp`);\r\n          console.log(`🧹 Cleared cache: ${key}`);\r\n        }\r\n      }\r\n    });\r\n\r\n    // Trigger garbage collection if available\r\n    if ('gc' in window && typeof (window as any).gc === 'function') {\r\n      (window as any).gc();\r\n    }\r\n  }\r\n\r\n  // Manual cleanup method\r\n  clearCache(): void {\r\n    this.performMemoryCleanup();\r\n  }\r\n\r\n  // Get memory usage info\r\n  getMemoryInfo(): any {\r\n    if ('memory' in performance) {\r\n      const memInfo = (performance as any).memory;\r\n      return {\r\n        used: Math.round(memInfo.usedJSHeapSize / 1024 / 1024),\r\n        total: Math.round(memInfo.totalJSHeapSize / 1024 / 1024),\r\n        limit: Math.round(memInfo.jsHeapSizeLimit / 1024 / 1024)\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport const memoryManager = MemoryManager.getInstance();\r\n","import { useQuery } from '@tanstack/react-query';\r\nimport { dataService } from '@/services/dataService';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useEffect } from 'react';\r\nimport { memoryManager } from '@/utils/memoryManager';\r\n\r\nexport const useOptimizedPrinterData = (\r\n  printerFilter: 'assigned' | 'available' | 'catalog' | 'inventory',\r\n  enabled: boolean\r\n) => {\r\n  // Preload data for predicted tab switches\r\n  useEffect(() => {\r\n    if (enabled) {\r\n      dataService.preloadTabData(printerFilter);\r\n    }\r\n  }, [printerFilter, enabled]);\r\n\r\n  return useQuery({\r\n    queryKey: ['optimized-printer-data', printerFilter],\r\n    queryFn: async () => {\r\n      // Try to get from cache first, but only if we're not in a high memory state\r\n      if (!memoryManager.isHighMemoryUsage()) {\r\n        const cached = dataService.getCachedNormalizedData();\r\n        const denormalizedData = cached ? dataService.denormalizePrinterData(printerFilter) : [];\r\n        \r\n        // Only use cache if we have valid data\r\n        if (cached && denormalizedData.length > 0) {\r\n          return denormalizedData;\r\n        }\r\n      }\r\n      \r\n      // Fetch fresh data based on filter\r\n      if (printerFilter === 'catalog') {\r\n        const { data, error } = await supabase\r\n          .from('printers')\r\n          .select(`\r\n            id,\r\n            name,\r\n            manufacturer,\r\n            model,\r\n            series,\r\n            color,\r\n            image_url,\r\n            rental_eligible,\r\n            status,\r\n            created_at\r\n          `)\r\n          .neq('status', 'deleted')\r\n          .order('created_at', { ascending: false }); // Changed from .order('name') to sort by newest first\r\n\r\n        if (error) throw error;\r\n        return data || [];\r\n      } else {\r\n        // For assignment-based filters\r\n        let query = supabase\r\n          .from('printer_assignments')\r\n          .select(`\r\n            id,\r\n            printer_id,\r\n            serial_number,\r\n            usage_type,\r\n            status,\r\n            client_id,\r\n            department_location_id,\r\n            assignment_effective_date,\r\n            condition,\r\n            reason_for_change,\r\n            notes,\r\n            created_at,\r\n            updated_at,\r\n            is_client_owned,\r\n            printer:printers!inner(\r\n              id,\r\n              name,\r\n              manufacturer,\r\n              model,\r\n              series,\r\n              color,\r\n              image_url,\r\n              rental_eligible,\r\n              status\r\n            ),\r\n            clients(id, name),\r\n            departments_location(\r\n              id,\r\n              name,\r\n              department:departments(id, name)\r\n            )\r\n          `);\r\n\r\n        // Apply filter-specific conditions\r\n        switch (printerFilter) {\r\n          case 'assigned':\r\n            query = query\r\n              .in('status', ['active', 'inactive', 'undeployed'])\r\n              .not('client_id', 'is', null);\r\n            break;\r\n          case 'available':\r\n            query = query.is('client_id', null);\r\n            break;\r\n          case 'inventory':\r\n            // No additional filters for 'inventory'\r\n            break;\r\n        }\r\n\r\n        query = query.order('printer(name)');\r\n\r\n        const { data, error } = await query;\r\n        if (error) throw error;\r\n\r\n        // Normalize and cache the data\r\n        const normalized = dataService.normalizeAssignmentData(data || []);\r\n        dataService.cacheNormalizedData(normalized);\r\n\r\n        // Return denormalized data for the specific filter\r\n        return dataService.denormalizePrinterData(printerFilter);\r\n      }\r\n    },\r\n    enabled,\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n    gcTime: 10 * 60 * 1000, // 10 minutes\r\n    refetchOnWindowFocus: false,\r\n    refetchOnMount: false,\r\n  });\r\n};\r\n\r\nexport const useBackgroundDataSync = () => {\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout;\r\n    \r\n    const startSync = () => {\r\n      // Only start sync if memory usage is normal\r\n      if (!memoryManager.isMemoryPressure()) {\r\n        interval = setInterval(async () => {\r\n          try {\r\n            // Check memory before each sync\r\n            if (!memoryManager.isMemoryPressure()) {\r\n              await dataService.prefetchTabData('inventory');\r\n            }\r\n          } catch (error) {\r\n            console.warn('Background sync failed:', error);\r\n          }\r\n        }, 10 * 60 * 1000); // 10 minutes\r\n      }\r\n    };\r\n\r\n    // Start initial sync\r\n    startSync();\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      if (interval) {\r\n        clearInterval(interval);\r\n      }\r\n    };\r\n  }, []);\r\n};\r\n","import { useQuery } from '@tanstack/react-query';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useOptimizedPrinterData } from './useOptimizedPrinterData';\r\n\r\n// Legacy hooks for backward compatibility and specific use cases\r\nexport const useAssignedPrinters = (enabled: boolean) => {\r\n  return useOptimizedPrinterData('assigned', enabled);\r\n};\r\n\r\nexport const useAllPrinters = (enabled: boolean) => {\r\n  return useOptimizedPrinterData('inventory', enabled);\r\n};\r\n\r\nexport const useCatalogPrinters = (enabled: boolean) => {\r\n  return useOptimizedPrinterData('catalog', enabled);\r\n};\r\n\r\nexport const useAvailablePrinters = (enabled: boolean) => {\r\n  return useOptimizedPrinterData('available', enabled);\r\n};\r\n\r\n// Keep original implementations as fallback for specific cases that need raw data\r\nexport const useAssignedPrintersRaw = (enabled: boolean) => {\r\n  return useQuery({\r\n    queryKey: ['assigned-assignments-raw'],\r\n    queryFn: async () => {\r\n      const { data, error } = await supabase\r\n        .from('printer_assignments')\r\n        .select(`\r\n          id,\r\n          printer_id,\r\n          serial_number,\r\n          usage_type,\r\n          status,\r\n          client_id,\r\n          department_location_id,\r\n          assignment_effective_date,\r\n          condition,\r\n          reason_for_change,\r\n          notes,\r\n          created_at,\r\n          updated_at,\r\n          printer:printers(\r\n            id,\r\n            name,\r\n            manufacturer,\r\n            model,\r\n            series,\r\n            color,\r\n            image_url,\r\n            rental_eligible,\r\n            is_available,\r\n            status\r\n          ),\r\n          clients(id, name),\r\n          departments_location(\r\n            id,\r\n            name,\r\n            department:departments(id, name)\r\n          )\r\n        `)\r\n        .eq('is_unassigned', false)\r\n        .in('status', ['active', 'inactive'])\r\n        .not('client_id', 'is', null)\r\n        .order('printer(name)');\r\n\r\n      if (error) throw error;\r\n      return data || [];\r\n    },\r\n    select: (data) => {\r\n      // Transform data to unique printers and prevent duplicates\r\n      return data.reduce((acc, assignment) => {\r\n        const printerId = assignment.printer.id;\r\n        // Only add if we haven't seen this printer before\r\n        if (!acc.some(item => item.id === printerId)) {\r\n          acc.push({\r\n            ...assignment.printer,\r\n            printer_assignments: [assignment]\r\n          });\r\n        }\r\n        return acc;\r\n      }, []);\r\n    },\r\n    enabled,\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n  });\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { dataService } from '@/services/dataService';\r\n\r\nexport const useRealtimeSubscription = ({ \r\n  printerFilter, \r\n  onRefresh \r\n}: { \r\n  printerFilter: string;\r\n  onRefresh: () => void;\r\n}) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  useEffect(() => {\r\n    console.log('🔄 Setting up real-time subscription for', printerFilter);\r\n    \r\n    // Subscribe to printer table changes\r\n    const printerSubscription = supabase\r\n      .channel('printer-changes')\r\n      .on('postgres_changes', \r\n        { \r\n          event: '*', \r\n          schema: 'public', \r\n          table: 'printers' \r\n        }, \r\n        (payload) => {\r\n          console.log('📡 Printer table change detected:', payload);\r\n          \r\n          // If a new printer is inserted and we're viewing catalog\r\n          if (payload.eventType === 'INSERT' && printerFilter === 'catalog') {\r\n            console.log('🆕 New printer added to catalog, refreshing...');\r\n            \r\n            // Clear data service cache\r\n            dataService.clearCache();\r\n            \r\n            // Immediately invalidate catalog cache\r\n            queryClient.invalidateQueries({ \r\n              queryKey: ['optimized-printer-data', 'catalog'] \r\n            });\r\n            \r\n            // Trigger refresh\r\n            onRefresh();\r\n          }\r\n          \r\n          // For other changes, refresh based on current view\r\n          if (payload.eventType === 'UPDATE' || payload.eventType === 'DELETE') {\r\n            console.log(`🔄 Printer ${payload.eventType.toLowerCase()}, refreshing ${printerFilter}...`);\r\n            \r\n            // Clear cache for affected filter\r\n            dataService.clearCache();\r\n            queryClient.invalidateQueries({ \r\n              queryKey: ['optimized-printer-data', printerFilter] \r\n            });\r\n            \r\n            onRefresh();\r\n          }\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    // Subscribe to printer assignment changes for inventory/assigned/available tabs\r\n    const assignmentSubscription = supabase\r\n      .channel('assignment-changes')\r\n      .on('postgres_changes', \r\n        { \r\n          event: '*', \r\n          schema: 'public', \r\n          table: 'printer_assignments' \r\n        }, \r\n        (payload) => {\r\n          console.log('📡 Assignment change detected:', payload);\r\n          \r\n          // Clear cache and refresh for assignment-based filters\r\n          if (['assigned', 'available', 'inventory'].includes(printerFilter)) {\r\n            dataService.clearCache();\r\n            queryClient.invalidateQueries({ \r\n              queryKey: ['optimized-printer-data', printerFilter] \r\n            });\r\n            onRefresh();\r\n          }\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    return () => {\r\n      console.log('🔌 Cleaning up real-time subscriptions');\r\n      supabase.removeChannel(printerSubscription);\r\n      supabase.removeChannel(assignmentSubscription);\r\n    };\r\n  }, [printerFilter, onRefresh, queryClient]);\r\n};\r\n","import React, { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport { useQueryClient, useQuery } from '@tanstack/react-query';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useIsMobile } from '@/hooks/use-mobile';\r\nimport { supabase } from '@/integrations/supabase/client';\r\n\r\nimport ErrorBoundary from '@/components/common/ErrorBoundary';\r\nimport PrinterTabContent from '@/PrinterDashboard/PrinterTabContent';\r\nimport { PrinterDashboardNav } from './PrinterDashboardNav';\r\n\r\n// Optimized components\r\nimport TopMobileHeader from '@/includes/TopMobileHeader';\r\nimport PrinterDashboardHelpBanner from './components/PrinterDashboardHelpBanner';\r\nimport PrinterDashboardModals from './components/PrinterDashboardModals';\r\nimport DatabaseSummary from '@/components/DatabaseSummary';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Printer, ArrowLeft } from 'lucide-react';\r\n\r\n// Custom hooks\r\nimport { \r\n  useAssignedPrinters, \r\n  useAllPrinters, \r\n  useCatalogPrinters, \r\n  useAvailablePrinters \r\n} from './hooks/usePrinterQueries';\r\nimport { useRealtimeSubscription } from './hooks/useRealtimeSubscription';\r\nimport { useBackgroundDataSync } from './hooks/useOptimizedPrinterData';\r\nimport { memoryManager } from '@/utils/memoryManager';\r\nimport { dataService } from '@/services/dataService';\r\nimport { AssignModal } from './AssignModal';\r\nimport { AddToInventoryModal } from './components/AddToInventoryModal';\r\nimport AddPrinterModal from '@/components/AddPrinterModal';\r\n\r\nconst PrinterDashboard: React.FC = () => {\r\n  const { user, userProfile, loading, userProfileLoading } = useAuth();\r\n  const isMobile = useIsMobile();\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  \r\n  // State management\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [printerFilter, setPrinterFilter] = useState<'assigned' | 'available' | 'catalog' | 'inventory'>(() => {\r\n    // Get from URL on initial load\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const tab = urlParams.get('tab') as 'assigned' | 'available' | 'catalog' | 'inventory';\r\n    return tab || 'assigned';\r\n  });\r\n  const [showAddPrinter, setShowAddPrinter] = useState(false);\r\n  const [showPrinterSelection, setShowPrinterSelection] = useState(false);\r\n  const [showAssignToClient, setShowAssignToClient] = useState(false);\r\n  const [selectedPrinter, setSelectedPrinter] = useState<{ id: string; name: string; } | null>(null);\r\n  const [filteredData, setFilteredData] = useState<any[]>([]);\r\n  const [debugMode, setDebugMode] = useState(false);\r\n  const [showEditAssignmentModal, setShowEditAssignmentModal] = useState(false);\r\n  const [selectedPrinterForAssignment, setSelectedPrinterForAssignment] = useState<any>(null);\r\n  const [showAll, setShowAll] = useState(false);\r\n  const [showAvailable, setShowAvailable] = useState(false);\r\n  const [showAssigned, setShowAssigned] = useState(false);\r\n  const [showClientOwned, setShowClientOwned] = useState(false);\r\n  const [showAssignModal, setShowAssignModal] = useState(false);\r\n  const [showAddToInventoryModal, setShowAddToInventoryModal] = useState(false);\r\n  const [showCatalogAddPrinterModal, setShowCatalogAddPrinterModal] = useState(false);\r\n\r\n  // Query to fetch client access for the current user\r\n  const { data: clientAccess } = useQuery({\r\n    queryKey: ['client-access', user?.id, userProfile?.role],\r\n    queryFn: async () => {\r\n      if (!user?.id || userProfile?.role !== 'client') return null;\r\n      \r\n      const { data, error } = await supabase\r\n        .from('client_access' as any)\r\n        .select('client_id')\r\n        .eq('user_id', user.id);\r\n      \r\n      if (error) throw error;\r\n      return data.map((access: any) => access.client_id);\r\n    },\r\n    enabled: !!user?.id && userProfile?.role === 'client',\r\n  });\r\n\r\n  // Set up background data synchronization and memory management\r\n  useBackgroundDataSync();\r\n  \r\n  useEffect(() => {\r\n    memoryManager.startMonitoring();\r\n    return () => memoryManager.stopMonitoring();\r\n  }, []);\r\n\r\n  // Custom setter for printerFilter that updates URL\r\n  const setPrinterFilterWithURL = useCallback((filter: 'assigned' | 'available' | 'catalog' | 'inventory') => {\r\n    setPrinterFilter(filter);\r\n    // Update URL immediately\r\n    const url = new URL(window.location.href);\r\n    url.searchParams.set('tab', filter);\r\n    window.history.replaceState({}, '', url.toString());\r\n  }, []);\r\n\r\n  // Update URL when printerFilter changes (fallback)\r\n  useEffect(() => {\r\n    const url = new URL(window.location.href);\r\n    url.searchParams.set('tab', printerFilter);\r\n    window.history.replaceState({}, '', url.toString());\r\n  }, [printerFilter]);\r\n\r\n  // Listen for browser back/forward buttons\r\n  useEffect(() => {\r\n    const handlePopState = () => {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const tab = urlParams.get('tab') as 'assigned' | 'available' | 'catalog' | 'inventory';\r\n      if (tab && tab !== printerFilter) {\r\n        setPrinterFilter(tab);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('popstate', handlePopState);\r\n    return () => window.removeEventListener('popstate', handlePopState);\r\n  }, [printerFilter]);\r\n\r\n  // Optimized queries - Catalog and Available always run, Assigned remains conditional\r\n  const { data: assignedAssignments = [], isLoading: assignedLoading } = useAssignedPrinters(printerFilter === 'assigned');\r\n  const { data: inventoryAssignments = [], isLoading: inventoryLoading } = useAllPrinters(true);\r\n  const { data: catalogPrinters = [], isLoading: catalogLoading } = useCatalogPrinters(true);\r\n  const { data: availableAssignments = [], isLoading: availableLoading } = useAvailablePrinters(true);\r\n\r\n  const printersLoading = assignedLoading || inventoryLoading || availableLoading || catalogLoading;\r\n\r\n  const refreshPrinters = useCallback(async () => {\r\n    console.log('🔄 Refreshing printer data...');\r\n    // Clear dataService cache first\r\n    dataService.clearCache();\r\n    // Invalidate all printer-related queries to trigger refetch\r\n    await queryClient.invalidateQueries({ queryKey: ['assigned-assignments'] });\r\n    await queryClient.invalidateQueries({ queryKey: ['available-assignments'] });\r\n    await queryClient.invalidateQueries({ queryKey: ['all-assignments'] });\r\n    await queryClient.invalidateQueries({ queryKey: ['catalog-printers'] });\r\n    await queryClient.invalidateQueries({ queryKey: ['optimized-printer-data'] });\r\n    console.log('✅ Printer data refreshed');\r\n  }, [queryClient]);\r\n\r\n  // Set up real-time subscription\r\n  useRealtimeSubscription({ printerFilter, onRefresh: refreshPrinters });\r\n\r\n  // Force refresh when switching to Catalog, Available, or Inventory tabs\r\n  useEffect(() => {\r\n    if (printerFilter === 'catalog' || printerFilter === 'available' || printerFilter === 'inventory') {\r\n      console.log(`🔄 Switching to ${printerFilter} tab, refreshing data...`);\r\n      refreshPrinters();\r\n    }\r\n  }, [printerFilter, refreshPrinters]);\r\n\r\n  // Helper function to filter printers based on client access\r\n  const filterPrintersByClientAccess = useCallback((printers: any[]) => {\r\n    // If user is not a client, return all printers\r\n    if (userProfile?.role !== 'client' || !clientAccess) {\r\n      return printers;\r\n    }\r\n\r\n    // Filter based on printer filter type\r\n    switch (printerFilter) {\r\n      case 'assigned':\r\n        return printers.filter(printer => {\r\n          return printer.printer_assignments?.some((assignment: any) => \r\n            assignment.client_id && clientAccess.includes(assignment.client_id)\r\n          );\r\n        });\r\n\r\n      case 'available':\r\n        return printers.filter(printer => {\r\n          if (!printer.printer_assignments || printer.printer_assignments.length === 0) {\r\n            return true; // Show unassigned printers\r\n          }\r\n          return printer.printer_assignments.some((assignment: any) => \r\n            !assignment.client_id || clientAccess.includes(assignment.client_id)\r\n          );\r\n        });\r\n\r\n      case 'inventory':\r\n        return printers.filter(assignment => {\r\n          if (!assignment.client_id) {\r\n            return true; // Show unassigned inventory\r\n          }\r\n          return clientAccess.includes(assignment.client_id);\r\n        });\r\n\r\n      case 'catalog':\r\n        return printers; // Show all catalog items\r\n\r\n      default:\r\n        return printers;\r\n    }\r\n  }, [userProfile?.role, clientAccess, printerFilter]);\r\n\r\n  // Get printers based on filter - MODIFIED to include client access filtering\r\n  const printers = useMemo(() => {\r\n    let rawPrinters;\r\n    switch (printerFilter) {\r\n      case 'assigned':\r\n        rawPrinters = assignedAssignments;\r\n        break;\r\n      case 'available':\r\n        rawPrinters = availableAssignments;\r\n        break;\r\n      case 'inventory':\r\n        rawPrinters = inventoryAssignments;\r\n        break;\r\n      case 'catalog':\r\n        rawPrinters = catalogPrinters;\r\n        break;\r\n      default:\r\n        rawPrinters = [];\r\n    }\r\n\r\n    // Apply client access filtering\r\n    return filterPrintersByClientAccess(rawPrinters);\r\n  }, [printerFilter, assignedAssignments, availableAssignments, inventoryAssignments, catalogPrinters, filterPrintersByClientAccess]);\r\n  \r\n  // Memoized filtered printers to prevent unnecessary recalculations\r\n  const displayPrinters = useMemo(() => {\r\n    return filteredData.length > 0 ? filteredData : printers;\r\n  }, [filteredData, printers]);\r\n\r\n  // Filter logic for Inventory tab\r\n  const filteredInventoryAssignments = useMemo(() => {\r\n    if (printerFilter !== 'inventory') return inventoryAssignments;\r\n    \r\n    return inventoryAssignments.filter(a => {\r\n      // If \"All\" is checked, show everything\r\n      if (showAll) return true;\r\n      // If \"Available\" is checked, show available printers\r\n      if (showAvailable && a.status === 'available') return true;\r\n      // If \"Assigned\" is checked, show assigned printers\r\n      if (showAssigned && ['active', 'inactive', 'undeployed'].includes(a.status) && a.client_id != null && a.client_id !== '') return true;\r\n      // If \"Client Owned\" is checked, show client-owned printers\r\n      if (showClientOwned && a.is_client_owned) return true;\r\n      // If none are checked, show only inventory with no client assignment and not available\r\n      if (!showAll && !showAvailable && !showAssigned && !showClientOwned) {\r\n        return a.client_id == null && a.status !== 'available';\r\n      }\r\n      return false;\r\n    });\r\n  }, [inventoryAssignments, showAll, showAvailable, showAssigned, showClientOwned, printerFilter]);\r\n\r\n  // Optimized handlers with useCallback\r\n  const handlePrinterSelected = useCallback((printerId: string, printerName: string) => {\r\n    setSelectedPrinter({ id: printerId, name: printerName });\r\n    setShowPrinterSelection(false);\r\n    setShowAssignToClient(true);\r\n  }, []);\r\n\r\n  const handleAssignmentComplete = useCallback(() => {\r\n    setShowAssignToClient(false);\r\n    setSelectedPrinter(null);\r\n    refreshPrinters();\r\n  }, [refreshPrinters]);\r\n\r\n  const handlePrinterAdded = useCallback(() => {\r\n    setShowAddPrinter(false);\r\n    refreshPrinters();\r\n  }, [refreshPrinters]);\r\n\r\n  const handleFilteredDataChange = useCallback((data: any[]) => {\r\n    setFilteredData(data);\r\n  }, []);\r\n\r\n  const handleEditAssignment = useCallback((printer: any) => {\r\n    setSelectedPrinterForAssignment(printer);\r\n    setShowEditAssignmentModal(true);\r\n  }, []);\r\n\r\n  const handleAssignmentUpdated = useCallback(async () => {\r\n    console.log('🔄 Assignment updated, refreshing data...');\r\n    try {\r\n      await refreshPrinters();\r\n      setShowEditAssignmentModal(false);\r\n      setSelectedPrinterForAssignment(null);\r\n    } catch (error) {\r\n      console.error('Error refreshing data:', error);\r\n    }\r\n  }, [refreshPrinters]);\r\n\r\n  const handleOpenAssignModal = () => setShowAssignModal(true);\r\n  const handleCloseAddToInventoryModal = () => setShowAddToInventoryModal(false);\r\n  const handleOpenAddToInventoryModal = () => setShowAddToInventoryModal(true);\r\n  const handleOpenCatalogAddPrinterModal = () => setShowCatalogAddPrinterModal(true);\r\n  const handleCloseCatalogAddPrinterModal = () => setShowCatalogAddPrinterModal(false);\r\n\r\n  // Clear filteredData when printerFilter changes or when searchQuery is cleared\r\n  useEffect(() => {\r\n    if (!searchQuery.trim()) {\r\n      setFilteredData([]);\r\n    }\r\n  }, [printerFilter, searchQuery]);\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <div className=\"min-h-screen flex flex-col bg-gradient-to-br from-blue-50 to-indigo-50 safe-area-inset-top\">\r\n        {/* Mobile-First Header - Fixed and compact */}\r\n        <header className=\"sticky top-0 z-20 bg-blue-100/95 backdrop-blur-sm border-b border-blue-200 shadow-sm safe-area-inset-top\">\r\n          <div className=\"flex items-center justify-between px-3 py-2 min-h-[44px]\">\r\n            <div className=\"flex items-center gap-2 flex-1\">\r\n              <Printer className=\"w-5 h-5 text-blue-500 flex-shrink-0\" />\r\n            </div>\r\n            {/* Catalog Button on the right - Only show if user is NOT a client */}\r\n            {userProfile?.role !== 'client' && (\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className=\"h-10 w-20 flex-shrink-0 min-touch-target\"\r\n                onClick={() => setPrinterFilter('catalog')}\r\n                aria-label=\"Catalog\"\r\n              >\r\n                Catalog\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </header>\r\n\r\n        {/* Main Content - Mobile optimized scrolling */}\r\n        <div className=\"flex-1 overflow-y-auto overscroll-contain pb-safe\">\r\n          <div className=\"py-2 space-y-3 w-full max-w-full p-0 m-0\">\r\n            {/* Compact Database Summary */}\r\n            <div className=\"bg-white/80 backdrop-blur-sm rounded-lg border border-blue-100 p-3\">\r\n              <DatabaseSummary />\r\n            </div>\r\n\r\n            {/* Help Banner - Collapsible on mobile */}\r\n            <PrinterDashboardHelpBanner printerFilter={printerFilter} />\r\n\r\n            {/* Main Content */}\r\n            <main className=\"pb-4\">\r\n              {printerFilter === 'inventory' && (\r\n                <div\r\n                  className=\"w-full z-10 sticky top-[44px] sm:static mb-3\"\r\n                  style={{\r\n                    // top offset matches the header height (44px)\r\n                    // z-index ensures it stays above content but below modals\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"\r\n                      bg-white/90 border border-blue-100 rounded-xl p-3\r\n                      flex flex-col gap-2\r\n                      sm:flex-row sm:gap-4 sm:items-center\r\n                      shadow-sm\r\n                    \"\r\n                    aria-label=\"Inventory Filters\"\r\n                  >\r\n                    <span className=\"text-xs font-semibold text-blue-700 mb-1 sm:mb-0\">Filters</span>\r\n                    <label className=\"flex items-center gap-2 text-sm\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={showAll}\r\n                        onChange={e => setShowAll(e.target.checked)}\r\n                        className=\"w-5 h-5 accent-blue-500\"\r\n                      />\r\n                      All\r\n                    </label>\r\n                    <label className=\"flex items-center gap-2 text-sm\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={showAvailable}\r\n                        onChange={e => setShowAvailable(e.target.checked)}\r\n                        className=\"w-5 h-5 accent-blue-500\"\r\n                      />\r\n                      Available\r\n                    </label>\r\n                    <label className=\"flex items-center gap-2 text-sm\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={showAssigned}\r\n                        onChange={e => setShowAssigned(e.target.checked)}\r\n                        className=\"w-5 h-5 accent-blue-500\"\r\n                      />\r\n                      Assigned\r\n                    </label>\r\n                    <label className=\"flex items-center gap-2 text-sm\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={showClientOwned}\r\n                        onChange={e => setShowClientOwned(e.target.checked)}\r\n                        className=\"w-5 h-5 accent-blue-500\"\r\n                      />\r\n                      Client Owned\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <PrinterTabContent \r\n                debug={debugMode} \r\n                isLoading={printersLoading} \r\n                filteredData={printerFilter === 'inventory' ? filteredInventoryAssignments : displayPrinters} \r\n                searchQuery={searchQuery} \r\n                onDataRefresh={refreshPrinters} \r\n                printerFilter={printerFilter} \r\n                onEditAssignment={handleEditAssignment} \r\n                onShowAssignModal={handleOpenAssignModal}\r\n                onShowAddToInventoryModal={handleOpenAddToInventoryModal}\r\n              />\r\n            </main>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Fixed Bottom Navigation */}\r\n        <div className=\"sticky bottom-0 z-30 w-full safe-area-inset-bottom\">\r\n          <PrinterDashboardNav\r\n            printerFilter={printerFilter}\r\n            setPrinterFilter={setPrinterFilterWithURL}\r\n            onFilteredDataChange={handleFilteredDataChange}\r\n            editAssignmentModal={showEditAssignmentModal && selectedPrinterForAssignment ? (\r\n              <div />\r\n            ) : null}\r\n          />\r\n        </div>\r\n\r\n        {/* Modals */}\r\n        <PrinterDashboardModals\r\n          showPrinterSelection={showPrinterSelection}\r\n          onClosePrinterSelection={() => setShowPrinterSelection(false)}\r\n          onPrinterSelected={handlePrinterSelected}\r\n          showAssignToClient={showAssignToClient}\r\n          onCloseAssignToClient={() => setShowAssignToClient(false)}\r\n          selectedPrinter={selectedPrinter}\r\n          onAssignmentComplete={handleAssignmentComplete}\r\n          showAddPrinter={showAddPrinter}\r\n          onCloseAddPrinter={() => setShowAddPrinter(false)}\r\n          onPrinterAdded={handlePrinterAdded}\r\n          showEditAssignmentModal={showEditAssignmentModal}\r\n          onCloseEditAssignmentModal={() => {\r\n            setShowEditAssignmentModal(false);\r\n            setSelectedPrinterForAssignment(null);\r\n          }}\r\n          selectedPrinterForAssignment={selectedPrinterForAssignment}\r\n          onAssignmentUpdated={handleAssignmentUpdated}\r\n        />\r\n        {showAssignModal && (\r\n          <AssignModal\r\n            isOpen={showAssignModal}\r\n            onClose={() => setShowAssignModal(false)}\r\n            onAssigned={() => setShowAssignModal(false)}\r\n          />\r\n        )}\r\n        {showAddToInventoryModal && (\r\n          <AddToInventoryModal\r\n            isOpen={showAddToInventoryModal}\r\n            onClose={handleCloseAddToInventoryModal}\r\n            onAdded={handleCloseAddToInventoryModal}\r\n          />\r\n        )}\r\n        {/* Only show floating + button if user is NOT a client */}\r\n        {userProfile?.role !== 'client' && \r\n          (printerFilter === 'inventory' || printerFilter === 'available' || printerFilter === 'assigned' || printerFilter === 'catalog') &&\r\n          !(showAssignModal || showAddToInventoryModal || showCatalogAddPrinterModal) && (\r\n            <button\r\n              className=\"fixed bottom-[80px] right-6 z-50 w-10 h-10 rounded-full bg-blue-600 hover:bg-blue-700 text-white shadow-2xl flex items-center justify-center text-3xl transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n              style={{ pointerEvents: 'auto' }}\r\n              aria-label={\r\n                printerFilter === 'assigned' ? 'Assign Printer' :\r\n                printerFilter === 'catalog' ? 'Add Printer to Catalog' :\r\n                'Add Printer'\r\n              }\r\n              onClick={\r\n                printerFilter === 'assigned' ? handleOpenAssignModal :\r\n                printerFilter === 'catalog' ? handleOpenCatalogAddPrinterModal :\r\n                handleOpenAddToInventoryModal\r\n              }\r\n            >\r\n              <span className=\"sr-only\">\r\n                {printerFilter === 'assigned' ? 'Assign Printer' :\r\n                  printerFilter === 'catalog' ? 'Add Printer to Catalog' :\r\n                  'Add Printer'}\r\n              </span>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4v16m8-8H4\" />\r\n              </svg>\r\n            </button>\r\n        )}\r\n        {showCatalogAddPrinterModal && (\r\n          <AddPrinterModal\r\n            isOpen={showCatalogAddPrinterModal}\r\n            onClose={handleCloseCatalogAddPrinterModal}\r\n            onPrinterAdded={handleCloseCatalogAddPrinterModal}\r\n          />\r\n        )}\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default PrinterDashboard;\r\n"],"names":["CirclePlus","createLucideIcon","ClipboardList","ExternalLink","Info","Layers","Palette","PenLine","Tag","Unlink","Wrench","getStatusIconAndColor","status","lastMaintenanceDate","lastDate","diffDays","jsx","CheckCircle","AlertCircle","Clock","AssignedToSection","printerId","user","userProfile","useAuth","assignments","setAssignments","useState","allowedClientIds","setAllowedClientIds","loading","setLoading","useEffect","supabase","data","row","fetchAssignments","useCallback","error","refreshAssignments","handleRefresh","channel","payload","jsxs","filteredAssignments","a","assignment","clientName","_a","deptLocation","dept","_b","loc","icon","statusLabel","badgeClass","textClass","displayString","UnassignPrinterModal","isOpen","onClose","onUnassigned","toast","useToast","step","setStep","selectedAssignment","setSelectedAssignment","selectedUnassignLevel","setSelectedUnassignLevel","setError","fetchingAssignments","setFetchingAssignments","printer","setPrinter","printerName","setPrinterName","printerDetails","setPrinterDetails","printerData","printerError","assignmentData","assignmentError","transformedData","handleAssignmentSelect","handleUnassignClick","level","handleConfirmUnassign","successMessage","printerService","e","handleBack","handleClose","handleRetry","getLocationDisplay","getConfirmationMessage","departmentName","locationName","User","X","Fragment","CustomLoading","Building2","_c","MapPin","_d","Loader2","TransferPrinterModal","clients","getDepartmentsByClient","onTransfer","toClientId","setToClientId","departments","setDepartments","toDepartmentId","setToDepartmentId","preservedDepartmentId","depts","d","_e","handleTransfer","ArrowRightLeft","_f","c","DetailRow","label","value","type","variant","renderValue","Badge","ViewPrinterModal","activeTab","setActiveTab","getStatusVariant","available","getTypeVariant","Dialog","open","DialogContent","DialogHeader","PrinterIcon","DialogTitle","Tabs","TabsList","TabsTrigger","TabsContent","Card","CardContent","Button","ClientDepartmentSelectionModal","currentClientId","currentDepartmentId","onSave","setClients","selectedClientId","setSelectedClientId","selectedDepartmentId","setSelectedDepartmentId","clientService","handleSave","client","EditAssignmentModal","onAssignmentUpdated","isLoading","selectedAssignmentId","setSelectedAssignmentId","fetchingData","setFetchingData","clientId","setClientId","departmentId","setDepartmentId","serialNumber","setSerialNumber","originalSerialNumber","setOriginalSerialNumber","isSerialNumberEditable","setIsSerialNumberEditable","isClientOwned","setIsClientOwned","originalClientId","setOriginalClientId","originalDepartmentId","setOriginalDepartmentId","showClientDeptModal","setShowClientDeptModal","selectedDepartmentName","setSelectedDepartmentName","fetchLatestAssignmentData","transformedAssignments","deptList","newClientId","newDepartmentId","newSerialNumber","assignmentId","getClientName","getDepartmentName","department","getCurrentDepartmentLocationDisplay","updateData","updateError","originalClientName","newClientName","originalDeptName","newDeptName","hasChanges","handleClientDeptSave","deptName","found","Edit3","Switch","Label","Input","MAINTENANCE_STATUSES","AssignmentMaintenanceStatusForm","onSuccess","onError","setStatus","details","setDetails","handleUpdate","insertError","err","s","UpdateMaintenanceStatusModal","onStatusUpdated","handleSuccess","PrinterDashboardCard","onEdit","onDelete","onEditAssignment","debug","showUnassignModal","setShowUnassignModal","showTransferModal","setShowTransferModal","showViewModal","setShowViewModal","showEditAssignmentModal","setShowEditAssignmentModal","showMaintenanceModal","setShowMaintenanceModal","useNavigate","firstCompatibleProduct","setFirstCompatibleProduct","products","productService","acc","handleDeleteClick","handleTransferClick","handleEditAssignmentClick","assignmentCount","Edit","Trash2","Eye","CompatibleProducts","PrinterSpecificationsForm","formData","onInputChange","paperSizes","selectedPaperSizes","size","handlePaperSizeChange","paperSize","checked","updatedSizes","sizesString","Checkbox","EditPrinterFormModal","onPrinterUpdated","setFormData","imageFile","setImageFile","imagePreview","setImagePreview","fetching","setFetching","uploading","setUploading","errorMsg","setErrorMsg","React","handleImageChange","file","fileExt","fileName","uuidv4","urlData","publicUrl","prev","handleRemoveImage","handleInputChange","field","handleSubmit","Upload","Textarea","usePrinterActions","setIsLoading","errorMessage","getErrorMessage","updates","DeleteAssignmentConfirmDialog","onDeleted","itemName","handleConfirm","assetService","AlertTriangle","SelectWithAddNew","placeholder","options","onValueChange","newItemValue","onNewItemChange","showNewItemInput","onShowNewItemInput","newItemPlaceholder","disabled","handleSelectChange","selectedValue","Select","SelectTrigger","SelectValue","SelectContent","option","SelectItem","Plus","AssignPrinterModal","onAssignmentComplete","dataLoading","setDataLoading","departmentLocations","setDepartmentLocations","selectedDepartmentLocationId","setSelectedDepartmentLocationId","newDepartmentLocationName","setNewDepartmentLocationName","showNewDepartmentLocationInput","setShowNewDepartmentLocationInput","setNewClientName","showNewClientInput","setShowNewClientInput","fetchClients","fetchDepartmentLocations","dl","createClientIfNotExists","name","existingClient","newClient","handleAssign","departmentLocationId","canAssign","UserPlus","EditAssignmentSerialModal","onSerialUpdated","DialogFooter","AssignmentSelectionModal","onAssignmentSelected","title","description","handleContinue","AvailablePrinterCard","onEditVisibility","visibleToClients","setVisibleToClients","showEditModal","setShowEditModal","showDeleteAssignmentDialog","setShowDeleteAssignmentDialog","showAssignModal","setShowAssignModal","allClients","setAllClients","showEditAssignmentSerialModal","setShowEditAssignmentSerialModal","setAssignmentId","assignmentIdToDelete","setAssignmentIdToDelete","showAssignmentSelectionModal","setShowAssignmentSelectionModal","selectionMode","setSelectionMode","updatePrinter","deletePrinter","deleting","setDeleting","showDeleteConfirmDialog","setShowDeleteConfirmDialog","selectedAssignmentToDelete","setSelectedAssignmentToDelete","loadVisibleClients","loadAllClients","v","handleDeleteRecord","handleDeletePrinter","handlePrinterUpdated","handleAssignPrinter","handleAssignmentComplete","handleEditAssignment","handleDeleteAssignmentSuccess","handleSerialUpdated","handleAssignmentSelected","getSelectionModalProps","DialogDescription","DialogClose","AddToInventoryModal","onAdded","DeletePrinterModal","isDeleting","setIsDeleting","handleDeleteConfirm","CompatibleProductUpdateModal","onUpdated","setProducts","selectedProducts","setSelectedProducts","searchTerm","setSearchTerm","saving","setSaving","loadProducts","loadCurrentCompatibleProducts","currentProductIds","item","handleProductToggle","productId","newSelected","deleteError","insertData","refreshEvent","generalRefreshEvent","filteredProducts","product","Package","Search","ScrollArea","PrinterCatalogCard","showAddToInventory","setShowAddToInventory","showDeleteModal","setShowDeleteModal","showCompatibleProductUpdate","setShowCompatibleProductUpdate","handleDelete","handleDeleteSuccess","PlusCircle","AdminEmptyState","searchQuery","onAddNew","printerFilter","config","ADMIN_DASHBOARD_TABS","Printer","Users","Building","Icon","HISTORY_TYPES","PrinterHistoryModal","selectedType","setSelectedType","timeline","setTimeline","assignmentIds","lastServiceDates","maint","assign","general","events","date","b","filtered","rec","idx","DetailItem","isBadge","badgeVariant","PrinterDetailsModal","inventoryRecords","useIsMobile","getStatusBadge","FileText","DollarSign","Calendar","record","getStatusLabel","AllPrintersCard","onDataRefresh","showHistoryModal","setShowHistoryModal","showPrinterDetails","setShowPrinterDetails","showDeleteRecordDialog","setShowDeleteRecordDialog","updatingStatus","setUpdatingStatus","enrichedPrinter","setEnrichedPrinter","isMounted","handleMakeAvailable","handleDeleteAssignment","History","PrinterDashboardTab","filteredData","onItemClick","AssignedPrinterCard","PrinterTabContent","onShowAssignModal","onShowAddToInventoryModal","navigate","showAddPrinter","setShowAddPrinter","selectedPrinter","setSelectedPrinter","handleItemClick","handleAddNew","handleEdit","handleDeleteConfirmed","printerToDelete","dialogProps","AddPrinterModal","AlertDialog","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction","setSearchQuery","ownerType","setOwnerType","makeAvailable","setMakeAvailable","queryClient","useQueryClient","showClientModal","setShowClientModal","selectedClient","setSelectedClient","showSerialPrompt","setShowSerialPrompt","printers","useQuery","filteredPrinters","handlePrinterSelect","handleClientOwnedToggle","handleClientSelected","dataService","ArrowRight","Settings","ClientListModal","ArrowLeft","Check","MobileNavLayout","leftSection","centerSection","rightSection","className","FILTERS","Monitor","FilterButtons","setPrinterFilter","MobileFilterButtons","filter","NavigationButton","count","isActive","onClick","show","isInitial","cn","PrinterDashboardNav","onFilteredDataChange","editAssignmentModal","selectedProduct","setSelectedProduct","showProductDetails","setShowProductDetails","showPrinterSelection","setShowPrinterSelection","showAssignToClient","setShowAssignToClient","location","useLocation","handleCloseProductDetails","handleAddPrinter","handleAddToInventory","handleInventoryAdded","AddButtonNavigation","ProductDetailsModal","AssignModal","PrinterDashboardHelpBanner","helpText","onPrinterAdded","supportedProducts","setSupportedProducts","productInput","setProductInput","availableProducts","setAvailableProducts","showProductDropdown","setShowProductDropdown","nameExists","setNameExists","colorOptions","loadAvailableProducts","checkPrinterNameExists","exactMatch","p","reader","finalImageUrl","newPrinter","productIds","handleChange","handleColorChange","handleProductInputChange","addProduct","removeProduct","handleProductInputKeyPress","trimmedValue","PrinterDashboardModals","onClosePrinterSelection","onPrinterSelected","onCloseAssignToClient","onCloseAddPrinter","onCloseEditAssignmentModal","selectedPrinterForAssignment","_MemoryManager","__publicField","megabytes","usedMemory","keysToCheck","maxAge","key","timestamp","memInfo","MemoryManager","memoryManager","useOptimizedPrinterData","enabled","cached","denormalizedData","query","normalized","useBackgroundDataSync","interval","useAssignedPrinters","useAllPrinters","useCatalogPrinters","useAvailablePrinters","useRealtimeSubscription","onRefresh","printerSubscription","assignmentSubscription","PrinterDashboard","userProfileLoading","setFilteredData","debugMode","setDebugMode","setSelectedPrinterForAssignment","showAll","setShowAll","showAvailable","setShowAvailable","showAssigned","setShowAssigned","showClientOwned","setShowClientOwned","showAddToInventoryModal","setShowAddToInventoryModal","showCatalogAddPrinterModal","setShowCatalogAddPrinterModal","clientAccess","access","setPrinterFilterWithURL","url","handlePopState","tab","assignedAssignments","assignedLoading","inventoryAssignments","inventoryLoading","catalogPrinters","catalogLoading","availableAssignments","availableLoading","printersLoading","refreshPrinters","filterPrintersByClientAccess","useMemo","rawPrinters","displayPrinters","filteredInventoryAssignments","handlePrinterSelected","handlePrinterAdded","handleFilteredDataChange","handleAssignmentUpdated","handleOpenAssignModal","handleCloseAddToInventoryModal","handleOpenAddToInventoryModal","handleOpenCatalogAddPrinterModal","handleCloseCatalogAddPrinterModal","ErrorBoundary","DatabaseSummary"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}