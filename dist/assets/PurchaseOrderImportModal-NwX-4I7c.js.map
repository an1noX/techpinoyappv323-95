{"version":3,"file":"PurchaseOrderImportModal-NwX-4I7c.js","sources":["../../src/components/sales/PurchaseOrderImportModal.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Package, CheckCircle, Clock } from 'lucide-react';\r\nimport { TransactionRecord } from '@/types/sales';\r\n\r\ninterface GroupedTransaction {\r\n  poNumber: string;\r\n  transactions: TransactionRecord[];\r\n  totalAmount: number;\r\n  itemCount: number;\r\n  isImported: boolean;\r\n  supplierName: string;\r\n}\r\n\r\ninterface PurchaseOrderImportModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  groupedTransactions: GroupedTransaction[];\r\n  onImport: (selectedPONumbers: string[]) => Promise<void>;\r\n  isLoading: boolean;\r\n}\r\n\r\nexport const PurchaseOrderImportModal: React.FC<PurchaseOrderImportModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  groupedTransactions,\r\n  onImport,\r\n  isLoading\r\n}) => {\r\n  const [selectedPOs, setSelectedPOs] = useState<Set<string>>(new Set());\r\n\r\n  const handleSelectAll = () => {\r\n    const availablePOs = groupedTransactions\r\n      .filter(group => !group.isImported)\r\n      .map(group => group.poNumber);\r\n    \r\n    if (selectedPOs.size === availablePOs.length) {\r\n      setSelectedPOs(new Set());\r\n    } else {\r\n      setSelectedPOs(new Set(availablePOs));\r\n    }\r\n  };\r\n\r\n  const handleSelectPO = (poNumber: string, isImported: boolean) => {\r\n    if (isImported) return;\r\n    \r\n    const newSelected = new Set(selectedPOs);\r\n    if (newSelected.has(poNumber)) {\r\n      newSelected.delete(poNumber);\r\n    } else {\r\n      newSelected.add(poNumber);\r\n    }\r\n    setSelectedPOs(newSelected);\r\n  };\r\n\r\n  const handleImport = async () => {\r\n    if (selectedPOs.size > 0) {\r\n      await onImport(Array.from(selectedPOs));\r\n      setSelectedPOs(new Set());\r\n    }\r\n  };\r\n\r\n  const availableCount = groupedTransactions.filter(group => !group.isImported).length;\r\n  const importedCount = groupedTransactions.filter(group => group.isImported).length;\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-hidden flex flex-col\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center gap-2\">\r\n            <Package className=\"h-5 w-5\" />\r\n            Import Purchase Orders from Transaction Records\r\n          </DialogTitle>\r\n          <div className=\"flex gap-4 text-sm text-muted-foreground\">\r\n            <span>Available: {availableCount}</span>\r\n            <span>Already Imported: {importedCount}</span>\r\n            <span>Selected: {selectedPOs.size}</span>\r\n          </div>\r\n        </DialogHeader>\r\n\r\n        <div className=\"flex-1 overflow-hidden flex flex-col\">\r\n          <div className=\"flex items-center justify-between py-2 border-b\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <Checkbox\r\n                checked={selectedPOs.size === availableCount && availableCount > 0}\r\n                onCheckedChange={handleSelectAll}\r\n                disabled={availableCount === 0}\r\n              />\r\n              <span className=\"text-sm font-medium\">Select All Available</span>\r\n            </div>\r\n            <Button\r\n              onClick={handleImport}\r\n              disabled={selectedPOs.size === 0 || isLoading}\r\n              className=\"ml-auto\"\r\n            >\r\n              {isLoading ? 'Importing...' : `Import Selected (${selectedPOs.size})`}\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"flex-1 overflow-y-auto space-y-2 p-2\">\r\n            {groupedTransactions.map((group) => (\r\n              <div\r\n                key={group.poNumber}\r\n                className={`border rounded-lg p-4 transition-colors ${\r\n                  group.isImported \r\n                    ? 'bg-muted/50 border-muted' \r\n                    : selectedPOs.has(group.poNumber)\r\n                    ? 'bg-primary/5 border-primary'\r\n                    : 'hover:bg-muted/30'\r\n                }`}\r\n              >\r\n                <div className=\"flex items-start gap-3\">\r\n                  <Checkbox\r\n                    checked={selectedPOs.has(group.poNumber)}\r\n                    onCheckedChange={() => handleSelectPO(group.poNumber, group.isImported)}\r\n                    disabled={group.isImported}\r\n                    className=\"mt-1\"\r\n                  />\r\n                  \r\n                  <div className=\"flex-1 space-y-2\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <h3 className=\"font-medium\">PO: {group.poNumber}</h3>\r\n                        {group.isImported ? (\r\n                          <Badge variant=\"secondary\" className=\"text-xs\">\r\n                            <CheckCircle className=\"h-3 w-3 mr-1\" />\r\n                            Imported\r\n                          </Badge>\r\n                        ) : (\r\n                          <Badge variant=\"outline\" className=\"text-xs\">\r\n                            <Clock className=\"h-3 w-3 mr-1\" />\r\n                            Available\r\n                          </Badge>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <div className=\"font-medium\">₱{group.totalAmount.toLocaleString()}</div>\r\n                        <div className=\"text-xs text-muted-foreground\">{group.itemCount} items</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                      <div>\r\n                        <span className=\"text-muted-foreground\">Supplier: </span>\r\n                        <span>{group.supplierName}</span>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-muted-foreground\">Transactions: </span>\r\n                        <span>{group.transactions.length}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-1\">\r\n                      <div className=\"text-xs text-muted-foreground\">Items:</div>\r\n                      <div className=\"grid grid-cols-1 gap-1 text-xs\">\r\n                        {group.transactions.slice(0, 3).map((transaction, index) => (\r\n                          <div key={index} className=\"flex justify-between\">\r\n                            <span>{transaction.model}</span>\r\n                            <span>{transaction.quantity} × ₱{transaction.unit_price}</span>\r\n                          </div>\r\n                        ))}\r\n                        {group.transactions.length > 3 && (\r\n                          <div className=\"text-muted-foreground\">\r\n                            +{group.transactions.length - 3} more items...\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-end gap-2 pt-4 border-t\">\r\n          <Button variant=\"outline\" onClick={onClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleImport}\r\n            disabled={selectedPOs.size === 0 || isLoading}\r\n          >\r\n            {isLoading ? 'Importing...' : `Import ${selectedPOs.size} Purchase Orders`}\r\n          </Button>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};"],"names":["PurchaseOrderImportModal","isOpen","onClose","groupedTransactions","onImport","isLoading","selectedPOs","setSelectedPOs","useState","handleSelectAll","availablePOs","group","handleSelectPO","poNumber","isImported","newSelected","handleImport","availableCount","importedCount","jsx","Dialog","jsxs","DialogContent","DialogHeader","DialogTitle","Package","Checkbox","Button","Badge","CheckCircle","Clock","transaction","index"],"mappings":"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"}