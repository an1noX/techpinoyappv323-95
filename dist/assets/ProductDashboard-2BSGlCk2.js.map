{"version":3,"mappings":"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","names":["categoryService","data","error","supabase","item","category","useCategories","categories","setCategories","useState","loading","setLoading","useEffect","categoriesData","AddProductModal","isOpen","onClose","onProductAdded","searchTerm","formData","setFormData","errors","setErrors","isAddingNewCategory","setIsAddingNewCategory","newCategoryName","setNewCategoryName","toast","useToast","categoriesLoading","handleSubmit","e","newErrors","finalCategory","printerNames","p","createdProductIds","newProduct","productService","printerName","printer","printerService","linkProductToPrinter","color","_a","handleChange","field","value","prev","newData","handleColorChange","colors","handleCategorySelect","React","productId","printerId","jsxs","jsx","Package","X","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Plus","ColorSelector","Label","Input","ColorIndicator","size","colorClasses","sizeClasses","bgClass","ProductVariantSelectionModal","productGroup","onProductSelect","action","title","description","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","product","Button","Edit","Trash2","DialogFooter","AdminProductSelectionModal","onProductsSelected","allProducts","initialSelectedProduct","selectedProducts","setSelectedProducts","setSearchTerm","filteredProducts","handleToggleProduct","handleConfirm","Search","ScrollArea","Checkbox","RADIO_NAME","createRadioContext","createRadioScope","createContextScope","RadioProvider","useRadioContext","Radio","React.forwardRef","props","forwardedRef","__scopeRadio","name","checked","required","disabled","onCheck","form","radioProps","button","setButton","React.useState","composedRefs","useComposedRefs","node","hasConsumerStoppedPropagationRef","React.useRef","isFormControl","Primitive","getState","composeEventHandlers","event","BubbleInput","INDICATOR_NAME","RadioIndicator","forceMount","indicatorProps","context","Presence","control","bubbles","inputProps","ref","prevChecked","usePrevious","controlSize","useSize","React.useEffect","input","inputProto","setChecked","ARROW_KEYS","RADIO_GROUP_NAME","createRadioGroupContext","createRadioGroupScope","createContextScope2","createRovingFocusGroupScope","useRovingFocusGroupScope","useRadioScope","RadioGroupProvider","useRadioGroupContext","RadioGroup","React2.forwardRef","__scopeRadioGroup","defaultValue","valueProp","orientation","dir","loop","onValueChange","groupProps","rovingFocusGroupScope","direction","useDirection","setValue","useControllableState","jsx2","RovingFocusGroup.Root","Primitive2","ITEM_NAME","RadioGroupItem","itemProps","isDisabled","radioScope","React2.useRef","useComposedRefs2","isArrowKeyPressedRef","React2.useEffect","handleKeyDown","handleKeyUp","RovingFocusGroup.Item","composeEventHandlers2","INDICATOR_NAME2","RadioGroupIndicator","Root2","Item2","Indicator","className","RadioGroupPrimitive.Root","cn","RadioGroupPrimitive.Item","RadioGroupPrimitive.Indicator","Circle","AdminMergeProductsModal","products","onMergeComplete","primaryProductId","setPrimaryProductId","isLoading","setIsLoading","summary","setSummary","isFetchingSummary","setIsFetchingSummary","fetchMergeSummary","summaryData","otherProducts","transactions","suppliers","clients","printers","handleMerge","primaryProduct","mergedAlias","updatedAlias","Loader2","Alert","AlertDescription","PriceManagementModal","type","entityName","currentPrice","productName","onPriceUpdate","priceHistory","newPrice","setNewPrice","note","setNote","handleUpdatePrice","priceValue","sortedHistory","Tabs","TabsList","TabsTrigger","TabsContent","Card","CardHeader","CardTitle","CardContent","formatPHP","Save","Calendar","entry","index","previousEntry","isIncrease","isDecrease","priceDiff","TrendingUp","TrendingDown","Badge","supplierService","supplierData","id","AddSupplierClientModal","onSuccess","selectedEntityId","setSelectedEntityId","price","setPrice","marginPercentage","setMarginPercentage","showNewEntityForm","setShowNewEntityForm","newEntityName","setNewEntityName","newEntityEmail","setNewEntityEmail","newEntityPhone","setNewEntityPhone","entities","setEntities","loadEntities","resetForm","clientService","__vitePreload","marginValue","_b","Fragment","entity","PriceCheckModal","searchQuery","setSearchQuery","setProducts","productsWithPricing","setProductsWithPricing","priceManagementModal","setPriceManagementModal","addPricingModal","setAddPricingModal","debounceTimer","results","productsWithPricingData","withSuppliers","withClients","handleClose","handleSupplierClick","supplierRelation","handleClientClick","clientRelation","handleAddSupplierPrice","handleAddClientPrice","handlePriceUpdate","handleAddPricingSuccess","getPriceTrend","trends","TrendIcon","trend","Minus","DollarSign","groupProductsBySimilarSku","groups","baseSku","groupKey","groupName","ceMatch","fetchProductDepartments","pc","_c","_d","ProductsTab","onAddProduct","onEditProduct","onDeleteProduct","onRefresh","showAddModal","setShowAddModal","showEditModal","setShowEditModal","showDeleteDialog","setShowDeleteDialog","selectedProduct","setSelectedProduct","selectedProductGroup","setSelectedProductGroup","showVariantSelector","setShowVariantSelector","variantAction","setVariantAction","showMergeSelection","setShowMergeSelection","productsToMerge","setProductsToMerge","showMergeConfirm","setShowMergeConfirm","productToPreselect","setProductToPreselect","groupedProductsWithRelations","setGroupedProductsWithRelations","showPriceCheck","setShowPriceCheck","localLoading","setLocalLoading","allGroupedProducts","enrichedGroups","group","allPrinters","allDepartments","departments","uniquePrinters","idx","arr","x","uniqueDepartments","d","filteredGroupedProducts","term","handleEditProduct","handleDeleteProduct","handleViewDetails","handleVariantSelected","handleStartMergeFromEdit","handleMergeSelected","selected","handleMergeComplete","confirmDelete","handleProductAdded","handleProductUpdated","handleCloneProduct","handleMergeProduct","CustomLoading","ProductCard","AdminEditProductModal","AlertDialog","open","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction","ProductTabContent","filteredData","onDataRefresh","showAddProduct","setShowAddProduct","AddClientPricingForm","editData","setClients","fetchProducts","fetchClients","submitData","client","ClientPricingTab","clientPricing","setClientPricing","showAddForm","setShowAddForm","setEditData","getColorValue","colorName","colorMap","normalizedColor","fetchClientPricing","formattedData","filteredPricing","pricing","groupedByProduct","acc","key","getBestPrice","c","getWorstPrice","handleEdit","handleDelete","handleFormClose","handleFormSuccess","Users","productData","bestPrice","worstPrice","sortedClients","a","b","colorValue","isBest","isWorst","AlertDialogTrigger","sum","Sheet","SheetPrimitive.Root","SheetPortal","SheetPrimitive.Portal","SheetOverlay","SheetPrimitive.Overlay","sheetVariants","cva","SheetContent","side","children","SheetPrimitive.Content","SheetPrimitive.Close","SheetHeader","SheetTitle","SheetPrimitive.Title","SheetDescription","SheetPrimitive.Description","AddSupplierPricingForm","setSuppliers","fetchSuppliers","supplier","SupplierPricingTab","supplierPricing","setSupplierPricing","fetchSupplierPricing","s","Truck","sortedSuppliers","ProductDashboard","useIsMobile","useLocation","navigate","useNavigate","activeTab","setActiveTab","productsLoading","refetchProducts","useQuery","refreshProducts","useRefreshFunctions","ErrorBoundary","PullToRefresh","BottomMobileNavigation","tab"],"ignoreList":[6],"sources":["../../src/services/categoryService.ts","../../src/hooks/useCategories.ts","../../src/components/AddProductModal.tsx","../../src/components/ColorIndicator.tsx","../../src/components/admin-dashboard/components/ProductVariantSelectionModal.tsx","../../src/components/admin-dashboard/components/AdminProductSelectionModal.tsx","../../node_modules/@radix-ui/react-radio-group/dist/index.mjs","../../src/components/ui/radio-group.tsx","../../src/components/admin-dashboard/components/AdminMergeProductsModal.tsx","../../src/components/admin-dashboard/components/PriceManagementModal.tsx","../../src/services/supplierService.ts","../../src/components/admin-dashboard/components/AddSupplierClientModal.tsx","../../src/components/admin-dashboard/components/PriceCheckModal.tsx","../../src/components/admin-dashboard/components/ProductsTab.tsx","../../src/ProductDashboard/components/ProductTabContent.tsx","../../src/ProductDashboard/AddClientPricingForm.tsx","../../src/ProductDashboard/ClientPricingTab.tsx","../../src/components/ui/sheet.tsx","../../src/components/forms/AddSupplierPricingForm.tsx","../../src/ProductDashboard/SupplierPricingTab.tsx","../../src/ProductDashboard/ProductDashboard.tsx"],"sourcesContent":["\r\nimport { supabase } from '@/integrations/supabase/client';\r\n\r\nexport const categoryService = {\r\n  // Fetch all unique categories from products\r\n  async getCategories(): Promise<string[]> {\r\n    const { data, error } = await supabase\r\n      .from('products')\r\n      .select('category')\r\n      .order('category');\r\n    \r\n    if (error) {\r\n      console.error('Error fetching categories:', error);\r\n      throw error;\r\n    }\r\n    \r\n    // Extract unique categories\r\n    const uniqueCategories = [...new Set(data.map(item => item.category))];\r\n    return uniqueCategories.filter(category => category && category.trim() !== '');\r\n  }\r\n};\r\n","\r\nimport { useState, useEffect } from 'react';\r\nimport { categoryService } from '@/services/categoryService';\r\n\r\nexport const useCategories = () => {\r\n  const [categories, setCategories] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const categoriesData = await categoryService.getCategories();\r\n        setCategories(categoriesData);\r\n      } catch (error) {\r\n        console.error('Failed to fetch categories:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  return { categories, loading };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { X, Package, Plus } from 'lucide-react';\r\nimport { productService } from '@/services/productService';\r\nimport { printerService } from '@/services/printerService';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { useCategories } from '@/hooks/useCategories';\r\nimport ColorSelector from './ColorSelector';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Input } from '@/components/ui/input';\r\n\r\ninterface AddProductModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onProductAdded: (productId: string) => void;\r\n  searchTerm: string;\r\n}\r\n\r\nconst AddProductModal: React.FC<AddProductModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onProductAdded,\r\n  searchTerm,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    name: searchTerm,\r\n    sku: searchTerm,\r\n    category: '',\r\n    printers: '',\r\n    colors: [] as string[],\r\n    alias: '',\r\n  });\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [isAddingNewCategory, setIsAddingNewCategory] = useState(false);\r\n  const [newCategoryName, setNewCategoryName] = useState('');\r\n  const { toast } = useToast();\r\n  const { categories, loading: categoriesLoading } = useCategories();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    const newErrors: Record<string, string> = {};\r\n    \r\n    if (!formData.name.trim()) newErrors.name = 'Product name is required';\r\n    if (!formData.sku.trim()) newErrors.sku = 'SKU is required';\r\n    \r\n    let finalCategory = formData.category;\r\n    if (isAddingNewCategory) {\r\n      if (!newCategoryName.trim()) {\r\n        newErrors.category = 'New category name is required';\r\n      } else {\r\n        finalCategory = newCategoryName.trim();\r\n      }\r\n    } else if (!formData.category.trim()) {\r\n      newErrors.category = 'Category is required';\r\n    }\r\n    \r\n    if (!formData.colors || formData.colors.length === 0) {\r\n      newErrors.colors = 'Select at least one color';\r\n    }\r\n    \r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const printerNames = formData.printers\r\n        .split(',')\r\n        .map(p => p.trim())\r\n        .filter(Boolean);\r\n      const createdProductIds: string[] = [];\r\n      if (formData.colors.length === 1) {\r\n        const newProduct = await productService.createProduct({\r\n          name: formData.name.trim(),\r\n          sku: formData.sku.trim(),\r\n          category: finalCategory,\r\n          color: formData.colors[0],\r\n          alias: formData.alias.trim(),\r\n        });\r\n        createdProductIds.push(newProduct.id);\r\n        for (const printerName of printerNames) {\r\n          let printer = await printerService.findOrCreatePrinter(printerName);\r\n          await linkProductToPrinter(newProduct.id, printer.id);\r\n        }\r\n      } else {\r\n        for (const color of formData.colors) {\r\n          const newProduct = await productService.createProduct({\r\n            name: formData.name.trim(),\r\n            sku: formData.sku.trim(),\r\n            category: finalCategory,\r\n            color,\r\n            alias: formData.alias.trim(),\r\n          });\r\n          createdProductIds.push(newProduct.id);\r\n          for (const printerName of printerNames) {\r\n            let printer = await printerService.findOrCreatePrinter(printerName);\r\n            await linkProductToPrinter(newProduct.id, printer.id);\r\n          }\r\n        }\r\n      }\r\n      toast({\r\n        title: \"Success\",\r\n        description: formData.colors.length === 1 ? \"Product created successfully!\" : \"All product variants created and linked!\",\r\n      });\r\n      setFormData({ name: '', sku: '', category: '', printers: '', colors: [], alias: '' });\r\n      setNewCategoryName('');\r\n      setIsAddingNewCategory(false);\r\n      setErrors({});\r\n      onProductAdded(createdProductIds[0]);\r\n    } catch (error: any) {\r\n      console.error('Failed to create product:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.message?.includes('duplicate') \r\n          ? 'A product with this SKU already exists'\r\n          : \"Failed to create product. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field: string, value: string) => {\r\n    setFormData(prev => {\r\n      const newData = { ...prev, [field]: value };\r\n      \r\n      // Auto-fill SKU when Product Name changes, unless SKU was manually edited\r\n      if (field === 'name' && (prev.sku === prev.name || prev.sku === '')) {\r\n        newData.sku = value;\r\n      }\r\n      \r\n      return newData;\r\n    });\r\n    \r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const handleColorChange = (colors: string[] | string) => {\r\n    setFormData(prev => ({ ...prev, colors: Array.isArray(colors) ? colors : [colors] }));\r\n  };\r\n\r\n  const handleCategorySelect = (value: string) => {\r\n    if (value === 'add-new') {\r\n      setIsAddingNewCategory(true);\r\n      setFormData(prev => ({ ...prev, category: '' }));\r\n    } else {\r\n      setIsAddingNewCategory(false);\r\n      setNewCategoryName('');\r\n      setFormData(prev => ({ ...prev, category: value }));\r\n    }\r\n    \r\n    if (errors.category) {\r\n      setErrors(prev => ({ ...prev, category: '' }));\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isOpen) {\r\n      setFormData(prev => ({ \r\n        ...prev, \r\n        name: searchTerm,\r\n        sku: searchTerm\r\n      }));\r\n    }\r\n  }, [isOpen, searchTerm]);\r\n\r\n  // Helper to link product to printer\r\n  const linkProductToPrinter = async (productId: string, printerId: string) => {\r\n    await supabase.from('product_printers').insert({ product_id: productId, printer_id: printerId });\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-xl shadow-xl max-w-md w-full max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex items-center justify-between p-6 border-b\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"bg-blue-600 p-2 rounded-lg\">\r\n              <Package className=\"h-5 w-5 text-white\" />\r\n            </div>\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">Add New Product</h2>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors duration-200\"\r\n          >\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Product Name *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.name}\r\n              onChange={(e) => handleChange('name', e.target.value)}\r\n              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ${\r\n                errors.name ? 'border-red-300' : 'border-gray-300'\r\n              }`}\r\n              placeholder=\"Enter product name\"\r\n              disabled={loading}\r\n            />\r\n            {errors.name && <p className=\"text-red-600 text-sm mt-1\">{errors.name}</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              SKU *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.sku}\r\n              onChange={(e) => handleChange('sku', e.target.value)}\r\n              className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ${\r\n                errors.sku ? 'border-red-300' : 'border-gray-300'\r\n              }`}\r\n              placeholder=\"Enter SKU\"\r\n              disabled={loading}\r\n            />\r\n            {errors.sku && <p className=\"text-red-600 text-sm mt-1\">{errors.sku}</p>}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Category *\r\n            </label>\r\n            {!isAddingNewCategory ? (\r\n              <Select \r\n                value={formData.category} \r\n                onValueChange={handleCategorySelect}\r\n                disabled={loading}\r\n              >\r\n                <SelectTrigger className={`w-full ${errors.category ? 'border-red-300' : ''}`}>\r\n                  <SelectValue placeholder={categoriesLoading ? \"Loading categories...\" : \"Select a category\"} />\r\n                </SelectTrigger>\r\n                <SelectContent className=\"bg-white z-50\">\r\n                  {categories.map((category) => (\r\n                    <SelectItem key={category} value={category}>\r\n                      {category}\r\n                    </SelectItem>\r\n                  ))}\r\n                  <SelectItem value=\"add-new\" className=\"text-green-600 font-medium\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Plus className=\"h-4 w-4\" />\r\n                      <span>Add new category</span>\r\n                    </div>\r\n                  </SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            ) : (\r\n              <div className=\"space-y-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newCategoryName}\r\n                  onChange={(e) => {\r\n                    setNewCategoryName(e.target.value);\r\n                    if (errors.category) {\r\n                      setErrors(prev => ({ ...prev, category: '' }));\r\n                    }\r\n                  }}\r\n                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 ${\r\n                    errors.category ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                  placeholder=\"Enter new category name\"\r\n                  disabled={loading}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setIsAddingNewCategory(false);\r\n                    setNewCategoryName('');\r\n                    setErrors(prev => ({ ...prev, category: '' }));\r\n                  }}\r\n                  className=\"text-sm text-gray-600 hover:text-gray-800\"\r\n                  disabled={loading}\r\n                >\r\n                  Cancel - Select existing category\r\n                </button>\r\n              </div>\r\n            )}\r\n            {errors.category && <p className=\"text-red-600 text-sm mt-1\">{errors.category}</p>}\r\n          </div>\r\n\r\n          <ColorSelector\r\n            selectedColor={formData.colors.length === 1 ? formData.colors[0] : undefined}\r\n            selectedColors={formData.colors.length > 1 ? formData.colors : undefined}\r\n            onColorChange={handleColorChange}\r\n            size=\"lg\"\r\n            multiSelect={true}\r\n          />\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Supported Printers\r\n            </label>\r\n            <textarea\r\n              value={formData.printers}\r\n              onChange={(e) => handleChange('printers', e.target.value)}\r\n              rows={3}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200\"\r\n              placeholder=\"Enter supported printer models separated by commas (e.g., HP LaserJet Pro, Canon PIXMA, Epson EcoTank)\"\r\n              disabled={loading}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"alias\" className=\"text-sm font-medium\">Alias</Label>\r\n            <Input\r\n              id=\"alias\"\r\n              value={formData.alias}\r\n              onChange={(e) => handleChange('alias', e.target.value)}\r\n              className=\"w-full\"\r\n              placeholder=\"e.g., 128A\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex space-x-3 pt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200\"\r\n              disabled={loading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200 disabled:opacity-50\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Creating...' : 'Add Product'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProductModal;\r\n","\r\nimport React from 'react';\r\n\r\ninterface ColorIndicatorProps {\r\n  color?: string;\r\n  size?: 'sm' | 'md';\r\n}\r\n\r\nconst ColorIndicator: React.FC<ColorIndicatorProps> = ({ \r\n  color, \r\n  size = 'sm' \r\n}) => {\r\n  if (!color) return null;\r\n\r\n  const colorClasses = {\r\n    cyan: 'bg-cyan-500',\r\n    yellow: 'bg-yellow-500',\r\n    magenta: 'bg-fuchsia-500',\r\n    black: 'bg-black',\r\n  };\r\n\r\n  const sizeClasses = {\r\n    sm: 'w-3 h-3',\r\n    md: 'w-4 h-4',\r\n  };\r\n\r\n  const bgClass = colorClasses[color as keyof typeof colorClasses] || 'bg-gray-300';\r\n\r\n  return (\r\n    <div \r\n      className={`${sizeClasses[size]} ${bgClass} rounded border border-gray-300 inline-block`}\r\n      title={`Color: ${color}`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ColorIndicator;\r\n","import React from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogDescription,\r\n  DialogFooter,\r\n} from '@/components/ui/dialog';\r\nimport { Product } from '@/types/database';\r\nimport ColorIndicator from '@/components/ColorIndicator';\r\nimport { Package, Edit, Trash2 } from 'lucide-react';\r\n\r\ninterface ProductGroup {\r\n  baseSku: string;\r\n  allProducts: Product[];\r\n}\r\n\r\ninterface ProductVariantSelectionModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  productGroup: ProductGroup;\r\n  onProductSelect: (product: Product) => void;\r\n  action: 'edit' | 'delete' | null;\r\n}\r\n\r\nconst ProductVariantSelectionModal: React.FC<ProductVariantSelectionModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  productGroup,\r\n  onProductSelect,\r\n  action,\r\n}) => {\r\n  if (!isOpen) return null;\r\n\r\n  const title = action === 'edit' ? 'Select a Product to Edit' : 'Select a Product to Delete';\r\n  const description = `The SKU group ${productGroup.baseSku} contains multiple products. Please select the specific one you'd like to ${action}.`;\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-[525px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>{title}</DialogTitle>\r\n          <DialogDescription>{description}</DialogDescription>\r\n        </DialogHeader>\r\n        <div className=\"py-4 space-y-3 max-h-[60vh] overflow-y-auto\">\r\n          {productGroup.allProducts.map(product => (\r\n            <div\r\n              key={product.id}\r\n              className=\"flex items-center justify-between p-3 border rounded-lg hover:bg-gray-50\"\r\n            >\r\n              <div className=\"flex items-center gap-3\">\r\n                <Package className=\"h-5 w-5 text-gray-500\" />\r\n                <div>\r\n                  <div className=\"font-medium\">{product.name}</div>\r\n                  <div className=\"text-sm text-gray-500\">SKU: {product.sku}</div>\r\n                </div>\r\n                {product.color && <ColorIndicator color={product.color} />}\r\n              </div>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => onProductSelect(product)}\r\n                aria-label={`Select ${product.name}`}\r\n              >\r\n                {action === 'edit' ? (\r\n                  <Edit className=\"h-4 w-4 mr-2\" />\r\n                ) : (\r\n                  <Trash2 className=\"h-4 w-4 mr-2\" />\r\n                )}\r\n                {action === 'edit' ? 'Edit' : 'Delete'}\r\n              </Button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <DialogFooter>\r\n          <Button variant=\"ghost\" onClick={onClose}>\r\n            Cancel\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProductVariantSelectionModal; ","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Product } from '@/types/database';\r\nimport { productService } from '@/services/productService';\r\nimport { ScrollArea } from '@/components/ui/scroll-area';\r\nimport { Search } from 'lucide-react';\r\nimport ColorIndicator from '@/components/ColorIndicator';\r\n\r\ninterface AdminProductSelectionModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onProductsSelected: (products: Product[]) => void;\r\n  allProducts: Product[];\r\n  initialSelectedProduct?: Product;\r\n}\r\n\r\nconst AdminProductSelectionModal: React.FC<AdminProductSelectionModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onProductsSelected,\r\n  allProducts,\r\n  initialSelectedProduct,\r\n}) => {\r\n  const [selectedProducts, setSelectedProducts] = useState<Product[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (initialSelectedProduct && isOpen) {\r\n      setSelectedProducts([initialSelectedProduct]);\r\n    } else {\r\n      setSelectedProducts([]);\r\n    }\r\n  }, [initialSelectedProduct, isOpen]);\r\n\r\n  const filteredProducts = allProducts.filter(p => \r\n    p.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    p.sku.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleToggleProduct = (product: Product) => {\r\n    setSelectedProducts(prev => {\r\n      if (prev.some(p => p.id === product.id)) {\r\n        return prev.filter(p => p.id !== product.id);\r\n      } else {\r\n        return [...prev, product];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    if (selectedProducts.length >= 2) {\r\n      onProductsSelected(selectedProducts);\r\n    } else {\r\n      // You might want to show a toast notification here\r\n      console.log(\"Please select at least 2 products to merge.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-[600px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>Select Products to Merge</DialogTitle>\r\n          <DialogDescription>\r\n            Choose 2 or more products from the list to merge them.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        <div className=\"relative my-4\">\r\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n          <Input\r\n            placeholder=\"Search products...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"pl-10\"\r\n          />\r\n        </div>\r\n        <ScrollArea className=\"h-[400px] border rounded-md p-4\">\r\n          <div className=\"space-y-2\">\r\n            {filteredProducts.map(product => (\r\n              <div key={product.id} className=\"flex items-center gap-3 p-2 rounded-md hover:bg-gray-50\">\r\n                <Checkbox\r\n                  id={`product-${product.id}`}\r\n                  checked={selectedProducts.some(p => p.id === product.id)}\r\n                  onCheckedChange={() => handleToggleProduct(product)}\r\n                />\r\n                <label htmlFor={`product-${product.id}`} className=\"flex-1 cursor-pointer\">\r\n                  <div className=\"font-medium\">{product.name}</div>\r\n                  <div className=\"text-sm text-gray-500 flex items-center gap-2\">\r\n                    <span>SKU: {product.sku}</span>\r\n                    {product.color && <ColorIndicator color={product.color} />}\r\n                  </div>\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </ScrollArea>\r\n        <DialogFooter>\r\n          <Button variant=\"outline\" onClick={onClose}>Cancel</Button>\r\n          <Button onClick={handleConfirm} disabled={selectedProducts.length < 2}>\r\n            Proceed to Merge ({selectedProducts.length})\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AdminProductSelectionModal; ","\"use client\";\n\n// packages/react/radio-group/src/RadioGroup.tsx\nimport * as React2 from \"react\";\nimport { composeEventHandlers as composeEventHandlers2 } from \"@radix-ui/primitive\";\nimport { useComposedRefs as useComposedRefs2 } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as createContextScope2 } from \"@radix-ui/react-context\";\nimport { Primitive as Primitive2 } from \"@radix-ui/react-primitive\";\nimport * as RovingFocusGroup from \"@radix-ui/react-roving-focus\";\nimport { createRovingFocusGroupScope } from \"@radix-ui/react-roving-focus\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useDirection } from \"@radix-ui/react-direction\";\n\n// packages/react/radio-group/src/Radio.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar RADIO_NAME = \"Radio\";\nvar [createRadioContext, createRadioScope] = createContextScope(RADIO_NAME);\nvar [RadioProvider, useRadioContext] = createRadioContext(RADIO_NAME);\nvar Radio = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeRadio,\n      name,\n      checked = false,\n      required,\n      disabled,\n      value = \"on\",\n      onCheck,\n      form,\n      ...radioProps\n    } = props;\n    const [button, setButton] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    const isFormControl = button ? form || !!button.closest(\"form\") : true;\n    return /* @__PURE__ */ jsxs(RadioProvider, { scope: __scopeRadio, checked, disabled, children: [\n      /* @__PURE__ */ jsx(\n        Primitive.button,\n        {\n          type: \"button\",\n          role: \"radio\",\n          \"aria-checked\": checked,\n          \"data-state\": getState(checked),\n          \"data-disabled\": disabled ? \"\" : void 0,\n          disabled,\n          value,\n          ...radioProps,\n          ref: composedRefs,\n          onClick: composeEventHandlers(props.onClick, (event) => {\n            if (!checked) onCheck?.();\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })\n        }\n      ),\n      isFormControl && /* @__PURE__ */ jsx(\n        BubbleInput,\n        {\n          control: button,\n          bubbles: !hasConsumerStoppedPropagationRef.current,\n          name,\n          value,\n          checked,\n          required,\n          disabled,\n          form,\n          style: { transform: \"translateX(-100%)\" }\n        }\n      )\n    ] });\n  }\n);\nRadio.displayName = RADIO_NAME;\nvar INDICATOR_NAME = \"RadioIndicator\";\nvar RadioIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeRadio, forceMount, ...indicatorProps } = props;\n    const context = useRadioContext(INDICATOR_NAME, __scopeRadio);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.checked, children: /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        \"data-state\": getState(context.checked),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        ...indicatorProps,\n        ref: forwardedRef\n      }\n    ) });\n  }\n);\nRadioIndicator.displayName = INDICATOR_NAME;\nvar BubbleInput = (props) => {\n  const { control, checked, bubbles = true, ...inputProps } = props;\n  const ref = React.useRef(null);\n  const prevChecked = usePrevious(checked);\n  const controlSize = useSize(control);\n  React.useEffect(() => {\n    const input = ref.current;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, \"checked\");\n    const setChecked = descriptor.set;\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event(\"click\", { bubbles });\n      setChecked.call(input, checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n  return /* @__PURE__ */ jsx(\n    \"input\",\n    {\n      type: \"radio\",\n      \"aria-hidden\": true,\n      defaultChecked: checked,\n      ...inputProps,\n      tabIndex: -1,\n      ref,\n      style: {\n        ...props.style,\n        ...controlSize,\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        opacity: 0,\n        margin: 0\n      }\n    }\n  );\n};\nfunction getState(checked) {\n  return checked ? \"checked\" : \"unchecked\";\n}\n\n// packages/react/radio-group/src/RadioGroup.tsx\nimport { jsx as jsx2 } from \"react/jsx-runtime\";\nvar ARROW_KEYS = [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"];\nvar RADIO_GROUP_NAME = \"RadioGroup\";\nvar [createRadioGroupContext, createRadioGroupScope] = createContextScope2(RADIO_GROUP_NAME, [\n  createRovingFocusGroupScope,\n  createRadioScope\n]);\nvar useRovingFocusGroupScope = createRovingFocusGroupScope();\nvar useRadioScope = createRadioScope();\nvar [RadioGroupProvider, useRadioGroupContext] = createRadioGroupContext(RADIO_GROUP_NAME);\nvar RadioGroup = React2.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeRadioGroup,\n      name,\n      defaultValue,\n      value: valueProp,\n      required = false,\n      disabled = false,\n      orientation,\n      dir,\n      loop = true,\n      onValueChange,\n      ...groupProps\n    } = props;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue,\n      onChange: onValueChange\n    });\n    return /* @__PURE__ */ jsx2(\n      RadioGroupProvider,\n      {\n        scope: __scopeRadioGroup,\n        name,\n        required,\n        disabled,\n        value,\n        onValueChange: setValue,\n        children: /* @__PURE__ */ jsx2(\n          RovingFocusGroup.Root,\n          {\n            asChild: true,\n            ...rovingFocusGroupScope,\n            orientation,\n            dir: direction,\n            loop,\n            children: /* @__PURE__ */ jsx2(\n              Primitive2.div,\n              {\n                role: \"radiogroup\",\n                \"aria-required\": required,\n                \"aria-orientation\": orientation,\n                \"data-disabled\": disabled ? \"\" : void 0,\n                dir: direction,\n                ...groupProps,\n                ref: forwardedRef\n              }\n            )\n          }\n        )\n      }\n    );\n  }\n);\nRadioGroup.displayName = RADIO_GROUP_NAME;\nvar ITEM_NAME = \"RadioGroupItem\";\nvar RadioGroupItem = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeRadioGroup, disabled, ...itemProps } = props;\n    const context = useRadioGroupContext(ITEM_NAME, __scopeRadioGroup);\n    const isDisabled = context.disabled || disabled;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);\n    const radioScope = useRadioScope(__scopeRadioGroup);\n    const ref = React2.useRef(null);\n    const composedRefs = useComposedRefs2(forwardedRef, ref);\n    const checked = context.value === itemProps.value;\n    const isArrowKeyPressedRef = React2.useRef(false);\n    React2.useEffect(() => {\n      const handleKeyDown = (event) => {\n        if (ARROW_KEYS.includes(event.key)) {\n          isArrowKeyPressedRef.current = true;\n        }\n      };\n      const handleKeyUp = () => isArrowKeyPressedRef.current = false;\n      document.addEventListener(\"keydown\", handleKeyDown);\n      document.addEventListener(\"keyup\", handleKeyUp);\n      return () => {\n        document.removeEventListener(\"keydown\", handleKeyDown);\n        document.removeEventListener(\"keyup\", handleKeyUp);\n      };\n    }, []);\n    return /* @__PURE__ */ jsx2(\n      RovingFocusGroup.Item,\n      {\n        asChild: true,\n        ...rovingFocusGroupScope,\n        focusable: !isDisabled,\n        active: checked,\n        children: /* @__PURE__ */ jsx2(\n          Radio,\n          {\n            disabled: isDisabled,\n            required: context.required,\n            checked,\n            ...radioScope,\n            ...itemProps,\n            name: context.name,\n            ref: composedRefs,\n            onCheck: () => context.onValueChange(itemProps.value),\n            onKeyDown: composeEventHandlers2((event) => {\n              if (event.key === \"Enter\") event.preventDefault();\n            }),\n            onFocus: composeEventHandlers2(itemProps.onFocus, () => {\n              if (isArrowKeyPressedRef.current) ref.current?.click();\n            })\n          }\n        )\n      }\n    );\n  }\n);\nRadioGroupItem.displayName = ITEM_NAME;\nvar INDICATOR_NAME2 = \"RadioGroupIndicator\";\nvar RadioGroupIndicator = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeRadioGroup, ...indicatorProps } = props;\n    const radioScope = useRadioScope(__scopeRadioGroup);\n    return /* @__PURE__ */ jsx2(RadioIndicator, { ...radioScope, ...indicatorProps, ref: forwardedRef });\n  }\n);\nRadioGroupIndicator.displayName = INDICATOR_NAME2;\nvar Root2 = RadioGroup;\nvar Item2 = RadioGroupItem;\nvar Indicator = RadioGroupIndicator;\nexport {\n  Indicator,\n  Item2 as Item,\n  RadioGroup,\n  RadioGroupIndicator,\n  RadioGroupItem,\n  Root2 as Root,\n  createRadioGroupScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\r\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\r\nimport { Circle } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst RadioGroup = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Root\r\n      className={cn(\"grid gap-2\", className)}\r\n      {...props}\r\n      ref={ref}\r\n    />\r\n  )\r\n})\r\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\r\n\r\nconst RadioGroupItem = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Item\r\n      ref={ref}\r\n      className={cn(\r\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\r\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\r\n      </RadioGroupPrimitive.Indicator>\r\n    </RadioGroupPrimitive.Item>\r\n  )\r\n})\r\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\r\n\r\nexport { RadioGroup, RadioGroupItem }\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Product } from '@/types/database';\r\nimport { productService } from '@/services/productService';\r\nimport { toast } from 'sonner';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Loader2 } from 'lucide-react';\r\nimport { supabase } from '@/integrations/supabase/client';\r\n\r\ninterface MergeSummary {\r\n  transactions: number;\r\n  suppliers: number;\r\n  clients: number;\r\n  printers: number;\r\n}\r\n\r\ninterface AdminMergeProductsModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  products: Product[];\r\n  onMergeComplete: () => void;\r\n}\r\n\r\nconst AdminMergeProductsModal: React.FC<AdminMergeProductsModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  products,\r\n  onMergeComplete,\r\n}) => {\r\n  const [primaryProductId, setPrimaryProductId] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [summary, setSummary] = useState<MergeSummary | null>(null);\r\n  const [isFetchingSummary, setIsFetchingSummary] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (products.length > 0) {\r\n      setPrimaryProductId(products[0].id);\r\n    }\r\n  }, [products]);\r\n\r\n  const fetchMergeSummary = async () => {\r\n    setIsFetchingSummary(true);\r\n    let summaryData: MergeSummary = { transactions: 0, suppliers: 0, clients: 0, printers: 0 };\r\n    \r\n    const otherProducts = products.filter(p => p.id !== primaryProductId);\r\n    \r\n    for (const product of otherProducts) {\r\n      // This is a simplified summary. We're just counting for now.\r\n      const { data: transactions } = await supabase.from('transaction_records').select('id', { count: 'exact' }).eq('product_id', product.id);\r\n      const { data: suppliers } = await supabase.from('product_suppliers').select('id', { count: 'exact' }).eq('product_id', product.id);\r\n      const { data: clients } = await supabase.from('product_clients').select('id', { count: 'exact' }).eq('product_id', product.id);\r\n      const { data: printers } = await supabase.from('product_printers').select('id', { count: 'exact' }).eq('product_id', product.id);\r\n      \r\n      summaryData.transactions += transactions?.length || 0;\r\n      summaryData.suppliers += suppliers?.length || 0;\r\n      summaryData.clients += clients?.length || 0;\r\n      summaryData.printers += printers?.length || 0;\r\n    }\r\n\r\n    setSummary(summaryData);\r\n    setIsFetchingSummary(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (primaryProductId) {\r\n      fetchMergeSummary();\r\n    }\r\n  }, [primaryProductId]);\r\n\r\n  const handleMerge = async () => {\r\n    if (!primaryProductId) {\r\n      toast.error('You must select a primary product.');\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n\r\n    const primaryProduct = products.find(p => p.id === primaryProductId);\r\n    const otherProducts = products.filter(p => p.id !== primaryProductId);\r\n\r\n    if (!primaryProduct) {\r\n        toast.error('Primary product not found.');\r\n        setIsLoading(false);\r\n        return;\r\n    }\r\n\r\n    try {\r\n      const mergedAlias = otherProducts\r\n        .map(p => `${p.sku} - ${p.name}`)\r\n        .join(', ');\r\n      \r\n      const updatedAlias = primaryProduct.alias \r\n        ? `${primaryProduct.alias}, ${mergedAlias}`\r\n        : mergedAlias;\r\n\r\n      await productService.mergeProducts(primaryProductId, otherProducts.map(p => p.id), updatedAlias);\r\n      \r\n      toast.success('Products merged successfully!');\r\n      onMergeComplete();\r\n      onClose();\r\n    } catch (error) {\r\n      toast.error('Failed to merge products.');\r\n      console.error('Merge failed', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <DialogTitle>Merge {products.length} Products</DialogTitle>\r\n          <DialogDescription>\r\n            Select a primary product. All other products will be merged into it. \r\n            The merged products' SKUs and Names will be added to the primary product's alias, and they will be deleted.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        <div className=\"py-4\">\r\n          <RadioGroup value={primaryProductId || ''} onValueChange={setPrimaryProductId}>\r\n            {products.map(product => (\r\n              <div key={product.id} className=\"flex items-center space-x-2 p-2 rounded-md hover:bg-gray-50\">\r\n                <RadioGroupItem value={product.id} id={product.id} />\r\n                <Label htmlFor={product.id} className=\"flex-1 cursor-pointer\">\r\n                  <div className=\"font-medium\">{product.name}</div>\r\n                  <div className=\"text-sm text-gray-500\">SKU: {product.sku}</div>\r\n                </Label>\r\n              </div>\r\n            ))}\r\n          </RadioGroup>\r\n        </div>\r\n\r\n        {isFetchingSummary && <div className=\"flex items-center justify-center p-4\"><Loader2 className=\"h-6 w-6 animate-spin\" /> <span className=\"ml-2\">Loading summary...</span></div>}\r\n\r\n        {summary && !isFetchingSummary && (\r\n          <div className=\"p-4 border bg-gray-50 rounded-md\">\r\n            <h4 className=\"font-semibold mb-2\">Merge Summary</h4>\r\n            <p className=\"text-sm\">The following items from the secondary products will be moved to the primary product:</p>\r\n            <ul className=\"list-disc list-inside text-sm mt-2\">\r\n              <li>{summary.transactions} Transaction Records</li>\r\n              <li>{summary.suppliers} Supplier Prices</li>\r\n              <li>{summary.clients} Client Quotes</li>\r\n              <li>{summary.printers} Printer Compatibilities</li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        <Alert variant=\"destructive\" className=\"mt-4\">\r\n          <AlertDescription>\r\n            This action is irreversible. The non-primary products will be permanently deleted.\r\n          </AlertDescription>\r\n        </Alert>\r\n        <DialogFooter>\r\n          <Button variant=\"outline\" onClick={onClose} disabled={isLoading}>Cancel</Button>\r\n          <Button onClick={handleMerge} disabled={isLoading || !primaryProductId}>\r\n            {isLoading ? 'Merging...' : 'Confirm Merge'}\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AdminMergeProductsModal; ","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Calendar, TrendingUp, TrendingDown, Save, X } from 'lucide-react';\r\nimport { toast } from 'sonner';\r\nimport { formatPHP } from '@/utils/currency';\r\n\r\ninterface PriceHistoryEntry {\r\n  id: string;\r\n  price: number;\r\n  timestamp: Date;\r\n  note?: string;\r\n}\r\n\r\ninterface PriceManagementModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  type: 'supplier' | 'client';\r\n  entityName: string;\r\n  currentPrice: number;\r\n  productName: string;\r\n  onPriceUpdate: (newPrice: number, note?: string) => Promise<void>;\r\n  priceHistory?: PriceHistoryEntry[];\r\n}\r\n\r\nconst PriceManagementModal: React.FC<PriceManagementModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  type,\r\n  entityName,\r\n  currentPrice,\r\n  productName,\r\n  onPriceUpdate,\r\n  priceHistory = []\r\n}) => {\r\n  const [newPrice, setNewPrice] = useState(currentPrice.toString());\r\n  const [note, setNote] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setNewPrice(currentPrice.toString());\r\n    setNote('');\r\n  }, [currentPrice, isOpen]);\r\n\r\n  const handleUpdatePrice = async () => {\r\n    const priceValue = parseFloat(newPrice);\r\n    if (isNaN(priceValue) || priceValue <= 0) {\r\n      toast.error('Please enter a valid price');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await onPriceUpdate(priceValue, note);\r\n      toast.success(`${type === 'supplier' ? 'Supplier' : 'Client'} price updated successfully`);\r\n      onClose();\r\n    } catch (error) {\r\n      toast.error('Failed to update price');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const sortedHistory = [...priceHistory]\r\n    .sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"max-w-2xl\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center gap-2\">\r\n            Manage {type === 'supplier' ? 'Supplier' : 'Client'} Pricing\r\n          </DialogTitle>\r\n          <div className=\"text-sm text-gray-600\">\r\n            {entityName} - {productName}\r\n          </div>\r\n        </DialogHeader>\r\n\r\n        <Tabs defaultValue=\"update\" className=\"w-full\">\r\n          <TabsList className=\"grid w-full grid-cols-2\">\r\n            <TabsTrigger value=\"update\">Update Price</TabsTrigger>\r\n            <TabsTrigger value=\"history\">Price History</TabsTrigger>\r\n          </TabsList>\r\n\r\n          <TabsContent value=\"update\" className=\"space-y-4\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"text-lg\">Current Price</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold text-green-600 mb-4\">\r\n                  {formatPHP(currentPrice)}\r\n                </div>\r\n                \r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <Label htmlFor=\"newPrice\">New Price</Label>\r\n                    <Input\r\n                      id=\"newPrice\"\r\n                      type=\"number\"\r\n                      value={newPrice}\r\n                      onChange={(e) => setNewPrice(e.target.value)}\r\n                      placeholder=\"Enter new price\"\r\n                      step=\"0.01\"\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <Label htmlFor=\"note\">Note (optional)</Label>\r\n                    <Input\r\n                      id=\"note\"\r\n                      value={note}\r\n                      onChange={(e) => setNote(e.target.value)}\r\n                      placeholder=\"Add a note about this price change\"\r\n                    />\r\n                  </div>\r\n                  \r\n                  <div className=\"flex gap-2\">\r\n                    <Button \r\n                      onClick={handleUpdatePrice}\r\n                      disabled={loading}\r\n                      className=\"flex-1\"\r\n                    >\r\n                      <Save className=\"h-4 w-4 mr-2\" />\r\n                      {loading ? 'Updating...' : 'Update Price'}\r\n                    </Button>\r\n                    <Button variant=\"outline\" onClick={onClose}>\r\n                      <X className=\"h-4 w-4 mr-2\" />\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"history\" className=\"space-y-4\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"text-lg flex items-center gap-2\">\r\n                  <Calendar className=\"h-5 w-5\" />\r\n                  Price History\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                {sortedHistory.length === 0 ? (\r\n                  <div className=\"text-center py-8 text-gray-500\">\r\n                    No price history available\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"space-y-3 max-h-96 overflow-y-auto\">\r\n                    {sortedHistory.map((entry, index) => {\r\n                      const previousEntry = sortedHistory[index + 1];\r\n                      const isIncrease = previousEntry && entry.price > previousEntry.price;\r\n                      const isDecrease = previousEntry && entry.price < previousEntry.price;\r\n                      const priceDiff = previousEntry ? entry.price - previousEntry.price : 0;\r\n                      \r\n                      return (\r\n                        <div key={entry.id} className=\"bg-gray-50 rounded-lg p-3 border\">\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <div className=\"flex items-center space-x-2\">\r\n                              <span className=\"font-semibold text-gray-900\">\r\n                                {formatPHP(entry.price)}\r\n                              </span>\r\n                              {previousEntry && (\r\n                                <div className=\"flex items-center\">\r\n                                  {isIncrease && (\r\n                                    <div className=\"flex items-center text-red-600 text-sm\">\r\n                                      <TrendingUp className=\"h-3 w-3 mr-1\" />\r\n                                      +{formatPHP(Math.abs(priceDiff))}\r\n                                    </div>\r\n                                  )}\r\n                                  {isDecrease && (\r\n                                    <div className=\"flex items-center text-green-600 text-sm\">\r\n                                      <TrendingDown className=\"h-3 w-3 mr-1\" />\r\n                                      -{formatPHP(Math.abs(priceDiff))}\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                            <span className=\"text-xs text-gray-500\">\r\n                              {new Date(entry.timestamp).toLocaleDateString()} {new Date(entry.timestamp).toLocaleTimeString()}\r\n                            </span>\r\n                          </div>\r\n                          {entry.note && (\r\n                            <p className=\"text-sm text-gray-600 mt-1 italic\">\"{entry.note}\"</p>\r\n                          )}\r\n                          {index === 0 && (\r\n                            <Badge variant=\"secondary\" className=\"mt-1\">\r\n                              Current\r\n                            </Badge>\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n        </Tabs>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PriceManagementModal;\r\n","\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Supplier } from '@/types/database';\r\n\r\nexport const supplierService = {\r\n  async createSupplier(supplierData: Omit<Supplier, 'id' | 'created_at' | 'updated_at'>): Promise<boolean> {\r\n    const { error } = await supabase\r\n      .from('suppliers')\r\n      .insert(supplierData);\r\n    return !error;\r\n  },\r\n\r\n  async updateSupplier(id: string, supplierData: Partial<Supplier>): Promise<boolean> {\r\n    const { error } = await supabase\r\n      .from('suppliers')\r\n      .update(supplierData)\r\n      .eq('id', id);\r\n    return !error;\r\n  },\r\n\r\n  async deleteSupplier(id: string): Promise<boolean> {\r\n    const { error } = await supabase\r\n      .from('suppliers')\r\n      .delete()\r\n      .eq('id', id);\r\n    return !error;\r\n  },\r\n\r\n  async getSuppliers(): Promise<Supplier[]> {\r\n    const { data, error } = await supabase\r\n      .from('suppliers')\r\n      .select('*')\r\n      .order('name');\r\n    return !error && data ? data : [];\r\n  }\r\n};\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Plus, Save, X } from 'lucide-react';\r\nimport { toast } from 'sonner';\r\nimport { supplierService } from '@/services/supplierService';\r\nimport { clientService } from '@/services/clientService';\r\n\r\ninterface AddSupplierClientModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  type: 'supplier' | 'client';\r\n  productId: string;\r\n  productName: string;\r\n  onSuccess: () => void;\r\n}\r\n\r\ninterface SupplierOption {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ninterface ClientOption {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nconst AddSupplierClientModal: React.FC<AddSupplierClientModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  type,\r\n  productId,\r\n  productName,\r\n  onSuccess\r\n}) => {\r\n  const [selectedEntityId, setSelectedEntityId] = useState<string>('');\r\n  const [price, setPrice] = useState('');\r\n  const [marginPercentage, setMarginPercentage] = useState('');\r\n  const [showNewEntityForm, setShowNewEntityForm] = useState(false);\r\n  const [newEntityName, setNewEntityName] = useState('');\r\n  const [newEntityEmail, setNewEntityEmail] = useState('');\r\n  const [newEntityPhone, setNewEntityPhone] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [entities, setEntities] = useState<(SupplierOption | ClientOption)[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      loadEntities();\r\n      resetForm();\r\n    }\r\n  }, [isOpen, type]);\r\n\r\n  const resetForm = () => {\r\n    setSelectedEntityId('');\r\n    setPrice('');\r\n    setMarginPercentage('');\r\n    setShowNewEntityForm(false);\r\n    setNewEntityName('');\r\n    setNewEntityEmail('');\r\n    setNewEntityPhone('');\r\n  };\r\n\r\n  const loadEntities = async () => {\r\n    try {\r\n      if (type === 'supplier') {\r\n        const suppliers = await supplierService.getSuppliers();\r\n        setEntities(suppliers);\r\n      } else {\r\n        const clients = await clientService.getClients();\r\n        setEntities(clients);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error loading ${type}s:`, error);\r\n      toast.error(`Failed to load ${type}s`);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const priceValue = parseFloat(price);\r\n    if (isNaN(priceValue) || priceValue <= 0) {\r\n      toast.error('Please enter a valid price');\r\n      return;\r\n    }\r\n\r\n    if (!selectedEntityId && !showNewEntityForm) {\r\n      toast.error(`Please select a ${type} or create a new one`);\r\n      return;\r\n    }\r\n\r\n    if (showNewEntityForm && !newEntityName.trim()) {\r\n      toast.error(`Please enter ${type} name`);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      if (type === 'supplier') {\r\n        const { productService } = await import('@/services/productService');\r\n        await productService.addSupplierToProduct(\r\n          productId,\r\n          showNewEntityForm ? {\r\n            name: newEntityName,\r\n            contact_email: newEntityEmail,\r\n            phone: newEntityPhone\r\n          } : { name: entities.find(e => e.id === selectedEntityId)?.name || '' },\r\n          priceValue\r\n        );\r\n      } else {\r\n        const { productService } = await import('@/services/productService');\r\n        const marginValue = marginPercentage ? parseFloat(marginPercentage) : undefined;\r\n        await productService.addClientToProduct(\r\n          productId,\r\n          showNewEntityForm ? {\r\n            name: newEntityName,\r\n            contact_email: newEntityEmail,\r\n            phone: newEntityPhone\r\n          } : { name: entities.find(e => e.id === selectedEntityId)?.name || '' },\r\n          priceValue,\r\n          marginValue\r\n        );\r\n      }\r\n\r\n      toast.success(`${type === 'supplier' ? 'Supplier' : 'Client'} pricing added successfully`);\r\n      onSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(`Error adding ${type} pricing:`, error);\r\n      toast.error(`Failed to add ${type} pricing`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"max-w-md\">\r\n        <DialogHeader>\r\n          <DialogTitle>\r\n            Add {type === 'supplier' ? 'Supplier' : 'Client'} Pricing\r\n          </DialogTitle>\r\n          <div className=\"text-sm text-gray-600\">\r\n            {productName}\r\n          </div>\r\n        </DialogHeader>\r\n\r\n        <div className=\"space-y-4\">\r\n          <Card>\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"space-y-4\">\r\n                {!showNewEntityForm ? (\r\n                  <>\r\n                    <div>\r\n                      <Label htmlFor=\"entity\">Select {type === 'supplier' ? 'Supplier' : 'Client'}</Label>\r\n                      <Select value={selectedEntityId} onValueChange={setSelectedEntityId}>\r\n                        <SelectTrigger>\r\n                          <SelectValue placeholder={`Select ${type}...`} />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          {entities.map((entity) => (\r\n                            <SelectItem key={entity.id} value={entity.id}>\r\n                              {entity.name}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n                    \r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outline\"\r\n                      onClick={() => setShowNewEntityForm(true)}\r\n                      className=\"w-full\"\r\n                    >\r\n                      <Plus className=\"h-4 w-4 mr-2\" />\r\n                      Add New {type === 'supplier' ? 'Supplier' : 'Client'}\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <Label>New {type === 'supplier' ? 'Supplier' : 'Client'}</Label>\r\n                      <Button\r\n                        type=\"button\"\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        onClick={() => setShowNewEntityForm(false)}\r\n                      >\r\n                        <X className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                      <Label htmlFor=\"newName\">Name *</Label>\r\n                      <Input\r\n                        id=\"newName\"\r\n                        value={newEntityName}\r\n                        onChange={(e) => setNewEntityName(e.target.value)}\r\n                        placeholder={`Enter ${type} name`}\r\n                      />\r\n                    </div>\r\n                    \r\n                    <div>\r\n                      <Label htmlFor=\"newEmail\">Email</Label>\r\n                      <Input\r\n                        id=\"newEmail\"\r\n                        type=\"email\"\r\n                        value={newEntityEmail}\r\n                        onChange={(e) => setNewEntityEmail(e.target.value)}\r\n                        placeholder=\"Enter email\"\r\n                      />\r\n                    </div>\r\n                    \r\n                    <div>\r\n                      <Label htmlFor=\"newPhone\">Phone</Label>\r\n                      <Input\r\n                        id=\"newPhone\"\r\n                        value={newEntityPhone}\r\n                        onChange={(e) => setNewEntityPhone(e.target.value)}\r\n                        placeholder=\"Enter phone number\"\r\n                      />\r\n                    </div>\r\n                  </>\r\n                )}\r\n\r\n                <div>\r\n                  <Label htmlFor=\"price\">Price *</Label>\r\n                  <Input\r\n                    id=\"price\"\r\n                    type=\"number\"\r\n                    value={price}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                    placeholder=\"Enter price\"\r\n                    step=\"0.01\"\r\n                    min=\"0\"\r\n                  />\r\n                </div>\r\n\r\n                {type === 'client' && (\r\n                  <div>\r\n                    <Label htmlFor=\"margin\">Margin Percentage</Label>\r\n                    <Input\r\n                      id=\"margin\"\r\n                      type=\"number\"\r\n                      value={marginPercentage}\r\n                      onChange={(e) => setMarginPercentage(e.target.value)}\r\n                      placeholder=\"Enter margin %\"\r\n                      step=\"0.01\"\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"flex gap-2 pt-4\">\r\n                  <Button \r\n                    onClick={handleSubmit}\r\n                    disabled={loading}\r\n                    className=\"flex-1\"\r\n                  >\r\n                    <Save className=\"h-4 w-4 mr-2\" />\r\n                    {loading ? 'Adding...' : 'Add Pricing'}\r\n                  </Button>\r\n                  <Button variant=\"outline\" onClick={onClose}>\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddSupplierClientModal;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Search, DollarSign, Plus, Edit, TrendingUp, TrendingDown, Minus } from 'lucide-react';\r\nimport { productService } from '@/services/productService';\r\nimport { toast } from 'sonner';\r\nimport ColorIndicator from '@/components/ColorIndicator';\r\nimport PriceManagementModal from './PriceManagementModal';\r\nimport AddSupplierClientModal from './AddSupplierClientModal';\r\n\r\ninterface PriceCheckModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\ninterface ProductWithPricing {\r\n  id: string;\r\n  name: string;\r\n  sku: string;\r\n  category: string;\r\n  color?: string;\r\n  suppliers: Array<{\r\n    id: string;\r\n    supplier: {\r\n      id: string;\r\n      name: string;\r\n    };\r\n    current_price: number;\r\n    updated_at: string;\r\n  }>;\r\n  clients: Array<{\r\n    id: string;\r\n    client: {\r\n      id: string;\r\n      name: string;\r\n    };\r\n    quoted_price: number;\r\n    margin_percentage?: number;\r\n  }>;\r\n}\r\n\r\nconst PriceCheckModal: React.FC<PriceCheckModalProps> = ({\r\n  isOpen,\r\n  onClose\r\n}) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [products, setProducts] = useState<any[]>([]);\r\n  const [productsWithPricing, setProductsWithPricing] = useState<ProductWithPricing[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [priceManagementModal, setPriceManagementModal] = useState<{\r\n    isOpen: boolean;\r\n    type: 'supplier' | 'client';\r\n    entityName: string;\r\n    currentPrice: number;\r\n    productName: string;\r\n    productId: string;\r\n    relationId: string;\r\n  } | null>(null);\r\n  const [addPricingModal, setAddPricingModal] = useState<{\r\n    isOpen: boolean;\r\n    type: 'supplier' | 'client';\r\n    productId: string;\r\n    productName: string;\r\n  } | null>(null);\r\n\r\n  // Search products and load their pricing\r\n  useEffect(() => {\r\n    const searchAndLoadPricing = async () => {\r\n      if (!searchQuery.trim()) {\r\n        setProducts([]);\r\n        setProductsWithPricing([]);\r\n        return;\r\n      }\r\n      try {\r\n        setLoading(true);\r\n        const results = await productService.searchProducts(searchQuery);\r\n        setProducts(results);\r\n\r\n        // Load pricing for each product\r\n        const productsWithPricingData = await Promise.all(results.map(async product => {\r\n          try {\r\n            const [withSuppliers, withClients] = await Promise.all([\r\n              productService.getProductWithSuppliers(product.id), \r\n              productService.getProductWithClients(product.id)\r\n            ]);\r\n            return {\r\n              ...product,\r\n              suppliers: withSuppliers?.suppliers || [],\r\n              clients: withClients?.clients || []\r\n            };\r\n          } catch (error) {\r\n            console.error(`Error loading pricing for product ${product.id}:`, error);\r\n            return {\r\n              ...product,\r\n              suppliers: [],\r\n              clients: []\r\n            };\r\n          }\r\n        }));\r\n        setProductsWithPricing(productsWithPricingData as ProductWithPricing[]);\r\n      } catch (error) {\r\n        console.error('Error searching products:', error);\r\n        toast.error('Failed to search products');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    const debounceTimer = setTimeout(searchAndLoadPricing, 300);\r\n    return () => clearTimeout(debounceTimer);\r\n  }, [searchQuery]);\r\n\r\n  const handleClose = () => {\r\n    setSearchQuery('');\r\n    setProducts([]);\r\n    setProductsWithPricing([]);\r\n    onClose();\r\n  };\r\n\r\n  const handleSupplierClick = (product: ProductWithPricing, supplierRelation: any) => {\r\n    setPriceManagementModal({\r\n      isOpen: true,\r\n      type: 'supplier',\r\n      entityName: supplierRelation.supplier.name,\r\n      currentPrice: supplierRelation.current_price,\r\n      productName: product.name,\r\n      productId: product.id,\r\n      relationId: supplierRelation.id\r\n    });\r\n  };\r\n\r\n  const handleClientClick = (product: ProductWithPricing, clientRelation: any) => {\r\n    setPriceManagementModal({\r\n      isOpen: true,\r\n      type: 'client',\r\n      entityName: clientRelation.client.name,\r\n      currentPrice: clientRelation.quoted_price,\r\n      productName: product.name,\r\n      productId: product.id,\r\n      relationId: clientRelation.id\r\n    });\r\n  };\r\n\r\n  const handleAddSupplierPrice = (product: ProductWithPricing) => {\r\n    setAddPricingModal({\r\n      isOpen: true,\r\n      type: 'supplier',\r\n      productId: product.id,\r\n      productName: product.name\r\n    });\r\n  };\r\n\r\n  const handleAddClientPrice = (product: ProductWithPricing) => {\r\n    setAddPricingModal({\r\n      isOpen: true,\r\n      type: 'client',\r\n      productId: product.id,\r\n      productName: product.name\r\n    });\r\n  };\r\n\r\n  const handlePriceUpdate = async (newPrice: number, note?: string) => {\r\n    if (!priceManagementModal) return;\r\n\r\n    try {\r\n      if (priceManagementModal.type === 'supplier') {\r\n        await productService.updateSupplierPrice(priceManagementModal.relationId, newPrice, note);\r\n      } else {\r\n        // For client pricing updates, we'd need to implement this in productService\r\n        toast.info('Client price update functionality coming soon');\r\n        return;\r\n      }\r\n      \r\n      // Refresh the pricing data\r\n      const searchAndLoadPricing = async () => {\r\n        const results = await productService.searchProducts(searchQuery);\r\n        const productsWithPricingData = await Promise.all(results.map(async product => {\r\n          try {\r\n            const [withSuppliers, withClients] = await Promise.all([\r\n              productService.getProductWithSuppliers(product.id), \r\n              productService.getProductWithClients(product.id)\r\n            ]);\r\n            return {\r\n              ...product,\r\n              suppliers: withSuppliers?.suppliers || [],\r\n              clients: withClients?.clients || []\r\n            };\r\n          } catch (error) {\r\n            console.error(`Error loading pricing for product ${product.id}:`, error);\r\n            return {\r\n              ...product,\r\n              suppliers: [],\r\n              clients: []\r\n            };\r\n          }\r\n        }));\r\n        setProductsWithPricing(productsWithPricingData as ProductWithPricing[]);\r\n      };\r\n      \r\n      await searchAndLoadPricing();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleAddPricingSuccess = async () => {\r\n    // Refresh the pricing data\r\n    const results = await productService.searchProducts(searchQuery);\r\n    const productsWithPricingData = await Promise.all(results.map(async product => {\r\n      try {\r\n        const [withSuppliers, withClients] = await Promise.all([\r\n          productService.getProductWithSuppliers(product.id), \r\n          productService.getProductWithClients(product.id)\r\n        ]);\r\n        return {\r\n          ...product,\r\n          suppliers: withSuppliers?.suppliers || [],\r\n          clients: withClients?.clients || []\r\n        };\r\n      } catch (error) {\r\n        console.error(`Error loading pricing for product ${product.id}:`, error);\r\n        return {\r\n          ...product,\r\n          suppliers: [],\r\n          clients: []\r\n        };\r\n      }\r\n    }));\r\n    setProductsWithPricing(productsWithPricingData as ProductWithPricing[]);\r\n  };\r\n\r\n  // Get price trend indicator (placeholder for now)\r\n  const getPriceTrend = () => {\r\n    const trends = ['up', 'down', 'stable'];\r\n    return trends[Math.floor(Math.random() * trends.length)];\r\n  };\r\n\r\n  const TrendIcon = ({ trend }: { trend: string }) => {\r\n    switch (trend) {\r\n      case 'up':\r\n        return <TrendingUp className=\"h-3 w-3 text-red-500\" />;\r\n      case 'down':\r\n        return <TrendingDown className=\"h-3 w-3 text-green-500\" />;\r\n      default:\r\n        return <Minus className=\"h-3 w-3 text-gray-400\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={isOpen} onOpenChange={handleClose}>\r\n        <DialogContent className=\"max-w-6xl max-h-[90vh] overflow-y-auto\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"flex items-center gap-2\">\r\n              <DollarSign className=\"h-5 w-5\" />\r\n              Price Check\r\n            </DialogTitle>\r\n          </DialogHeader>\r\n\r\n          <div className=\"space-y-4\">\r\n            {/* Search Section */}\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n              <Input \r\n                placeholder=\"Search products by name, SKU, or category...\" \r\n                value={searchQuery}\r\n                onChange={e => setSearchQuery(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n\r\n            {/* Loading State */}\r\n            {loading && (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                Searching and loading pricing data...\r\n              </div>\r\n            )}\r\n\r\n            {/* No Results */}\r\n            {!loading && searchQuery && productsWithPricing.length === 0 && (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                No products found\r\n              </div>\r\n            )}\r\n\r\n            {/* Results */}\r\n            {!loading && productsWithPricing.length > 0 && (\r\n              <div className=\"space-y-3\">\r\n                {productsWithPricing.map(product => (\r\n                  <Card key={product.id} className=\"hover:shadow-sm transition-shadow\">\r\n                    <CardContent className=\"p-4\">\r\n                      <div className=\"space-y-3\">\r\n                        {/* Product Info */}\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <div className=\"flex items-center gap-2 mb-1\">\r\n                              <h4 className=\"font-medium text-gray-900 leading-tight\">\r\n                                {product.name}\r\n                              </h4>\r\n                              <span className=\"font-mono bg-gray-100 px-2 py-0.5 rounded text-xs\">\r\n                                {product.sku}\r\n                              </span>\r\n                              {product.color && <ColorIndicator color={product.color} size=\"sm\" />}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Supplier Pricing */}\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex items-center gap-2 text-xs text-gray-600\">\r\n                            <span className=\"font-medium\">Supplier pricing:</span>\r\n                            <Button\r\n                              size=\"sm\"\r\n                              variant=\"outline\"\r\n                              onClick={() => handleAddSupplierPrice(product)}\r\n                              className=\"h-6 px-2 text-xs\"\r\n                            >\r\n                              <Plus className=\"h-3 w-3 mr-1\" />\r\n                              Add\r\n                            </Button>\r\n                          </div>\r\n                          \r\n                          {product.suppliers && product.suppliers.length > 0 ? (\r\n                            <div className=\"flex flex-wrap gap-1\">\r\n                              {product.suppliers.map(supplierRelation => {\r\n                                const trend = getPriceTrend();\r\n                                return (\r\n                                  <div \r\n                                    key={supplierRelation.id}\r\n                                    className=\"flex items-center gap-1 bg-blue-50 border border-blue-200 rounded px-2 py-1 hover:bg-blue-100 transition-colors cursor-pointer\"\r\n                                    onClick={() => handleSupplierClick(product, supplierRelation)}\r\n                                  >\r\n                                    <span className=\"text-xs font-medium text-blue-800\">\r\n                                      {supplierRelation.supplier?.name}:\r\n                                    </span>\r\n                                    <span className=\"text-xs font-semibold text-blue-900\">\r\n                                      ₱{supplierRelation.current_price?.toLocaleString()}\r\n                                    </span>\r\n                                    <TrendIcon trend={trend} />\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                          ) : (\r\n                            <div className=\"text-xs text-gray-500\">No supplier pricing available</div>\r\n                          )}\r\n                        </div>\r\n\r\n                        {/* Client Pricing */}\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex items-center gap-2 text-xs text-gray-600\">\r\n                            <span className=\"font-medium\">Client pricing:</span>\r\n                            <Button\r\n                              size=\"sm\"\r\n                              variant=\"outline\"\r\n                              onClick={() => handleAddClientPrice(product)}\r\n                              className=\"h-6 px-2 text-xs\"\r\n                            >\r\n                              <Plus className=\"h-3 w-3 mr-1\" />\r\n                              Add\r\n                            </Button>\r\n                          </div>\r\n                          \r\n                          {product.clients && product.clients.length > 0 ? (\r\n                            <div className=\"flex flex-wrap gap-1\">\r\n                              {product.clients.map(clientRelation => (\r\n                                <div \r\n                                  key={clientRelation.id}\r\n                                  className=\"flex items-center gap-1 bg-green-50 border border-green-200 rounded px-2 py-1 hover:bg-green-100 transition-colors cursor-pointer\"\r\n                                  onClick={() => handleClientClick(product, clientRelation)}\r\n                                >\r\n                                  <span className=\"text-xs font-medium text-green-800\">\r\n                                    {clientRelation.client?.name}:\r\n                                  </span>\r\n                                  <span className=\"text-xs font-semibold text-green-900\">\r\n                                    ₱{clientRelation.quoted_price?.toLocaleString()}\r\n                                  </span>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          ) : (\r\n                            <div className=\"text-xs text-gray-500\">No client pricing available</div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Price Management Modal */}\r\n      {priceManagementModal && (\r\n        <PriceManagementModal\r\n          isOpen={priceManagementModal.isOpen}\r\n          onClose={() => setPriceManagementModal(null)}\r\n          type={priceManagementModal.type}\r\n          entityName={priceManagementModal.entityName}\r\n          currentPrice={priceManagementModal.currentPrice}\r\n          productName={priceManagementModal.productName}\r\n          onPriceUpdate={handlePriceUpdate}\r\n        />\r\n      )}\r\n\r\n      {/* Add Pricing Modal */}\r\n      {addPricingModal && (\r\n        <AddSupplierClientModal\r\n          isOpen={addPricingModal.isOpen}\r\n          onClose={() => setAddPricingModal(null)}\r\n          type={addPricingModal.type}\r\n          productId={addPricingModal.productId}\r\n          productName={addPricingModal.productName}\r\n          onSuccess={handleAddPricingSuccess}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PriceCheckModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Search, Package, Plus, Merge, DollarSign } from 'lucide-react';\r\nimport ProductCard from './ProductCard';\r\nimport AddProductModal from '@/components/AddProductModal';\r\nimport AdminEditProductModal from './AdminEditProductModal';\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n} from '@/components/ui/alert-dialog';\r\nimport { Product } from '@/types/database';\r\nimport { productService } from '@/services/productService';\r\nimport { toast } from 'sonner';\r\nimport ProductVariantSelectionModal from './ProductVariantSelectionModal';\r\nimport AdminProductSelectionModal from './AdminProductSelectionModal';\r\nimport AdminMergeProductsModal from './AdminMergeProductsModal';\r\nimport { printerService } from '@/services/printerService';\r\nimport { clientService } from '@/services/clientService';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport PriceCheckModal from './PriceCheckModal';\r\nimport { CustomLoading } from '@/components/ui/CustomLoading';\r\ninterface ProductGroup {\r\n  baseSku: string;\r\n  category: string;\r\n  name: string;\r\n  colors: string[];\r\n  priceType: string;\r\n  status: string;\r\n  allProducts: any[];\r\n  supportedPrinters: any[];\r\n  departmentsSupplied: any[];\r\n  customPricing?: any;\r\n  skus: string[];\r\n  productSkus: Array<{\r\n    sku: string;\r\n    color?: string;\r\n  }>;\r\n}\r\ninterface ProductsTabProps {\r\n  products: any[];\r\n  onAddProduct?: () => void;\r\n  onEditProduct?: (product: any) => void;\r\n  onDeleteProduct?: (product: any) => void;\r\n  onRefresh?: () => void;\r\n  onEditClientPrice?: (productId: string, clientId: string) => void;\r\n  onEditSupplierPrice?: (productId: string, supplierId: string) => void;\r\n  onRequestQuote?: (productId: string, supplierId: string) => void;\r\n}\r\n\r\n// Helper function to group products by similar SKU\r\nconst groupProductsBySimilarSku = (products: any[]): ProductGroup[] => {\r\n  const groups: {\r\n    [key: string]: ProductGroup;\r\n  } = {};\r\n  products.forEach(product => {\r\n    let baseSku = (product.sku || '').trim();\r\n    let groupKey: string;\r\n    let groupName: string;\r\n    if (baseSku) {\r\n      // Group by SKU if it exists\r\n      baseSku = baseSku.replace(/[A-Z]$/, '');\r\n      const ceMatch = baseSku.match(/^CE(\\d+)$/i);\r\n      if (ceMatch) {\r\n        const ceToBase: {\r\n          [key: string]: string;\r\n        } = {\r\n          '320': '128',\r\n          '321': '128',\r\n          '322': '128',\r\n          '323': '128'\r\n        };\r\n        baseSku = ceToBase[ceMatch[1]] || ceMatch[1];\r\n      }\r\n      groupKey = baseSku;\r\n      groupName = `SKU: ${baseSku}`;\r\n    } else {\r\n      // For blank SKUs, use the product ID for a unique group and the product name for display.\r\n      groupKey = product.id;\r\n      groupName = product.name;\r\n    }\r\n    if (!groups[groupKey]) {\r\n      groups[groupKey] = {\r\n        baseSku: groupKey,\r\n        category: product.category || '',\r\n        name: groupName,\r\n        colors: [],\r\n        priceType: 'standard',\r\n        status: 'active',\r\n        allProducts: [],\r\n        supportedPrinters: [],\r\n        departmentsSupplied: [],\r\n        skus: [],\r\n        productSkus: []\r\n      };\r\n    }\r\n    groups[groupKey].allProducts.push(product);\r\n    if (!groups[groupKey].skus.includes(product.sku)) {\r\n      groups[groupKey].skus.push(product.sku);\r\n      groups[groupKey].productSkus.push({\r\n        sku: product.sku,\r\n        color: product.color\r\n      });\r\n    }\r\n    if (product.color && !groups[groupKey].colors.includes(product.color)) {\r\n      groups[groupKey].colors.push(product.color);\r\n    }\r\n  });\r\n  return Object.values(groups);\r\n};\r\n\r\n// Helper to fetch supplied departments for a product\r\nconst fetchProductDepartments = async (productId: string) => {\r\n  const {\r\n    data,\r\n    error\r\n  } = await supabase.from('product_clients').select(`*, client:clients(*)`).eq('product_id', productId);\r\n  if (error) return [];\r\n  return (data || []).map((pc: any) => ({\r\n    id: pc.client?.id,\r\n    departmentName: pc.client?.department || '',\r\n    locationName: pc.client?.location || '',\r\n    clientName: pc.client?.name || ''\r\n  }));\r\n};\r\nconst ProductsTab: React.FC<ProductsTabProps> = ({\r\n  products = [],\r\n  onAddProduct,\r\n  onEditProduct,\r\n  onDeleteProduct,\r\n  onRefresh\r\n}) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\r\n  const [selectedProduct, setSelectedProduct] = useState<any | null>(null);\r\n  const [selectedProductGroup, setSelectedProductGroup] = useState<ProductGroup | null>(null);\r\n  const [showVariantSelector, setShowVariantSelector] = useState(false);\r\n  const [variantAction, setVariantAction] = useState<'edit' | 'delete' | null>(null);\r\n  const [showMergeSelection, setShowMergeSelection] = useState(false);\r\n  const [productsToMerge, setProductsToMerge] = useState<Product[]>([]);\r\n  const [showMergeConfirm, setShowMergeConfirm] = useState(false);\r\n  const [productToPreselect, setProductToPreselect] = useState<Product | undefined>(undefined);\r\n  const [groupedProductsWithRelations, setGroupedProductsWithRelations] = useState<ProductGroup[]>([]);\r\n  const [showPriceCheck, setShowPriceCheck] = useState(false);\r\n  const [localLoading, setLocalLoading] = useState(true);\r\n\r\n  // Group all products first.\r\n  const allGroupedProducts = groupProductsBySimilarSku(products);\r\n\r\n  // Fetch and aggregate compatible printers and supplied departments for each group\r\n  useEffect(() => {\r\n    const fetchRelations = async () => {\r\n      setLocalLoading(true);\r\n      const enrichedGroups = await Promise.all(allGroupedProducts.map(async group => {\r\n        let allPrinters: any[] = [];\r\n        let allDepartments: any[] = [];\r\n        for (const product of group.allProducts) {\r\n          try {\r\n            const printers = await printerService.getProductPrinters(product.id);\r\n            allPrinters.push(...(printers || []));\r\n          } catch {}\r\n          try {\r\n            const departments = await fetchProductDepartments(product.id);\r\n            allDepartments.push(...(departments || []));\r\n          } catch {}\r\n        }\r\n        const uniquePrinters = allPrinters.filter((p, idx, arr) => p && p.id && arr.findIndex(x => x.id === p.id) === idx);\r\n        const uniqueDepartments = allDepartments.filter((d, idx, arr) => d && d.id && arr.findIndex(x => x.id === d.id) === idx);\r\n        return {\r\n          ...group,\r\n          supportedPrinters: uniquePrinters,\r\n          departmentsSupplied: uniqueDepartments\r\n        };\r\n      }));\r\n      setGroupedProductsWithRelations(enrichedGroups);\r\n      setLocalLoading(false);\r\n    };\r\n    fetchRelations();\r\n  }, [products]);\r\n\r\n  // Then, filter the groups based on the search query.\r\n  const filteredGroupedProducts = groupedProductsWithRelations.filter(group => {\r\n    if (!searchQuery.trim()) {\r\n      return true;\r\n    }\r\n    const term = searchQuery.toLowerCase();\r\n    if (group.baseSku.toLowerCase().includes(term)) {\r\n      return true;\r\n    }\r\n    return group.allProducts.some(p => p.name?.toLowerCase().includes(term) || p.sku?.toLowerCase().includes(term) || p.category?.toLowerCase().includes(term) || p.alias?.toLowerCase().includes(term));\r\n  });\r\n  const handleAddProduct = () => {\r\n    if (onAddProduct) {\r\n      onAddProduct();\r\n    } else {\r\n      setShowAddModal(true);\r\n    }\r\n  };\r\n  const handleEditProduct = (productGroup: ProductGroup) => {\r\n    if (productGroup.allProducts.length === 1) {\r\n      const product = productGroup.allProducts[0];\r\n      if (onEditProduct) {\r\n        onEditProduct(product);\r\n      } else {\r\n        setSelectedProduct(product);\r\n        setShowEditModal(true);\r\n      }\r\n    } else {\r\n      setSelectedProductGroup(productGroup);\r\n      setVariantAction('edit');\r\n      setShowVariantSelector(true);\r\n    }\r\n  };\r\n  const handleDeleteProduct = (productGroup: ProductGroup) => {\r\n    if (productGroup.allProducts.length === 1) {\r\n      const product = productGroup.allProducts[0];\r\n      if (onDeleteProduct) {\r\n        onDeleteProduct(product);\r\n      } else {\r\n        setSelectedProduct(product);\r\n        setShowDeleteDialog(true);\r\n      }\r\n    } else {\r\n      setSelectedProductGroup(productGroup);\r\n      setVariantAction('delete');\r\n      setShowVariantSelector(true);\r\n    }\r\n  };\r\n  const handleViewDetails = (productGroup: ProductGroup) => {\r\n    const product = productGroup.allProducts[0];\r\n    console.log('View product details:', product);\r\n  };\r\n  const handleVariantSelected = (product: Product) => {\r\n    setShowVariantSelector(false);\r\n    if (variantAction === 'edit') {\r\n      setSelectedProduct(product);\r\n      setShowEditModal(true);\r\n    } else if (variantAction === 'delete') {\r\n      setSelectedProduct(product);\r\n      setShowDeleteDialog(true);\r\n    }\r\n    setSelectedProductGroup(null);\r\n    setVariantAction(null);\r\n  };\r\n  const handleStartMergeFromEdit = (product: Product) => {\r\n    setShowEditModal(false);\r\n    setProductToPreselect(product);\r\n    setShowMergeSelection(true);\r\n  };\r\n  const handleMergeSelected = (selected: Product[]) => {\r\n    setProductsToMerge(selected);\r\n    setShowMergeSelection(false);\r\n    setShowMergeConfirm(true);\r\n  };\r\n  const handleMergeComplete = () => {\r\n    setShowMergeConfirm(false);\r\n    setProductsToMerge([]);\r\n    if (onRefresh) onRefresh();\r\n  };\r\n  const confirmDelete = async () => {\r\n    if (!selectedProduct) return;\r\n    \r\n    // Immediately close the dialog and reset state\r\n    setShowDeleteDialog(false);\r\n    setSelectedProduct(null);\r\n    \r\n    try {\r\n      await productService.deleteProduct(selectedProduct.id);\r\n      toast.success('Product deleted successfully');\r\n      if (onRefresh) onRefresh();\r\n    } catch (error) {\r\n      console.error('Failed to delete product:', error);\r\n      toast.error('Failed to delete product');\r\n    }\r\n  };\r\n  const handleProductAdded = () => {\r\n    setShowAddModal(false);\r\n    if (onRefresh) onRefresh();\r\n    toast.success('Product added successfully');\r\n  };\r\n  const handleProductUpdated = () => {\r\n    setShowEditModal(false);\r\n    setSelectedProduct(null);\r\n    if (onRefresh) onRefresh();\r\n    toast.success('Product updated successfully');\r\n  };\r\n  const handleCloneProduct = (productGroup: ProductGroup) => {\r\n    // Implement clone logic or open a modal for cloning\r\n    toast.info(`Clone product: ${productGroup.allProducts[0].name}`);\r\n  };\r\n  const handleMergeProduct = (productGroup: ProductGroup) => {\r\n    // Implement merge logic or open a modal for merging\r\n    setProductToPreselect(productGroup.allProducts[0]);\r\n    setShowMergeSelection(true);\r\n  };\r\n  return <div className=\"space-y-4\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        \r\n      </div>\r\n\r\n      {/* Search */}\r\n      <div className=\"relative\">\r\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n        <Input placeholder=\"Search products...\" value={searchQuery} onChange={e => setSearchQuery(e.target.value)} className=\"pl-10\" />\r\n      </div>\r\n\r\n      {/* Products List */}\r\n      {localLoading ? (\r\n        <CustomLoading message=\"Loading products...\" />\r\n      ) : (\r\n        filteredGroupedProducts.length === 0 ? <Card>\r\n            <CardContent className=\"p-6 text-center\">\r\n              <Package className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n              <p className=\"text-gray-500\">No products found</p>\r\n              <p className=\"text-sm text-gray-400 mt-1\">\r\n                {searchQuery ? 'Try adjusting your search' : 'No products available'}\r\n              </p>\r\n            </CardContent>\r\n          </Card> : <div className=\"space-y-3\">\r\n            {filteredGroupedProducts.map((productGroup, index) => <ProductCard key={`${productGroup.baseSku}-${index}`} productGroup={productGroup} onEdit={() => handleEditProduct(productGroup)} onDelete={() => handleDeleteProduct(productGroup)} onViewDetails={() => handleViewDetails(productGroup)} onClone={handleCloneProduct} onMerge={handleMergeProduct} />)}\r\n          </div>\r\n      )}\r\n\r\n      {/* Modals */}\r\n      {showAddModal && <AddProductModal isOpen={showAddModal} onClose={() => setShowAddModal(false)} onProductAdded={handleProductAdded} searchTerm=\"\" />}\r\n      {showEditModal && selectedProduct && <AdminEditProductModal isOpen={showEditModal} onClose={() => {\r\n      setShowEditModal(false);\r\n      setSelectedProduct(null);\r\n    }} product={selectedProduct} onProductUpdated={handleProductUpdated} onStartMerge={handleStartMergeFromEdit} />}\r\n      {showDeleteDialog && selectedProduct && (\r\n        <AlertDialog open={showDeleteDialog && !!selectedProduct} onOpenChange={(open) => {\r\n          if (!open) {\r\n            setShowDeleteDialog(false);\r\n            setSelectedProduct(null);\r\n          }\r\n        }}>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader>\r\n              <AlertDialogTitle>Delete Product: {selectedProduct.name}</AlertDialogTitle>\r\n              <AlertDialogDescription>\r\n                Are you sure you want to delete {selectedProduct.name} ({selectedProduct.sku})? This action cannot be undone.\r\n              </AlertDialogDescription>\r\n            </AlertDialogHeader>\r\n            <AlertDialogFooter>\r\n              <AlertDialogCancel>Cancel</AlertDialogCancel>\r\n              <AlertDialogAction onClick={confirmDelete} className=\"bg-red-600 hover:bg-red-700\">\r\n                Delete\r\n              </AlertDialogAction>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialog>\r\n      )}\r\n      {selectedProductGroup && <ProductVariantSelectionModal isOpen={showVariantSelector} onClose={() => {\r\n      setShowVariantSelector(false);\r\n      setSelectedProductGroup(null);\r\n      setVariantAction(null);\r\n    }} productGroup={selectedProductGroup} onProductSelect={handleVariantSelected} action={variantAction} />}\r\n      {showMergeSelection && <AdminProductSelectionModal isOpen={showMergeSelection} onClose={() => setShowMergeSelection(false)} onProductsSelected={handleMergeSelected} allProducts={products} initialSelectedProduct={productToPreselect} />}\r\n      {showMergeConfirm && <AdminMergeProductsModal isOpen={showMergeConfirm} onClose={() => setShowMergeConfirm(false)} products={productsToMerge} onMergeComplete={handleMergeComplete} />}\r\n      <PriceCheckModal isOpen={showPriceCheck} onClose={() => setShowPriceCheck(false)} />\r\n    </div>;\r\n};\r\nexport default ProductsTab;","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Product } from '@/types/database';\r\nimport ProductsTab from '@/components/admin-dashboard/components/ProductsTab';\r\nimport AddProductModal from '@/components/AddProductModal';\r\nimport { CustomLoading } from '@/components/ui/CustomLoading';\r\n\r\ninterface ProductTabContentProps {\r\n  isLoading: boolean;\r\n  filteredData: Product[];\r\n  searchQuery: string;\r\n  onDataRefresh: () => void;\r\n}\r\n\r\nconst ProductTabContent: React.FC<ProductTabContentProps> = ({\r\n  isLoading,\r\n  filteredData,\r\n  searchQuery,\r\n  onDataRefresh,\r\n}) => {\r\n  const [showAddProduct, setShowAddProduct] = useState(false);\r\n\r\n  const handleAddNew = () => {\r\n    setShowAddProduct(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <CustomLoading message=\"Loading products...\" />\r\n      ) : (\r\n        <ProductsTab\r\n          products={filteredData}\r\n          onEditClientPrice={() => {}}\r\n          onEditSupplierPrice={() => {}}\r\n          onRequestQuote={() => {}}\r\n        />\r\n      )}\r\n      {/* Add Product Modal */}\r\n      <AddProductModal\r\n        isOpen={showAddProduct}\r\n        onClose={() => setShowAddProduct(false)}\r\n        onProductAdded={() => {\r\n          setShowAddProduct(false);\r\n          onDataRefresh();\r\n        }}\r\n        searchTerm={searchQuery}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductTabContent; ","import { useState, useEffect } from \"react\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { supabase } from \"@/integrations/supabase/client\";\r\n\r\ninterface ClientPricing {\r\n  id: string;\r\n  product_id: string;\r\n  client_id: string;\r\n  quoted_price: number;\r\n  margin_percentage: number;\r\n  product_name: string;\r\n  product_sku: string;\r\n  client_name: string;\r\n  updated_at: string;\r\n  created_at: string;\r\n}\r\n\r\ninterface AddClientPricingFormProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSuccess: () => void;\r\n  editData?: ClientPricing | null;\r\n}\r\n\r\nexport const AddClientPricingForm: React.FC<AddClientPricingFormProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onSuccess,\r\n  editData\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    product_id: '',\r\n    client_id: '',\r\n    quoted_price: '',\r\n    margin_percentage: ''\r\n  });\r\n  const [products, setProducts] = useState<any[]>([]);\r\n  const [clients, setClients] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      fetchProducts();\r\n      fetchClients();\r\n      \r\n      if (editData) {\r\n        setFormData({\r\n          product_id: editData.product_id,\r\n          client_id: editData.client_id,\r\n          quoted_price: editData.quoted_price.toString(),\r\n          margin_percentage: editData.margin_percentage?.toString() || ''\r\n        });\r\n      } else {\r\n        setFormData({\r\n          product_id: '',\r\n          client_id: '',\r\n          quoted_price: '',\r\n          margin_percentage: ''\r\n        });\r\n      }\r\n    }\r\n  }, [isOpen, editData]);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('products')\r\n        .select('id, name, sku')\r\n        .order('name');\r\n      \r\n      if (error) throw error;\r\n      setProducts(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  const fetchClients = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('clients')\r\n        .select('id, name')\r\n        .order('name');\r\n      \r\n      if (error) throw error;\r\n      setClients(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching clients:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!formData.product_id || !formData.client_id || !formData.quoted_price) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Please fill in all required fields\",\r\n        variant: \"destructive\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const submitData = {\r\n        product_id: formData.product_id,\r\n        client_id: formData.client_id,\r\n        quoted_price: parseFloat(formData.quoted_price),\r\n        margin_percentage: formData.margin_percentage ? parseFloat(formData.margin_percentage) : null\r\n      };\r\n\r\n      if (editData) {\r\n        const { error } = await supabase\r\n          .from('product_clients')\r\n          .update(submitData)\r\n          .eq('id', editData.id);\r\n        \r\n        if (error) throw error;\r\n        \r\n        toast({\r\n          title: \"Success\",\r\n          description: \"Client pricing updated successfully\"\r\n        });\r\n      } else {\r\n        const { error } = await supabase\r\n          .from('product_clients')\r\n          .insert([submitData]);\r\n        \r\n        if (error) throw error;\r\n        \r\n        toast({\r\n          title: \"Success\",\r\n          description: \"Client pricing added successfully\"\r\n        });\r\n      }\r\n\r\n      onSuccess();\r\n      onClose();\r\n    } catch (error: any) {\r\n      console.error('Error saving client pricing:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.message || \"Failed to save client pricing\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-md\">\r\n        <DialogHeader>\r\n          <DialogTitle>\r\n            {editData ? 'Edit Client Pricing' : 'Add Client Pricing'}\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"product\">Product *</Label>\r\n            <Select\r\n              value={formData.product_id}\r\n              onValueChange={(value) => setFormData(prev => ({ ...prev, product_id: value }))}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select a product\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {products.map((product) => (\r\n                  <SelectItem key={product.id} value={product.id}>\r\n                    {product.name} ({product.sku})\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"client\">Client *</Label>\r\n            <Select\r\n              value={formData.client_id}\r\n              onValueChange={(value) => setFormData(prev => ({ ...prev, client_id: value }))}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select a client\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {clients.map((client) => (\r\n                  <SelectItem key={client.id} value={client.id}>\r\n                    {client.name}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"quoted_price\">Quoted Price *</Label>\r\n            <Input\r\n              id=\"quoted_price\"\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              placeholder=\"0.00\"\r\n              value={formData.quoted_price}\r\n              onChange={(e) => setFormData(prev => ({ ...prev, quoted_price: e.target.value }))}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"margin_percentage\">Margin Percentage</Label>\r\n            <Input\r\n              id=\"margin_percentage\"\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              placeholder=\"0.00\"\r\n              value={formData.margin_percentage}\r\n              onChange={(e) => setFormData(prev => ({ ...prev, margin_percentage: e.target.value }))}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-2 pt-4\">\r\n            <Button type=\"button\" variant=\"outline\" onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\" disabled={loading}>\r\n              {loading ? 'Saving...' : editData ? 'Update' : 'Add'}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};","import { useState, useEffect } from \"react\";\r\nimport { supabase } from \"@/integrations/supabase/client\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { Users, Search, Plus, TrendingUp, TrendingDown, Edit, Trash2 } from \"lucide-react\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { AddClientPricingForm } from \"./AddClientPricingForm\";\r\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from \"@/components/ui/alert-dialog\";\r\nimport { CustomLoading } from \"@/components/ui/CustomLoading\";\r\n\r\ninterface ClientPricing {\r\n  id: string;\r\n  product_id: string;\r\n  client_id: string;\r\n  quoted_price: number;\r\n  margin_percentage: number;\r\n  product_name: string;\r\n  product_sku: string;\r\n  product_color: string;\r\n  client_name: string;\r\n  updated_at: string;\r\n  created_at: string;\r\n}\r\n\r\nexport const ClientPricingTab = () => {\r\n  const [clientPricing, setClientPricing] = useState<ClientPricing[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [editData, setEditData] = useState<ClientPricing | null>(null);\r\n  const { toast } = useToast();\r\n\r\n  // Color mapping function\r\n  const getColorValue = (colorName: string | null) => {\r\n    if (!colorName) return '#6B7280'; // Gray for no color\r\n    \r\n    const colorMap: Record<string, string> = {\r\n      // Common printer colors\r\n      'black': '#000000',\r\n      'cyan': '#00BFFF',\r\n      'magenta': '#FF1493',\r\n      'yellow': '#FFD700',\r\n      'red': '#FF0000',\r\n      'blue': '#0000FF',\r\n      'green': '#008000',\r\n      'orange': '#FFA500',\r\n      'purple': '#800080',\r\n      'pink': '#FFC0CB',\r\n      'brown': '#A52A2A',\r\n      'gray': '#808080',\r\n      'grey': '#808080',\r\n      'white': '#FFFFFF',\r\n      'monochrome': '#000000',\r\n      // HP specific colors\r\n      'tri-color': '#FF1493', // Magenta for tri-color\r\n      'photo': '#4169E1', // Royal blue for photo\r\n      // Brother colors\r\n      'lc': '#00BFFF', // Light cyan\r\n      'lm': '#FFB6C1', // Light magenta\r\n      'ly': '#FFFFE0', // Light yellow\r\n      // Canon colors\r\n      'pgi': '#000000', // Pigment black\r\n      'cli': '#00BFFF', // Dye-based colors\r\n    };\r\n\r\n    const normalizedColor = colorName.toLowerCase().trim();\r\n    \r\n    // Direct match\r\n    if (colorMap[normalizedColor]) {\r\n      return colorMap[normalizedColor];\r\n    }\r\n    \r\n    // Partial matches\r\n    if (normalizedColor.includes('black')) return '#000000';\r\n    if (normalizedColor.includes('cyan')) return '#00BFFF';\r\n    if (normalizedColor.includes('magenta')) return '#FF1493';\r\n    if (normalizedColor.includes('yellow')) return '#FFD700';\r\n    if (normalizedColor.includes('red')) return '#FF0000';\r\n    if (normalizedColor.includes('blue')) return '#0000FF';\r\n    if (normalizedColor.includes('green')) return '#008000';\r\n    \r\n    // Default to gray for unknown colors\r\n    return '#6B7280';\r\n  };\r\n\r\n  const fetchClientPricing = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('product_clients')\r\n        .select(`\r\n          id,\r\n          product_id,\r\n          client_id,\r\n          quoted_price,\r\n          margin_percentage,\r\n          updated_at,\r\n          created_at,\r\n          products (\r\n            name,\r\n            sku,\r\n            color\r\n          ),\r\n          clients (\r\n            name\r\n          )\r\n        `)\r\n        .order('updated_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n\r\n      const formattedData: ClientPricing[] = (data || []).map(item => ({\r\n        id: item.id,\r\n        product_id: item.product_id,\r\n        client_id: item.client_id,\r\n        quoted_price: item.quoted_price,\r\n        margin_percentage: item.margin_percentage,\r\n        product_name: item.products?.name || 'Unknown Product',\r\n        product_sku: item.products?.sku || 'N/A',\r\n        product_color: item.products?.color || null,\r\n        client_name: item.clients?.name || 'Unknown Client',\r\n        updated_at: item.updated_at,\r\n        created_at: item.created_at\r\n      }));\r\n\r\n      setClientPricing(formattedData);\r\n    } catch (error) {\r\n      console.error('Error fetching client pricing:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to fetch client pricing data\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchClientPricing();\r\n  }, []);\r\n\r\n  const filteredPricing = clientPricing.filter(pricing =>\r\n    pricing.product_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    pricing.product_sku.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    pricing.client_name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // Group by product to show price comparison\r\n  const groupedByProduct = filteredPricing.reduce((acc, pricing) => {\r\n    const key = `${pricing.product_id}`;\r\n    if (!acc[key]) {\r\n      acc[key] = {\r\n        product_name: pricing.product_name,\r\n        product_sku: pricing.product_sku,\r\n        product_color: pricing.product_color,\r\n        clients: []\r\n      };\r\n    }\r\n    acc[key].clients.push(pricing);\r\n    return acc;\r\n  }, {} as Record<string, { product_name: string; product_sku: string; product_color: string; clients: ClientPricing[] }>);\r\n\r\n  const getBestPrice = (clients: ClientPricing[]) => {\r\n    return Math.max(...clients.map(c => c.quoted_price));\r\n  };\r\n\r\n  const getWorstPrice = (clients: ClientPricing[]) => {\r\n    return Math.min(...clients.map(c => c.quoted_price));\r\n  };\r\n\r\n  const handleEdit = (pricing: ClientPricing) => {\r\n    setEditData(pricing);\r\n    setShowAddForm(true);\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('product_clients')\r\n        .delete()\r\n        .eq('id', id);\r\n\r\n      if (error) throw error;\r\n\r\n      toast({ title: \"Success\", description: \"Client pricing deleted successfully\" });\r\n      fetchClientPricing();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to delete client pricing\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleFormClose = () => {\r\n    setShowAddForm(false);\r\n    setEditData(null);\r\n  };\r\n\r\n  const handleFormSuccess = () => {\r\n    fetchClientPricing();\r\n  };\r\n\r\n  if (loading) {\r\n    return <CustomLoading message=\"Loading client pricing\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* Mobile Header */}\r\n      <div className=\"flex flex-col gap-3\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h2 className=\"text-lg font-semibold\">Client Pricing</h2>\r\n          <Button \r\n            size=\"sm\" \r\n            onClick={() => setShowAddForm(true)}\r\n            className=\"h-8 px-3\"\r\n          >\r\n            <Plus className=\"h-4 w-4 mr-1\" />\r\n            Add\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Mobile Search */}\r\n        <div className=\"relative\">\r\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n          <Input\r\n            placeholder=\"Search products, SKU, or clients...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"pl-10 h-10 text-sm\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile-First Content */}\r\n      <div className=\"space-y-3\">\r\n        {Object.keys(groupedByProduct).length === 0 ? (\r\n          <Card className=\"border-gray-200\">\r\n            <CardContent className=\"p-6 text-center\">\r\n              <Users className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\r\n              <h3 className=\"text-base font-medium text-muted-foreground mb-2\">\r\n                {searchTerm ? \"No pricing found\" : \"No client pricing yet\"}\r\n              </h3>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                {searchTerm \r\n                  ? \"Try adjusting your search terms\" \r\n                  : \"Start by adding client pricing for your products\"\r\n                }\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n        ) : (\r\n          Object.entries(groupedByProduct).map(([productId, productData]) => {\r\n            const bestPrice = getBestPrice(productData.clients);\r\n            const worstPrice = getWorstPrice(productData.clients);\r\n            const sortedClients = [...productData.clients].sort((a, b) => b.quoted_price - a.quoted_price);\r\n            const colorValue = getColorValue(productData.product_color);\r\n            \r\n            return (\r\n              <Card key={productId} className=\"hover:shadow-md transition-shadow border-gray-200\">\r\n                <CardHeader className=\"pb-2 px-3 pt-3\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center gap-2 flex-1 min-w-0\">\r\n                      {/* Color Dot Indicator */}\r\n                      <div \r\n                        className=\"w-3 h-3 rounded-full flex-shrink-0 border border-gray-300\"\r\n                        style={{ \r\n                          backgroundColor: colorValue,\r\n                          boxShadow: colorValue === '#FFFFFF' ? 'inset 0 0 0 1px #D1D5DB' : 'none'\r\n                        }}\r\n                        title={productData.product_color || 'No color specified'}\r\n                      />\r\n                      <CardTitle className=\"text-sm truncate\">{productData.product_name}</CardTitle>\r\n                      <Badge variant=\"outline\" className=\"text-xs flex-shrink-0\">\r\n                        {productData.product_sku}\r\n                      </Badge>\r\n                    </div>\r\n                    <div className=\"text-right text-xs flex-shrink-0\">\r\n                      <div className=\"text-green-600 font-semibold\">\r\n                        Best: ₱{bestPrice.toFixed(2)}\r\n                      </div>\r\n                      {productData.clients.length > 1 && (\r\n                        <div className=\"text-muted-foreground\">\r\n                          Range: ₱{(bestPrice - worstPrice).toFixed(2)}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </CardHeader>\r\n                \r\n                <CardContent className=\"pt-0 px-3 pb-3\">\r\n                  <div className=\"space-y-2\">\r\n                    {sortedClients.map((client, index) => {\r\n                      const isBest = client.quoted_price === bestPrice && productData.clients.length > 1;\r\n                      const isWorst = client.quoted_price === worstPrice && productData.clients.length > 1;\r\n                      \r\n                      return (\r\n                        <div key={client.id} className=\"flex items-center justify-between p-2 rounded-lg bg-gray-50\">\r\n                          <div className=\"flex items-center gap-2 flex-1 min-w-0\">\r\n                            <Users className=\"h-4 w-4 text-muted-foreground flex-shrink-0\" />\r\n                            <span className=\"font-medium text-xs truncate\">{client.client_name}</span>\r\n                            {isBest && (\r\n                              <Badge variant=\"outline\" className=\"text-xs text-green-700 border-green-200 flex-shrink-0\">\r\n                                <TrendingUp className=\"h-2 w-2 mr-1\" />\r\n                                Best\r\n                              </Badge>\r\n                            )}\r\n                            {isWorst && (\r\n                              <Badge variant=\"outline\" className=\"text-xs text-orange-700 border-orange-200 flex-shrink-0\">\r\n                                <TrendingDown className=\"h-2 w-2 mr-1\" />\r\n                                Low\r\n                              </Badge>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n                            <div className=\"text-right\">\r\n                              <div className={`font-semibold text-xs ${isBest ? 'text-green-600' : ''}`}>\r\n                                ₱{client.quoted_price.toFixed(2)}\r\n                              </div>\r\n                              <div className=\"text-xs text-muted-foreground\">\r\n                                {client.margin_percentage ? `${client.margin_percentage}% margin` : 'No margin'}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex gap-1\">\r\n                              <Button\r\n                                size=\"sm\"\r\n                                variant=\"ghost\"\r\n                                onClick={() => handleEdit(client)}\r\n                                className=\"h-6 w-6 p-0\"\r\n                              >\r\n                                <Edit className=\"h-3 w-3\" />\r\n                              </Button>\r\n                              <AlertDialog>\r\n                                <AlertDialogTrigger asChild>\r\n                                  <Button size=\"sm\" variant=\"ghost\" className=\"h-6 w-6 p-0 text-destructive hover:text-destructive\">\r\n                                    <Trash2 className=\"h-3 w-3\" />\r\n                                  </Button>\r\n                                </AlertDialogTrigger>\r\n                                <AlertDialogContent className=\"mx-4 max-w-sm\">\r\n                                  <AlertDialogHeader>\r\n                                    <AlertDialogTitle className=\"text-base\">Delete Client Pricing</AlertDialogTitle>\r\n                                    <AlertDialogDescription className=\"text-sm\">\r\n                                      Are you sure you want to delete this pricing for {client.client_name}? This action cannot be undone.\r\n                                    </AlertDialogDescription>\r\n                                  </AlertDialogHeader>\r\n                                  <AlertDialogFooter>\r\n                                    <AlertDialogCancel className=\"text-sm\">Cancel</AlertDialogCancel>\r\n                                    <AlertDialogAction onClick={() => handleDelete(client.id)} className=\"bg-destructive text-destructive-foreground hover:bg-destructive/90 text-sm\">\r\n                                      Delete\r\n                                    </AlertDialogAction>\r\n                                  </AlertDialogFooter>\r\n                                </AlertDialogContent>\r\n                              </AlertDialog>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n\r\n      {/* Mobile Revenue Analysis Summary */}\r\n      {filteredPricing.length > 0 && (\r\n        <Card className=\"bg-blue-50 dark:bg-blue-950/30 border-blue-200\">\r\n          <CardHeader className=\"pb-2 px-3 pt-3\">\r\n            <CardTitle className=\"text-sm text-blue-700 dark:text-blue-400\">Revenue Analysis</CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"pt-0 px-3 pb-3\">\r\n            <div className=\"grid grid-cols-2 gap-3 text-xs\">\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-blue-600 dark:text-blue-400\">Clients:</span>\r\n                <span className=\"font-semibold\">\r\n                  {new Set(filteredPricing.map(p => p.client_id)).size}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-blue-600 dark:text-blue-400\">Avg Price:</span>\r\n                <span className=\"font-semibold\">\r\n                  ₱{(filteredPricing.reduce((sum, p) => sum + p.quoted_price, 0) / filteredPricing.length).toFixed(2)}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-blue-600 dark:text-blue-400\">Products:</span>\r\n                <span className=\"font-semibold\">\r\n                  {new Set(filteredPricing.map(p => p.product_id)).size}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-blue-600 dark:text-blue-400\">Avg Margin:</span>\r\n                <span className=\"font-semibold\">\r\n                  {(filteredPricing.reduce((sum, p) => sum + (p.margin_percentage || 0), 0) / filteredPricing.length).toFixed(1)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Add/Edit Form Modal */}\r\n      <AddClientPricingForm \r\n        isOpen={showAddForm}\r\n        onClose={handleFormClose}\r\n        onSuccess={handleFormSuccess}\r\n        editData={editData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import * as SheetPrimitive from \"@radix-ui/react-dialog\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { X } from \"lucide-react\"\r\nimport * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Sheet = SheetPrimitive.Root\r\n\r\nconst SheetTrigger = SheetPrimitive.Trigger\r\n\r\nconst SheetClose = SheetPrimitive.Close\r\n\r\nconst SheetPortal = SheetPrimitive.Portal\r\n\r\nconst SheetOverlay = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Overlay\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  />\r\n))\r\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\r\n\r\nconst sheetVariants = cva(\r\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\r\n  {\r\n    variants: {\r\n      side: {\r\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\r\n        bottom:\r\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\r\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\r\n        right:\r\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      side: \"right\",\r\n    },\r\n  }\r\n)\r\n\r\ninterface SheetContentProps\r\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\r\n  VariantProps<typeof sheetVariants> { }\r\n\r\nconst SheetContent = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Content>,\r\n  SheetContentProps\r\n>(({ side = \"right\", className, children, ...props }, ref) => (\r\n  <SheetPortal>\r\n    <SheetOverlay />\r\n    <SheetPrimitive.Content\r\n      ref={ref}\r\n      className={cn(sheetVariants({ side }), className)}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </SheetPrimitive.Close>\r\n    </SheetPrimitive.Content>\r\n  </SheetPortal>\r\n))\r\nSheetContent.displayName = SheetPrimitive.Content.displayName\r\n\r\nconst SheetHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-2 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nSheetHeader.displayName = \"SheetHeader\"\r\n\r\nconst SheetFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nSheetFooter.displayName = \"SheetFooter\"\r\n\r\nconst SheetTitle = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSheetTitle.displayName = SheetPrimitive.Title.displayName\r\n\r\nconst SheetDescription = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSheetDescription.displayName = SheetPrimitive.Description.displayName\r\n\r\nexport {\r\n  Sheet, SheetClose,\r\n  SheetContent, SheetDescription, SheetFooter, SheetHeader, SheetOverlay, SheetPortal, SheetTitle, SheetTrigger\r\n}\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport { supabase } from \"@/integrations/supabase/client\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Sheet, SheetContent, SheetDescription, SheetHeader, SheetTitle } from \"@/components/ui/sheet\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { Loader2 } from \"lucide-react\";\r\n\r\ninterface AddSupplierPricingFormProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSuccess?: () => void;\r\n  editData?: {\r\n    id: string;\r\n    product_id: string;\r\n    supplier_id: string;\r\n    current_price: number;\r\n  } | null;\r\n}\r\n\r\ninterface Product {\r\n  id: string;\r\n  name: string;\r\n  sku: string;\r\n}\r\n\r\ninterface Supplier {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport const AddSupplierPricingForm = ({ isOpen, onClose, onSuccess, editData }: AddSupplierPricingFormProps) => {\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [suppliers, setSuppliers] = useState<Supplier[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    product_id: \"\",\r\n    supplier_id: \"\",\r\n    current_price: \"\"\r\n  });\r\n  const { toast } = useToast();\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      fetchProducts();\r\n      fetchSuppliers();\r\n      if (editData) {\r\n        setFormData({\r\n          product_id: editData.product_id,\r\n          supplier_id: editData.supplier_id,\r\n          current_price: editData.current_price.toString()\r\n        });\r\n      }\r\n    }\r\n  }, [isOpen, editData]);\r\n\r\n  const fetchProducts = async () => {\r\n    const { data } = await supabase\r\n      .from('products')\r\n      .select('id, name, sku')\r\n      .order('name');\r\n    setProducts(data || []);\r\n  };\r\n\r\n  const fetchSuppliers = async () => {\r\n    const { data } = await supabase\r\n      .from('suppliers')\r\n      .select('id, name')\r\n      .order('name');\r\n    setSuppliers(data || []);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const data = {\r\n        product_id: formData.product_id,\r\n        supplier_id: formData.supplier_id,\r\n        current_price: parseFloat(formData.current_price)\r\n      };\r\n\r\n      if (editData) {\r\n        const { error } = await supabase\r\n          .from('product_suppliers')\r\n          .update(data)\r\n          .eq('id', editData.id);\r\n        \r\n        if (error) throw error;\r\n        toast({ title: \"Success\", description: \"Supplier pricing updated successfully\" });\r\n      } else {\r\n        const { error } = await supabase\r\n          .from('product_suppliers')\r\n          .insert([data]);\r\n        \r\n        if (error) throw error;\r\n        toast({ title: \"Success\", description: \"Supplier pricing added successfully\" });\r\n      }\r\n\r\n      setFormData({ product_id: \"\", supplier_id: \"\", current_price: \"\" });\r\n      onSuccess?.();\r\n      onClose();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: editData ? \"Failed to update supplier pricing\" : \"Failed to add supplier pricing\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Sheet open={isOpen} onOpenChange={onClose}>\r\n      <SheetContent side=\"bottom\" className=\"h-[90vh]\">\r\n        <SheetHeader className=\"pb-4\">\r\n          <SheetTitle>{editData ? \"Edit Supplier Pricing\" : \"Add Supplier Pricing\"}</SheetTitle>\r\n          <SheetDescription>\r\n            {editData ? \"Update pricing information for this supplier\" : \"Set pricing for a product and supplier combination\"}\r\n          </SheetDescription>\r\n        </SheetHeader>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"product\">Product</Label>\r\n            <Select\r\n              value={formData.product_id}\r\n              onValueChange={(value) => setFormData(prev => ({ ...prev, product_id: value }))}\r\n              disabled={loading}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select a product\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {products.map((product) => (\r\n                  <SelectItem key={product.id} value={product.id}>\r\n                    {product.name} ({product.sku})\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"supplier\">Supplier</Label>\r\n            <Select\r\n              value={formData.supplier_id}\r\n              onValueChange={(value) => setFormData(prev => ({ ...prev, supplier_id: value }))}\r\n              disabled={loading}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select a supplier\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {suppliers.map((supplier) => (\r\n                  <SelectItem key={supplier.id} value={supplier.id}>\r\n                    {supplier.name}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"current_price\">Current Price (₱)</Label>\r\n            <Input\r\n              id=\"current_price\"\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              value={formData.current_price}\r\n              onChange={(e) => setFormData(prev => ({ ...prev, current_price: e.target.value }))}\r\n              disabled={loading}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex gap-2 pt-4\">\r\n            <Button type=\"submit\" disabled={loading} className=\"flex-1\">\r\n              {loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\r\n              {editData ? \"Update Pricing\" : \"Add Pricing\"}\r\n            </Button>\r\n            <Button type=\"button\" variant=\"outline\" onClick={onClose} disabled={loading}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </SheetContent>\r\n    </Sheet>\r\n  );\r\n};","import { useState, useEffect } from \"react\";\r\nimport { supabase } from \"@/integrations/supabase/client\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { Truck, Search, Plus, TrendingUp, TrendingDown, Edit, Trash2 } from \"lucide-react\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { AddSupplierPricingForm } from \"@/components/forms/AddSupplierPricingForm\";\r\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from \"@/components/ui/alert-dialog\";\r\nimport { CustomLoading } from \"@/components/ui/CustomLoading\";\r\n\r\ninterface SupplierPricing {\r\n  id: string;\r\n  product_id: string;\r\n  supplier_id: string;\r\n  current_price: number;\r\n  product_name: string;\r\n  product_sku: string;\r\n  product_color: string;\r\n  supplier_name: string;\r\n  updated_at: string;\r\n  created_at: string;\r\n}\r\n\r\nexport const SupplierPricingTab = () => {\r\n  const [supplierPricing, setSupplierPricing] = useState<SupplierPricing[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [editData, setEditData] = useState<SupplierPricing | null>(null);\r\n  const { toast } = useToast();\r\n\r\n  // Color mapping function (same as ClientPricingTab)\r\n  const getColorValue = (colorName: string | null) => {\r\n    if (!colorName) return '#6B7280'; // Gray for no color\r\n    \r\n    const colorMap: Record<string, string> = {\r\n      // Common printer colors\r\n      'black': '#000000',\r\n      'cyan': '#00BFFF',\r\n      'magenta': '#FF1493',\r\n      'yellow': '#FFD700',\r\n      'red': '#FF0000',\r\n      'blue': '#0000FF',\r\n      'green': '#008000',\r\n      'orange': '#FFA500',\r\n      'purple': '#800080',\r\n      'pink': '#FFC0CB',\r\n      'brown': '#A52A2A',\r\n      'gray': '#808080',\r\n      'grey': '#808080',\r\n      'white': '#FFFFFF',\r\n      'monochrome': '#000000',\r\n      // HP specific colors\r\n      'tri-color': '#FF1493', // Magenta for tri-color\r\n      'photo': '#4169E1', // Royal blue for photo\r\n      // Brother colors\r\n      'lc': '#00BFFF', // Light cyan\r\n      'lm': '#FFB6C1', // Light magenta\r\n      'ly': '#FFFFE0', // Light yellow\r\n      // Canon colors\r\n      'pgi': '#000000', // Pigment black\r\n      'cli': '#00BFFF', // Dye-based colors\r\n    };\r\n\r\n    const normalizedColor = colorName.toLowerCase().trim();\r\n    \r\n    // Direct match\r\n    if (colorMap[normalizedColor]) {\r\n      return colorMap[normalizedColor];\r\n    }\r\n    \r\n    // Partial matches\r\n    if (normalizedColor.includes('black')) return '#000000';\r\n    if (normalizedColor.includes('cyan')) return '#00BFFF';\r\n    if (normalizedColor.includes('magenta')) return '#FF1493';\r\n    if (normalizedColor.includes('yellow')) return '#FFD700';\r\n    if (normalizedColor.includes('red')) return '#FF0000';\r\n    if (normalizedColor.includes('blue')) return '#0000FF';\r\n    if (normalizedColor.includes('green')) return '#008000';\r\n    \r\n    // Default to gray for unknown colors\r\n    return '#6B7280';\r\n  };\r\n\r\n  const fetchSupplierPricing = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('product_suppliers')\r\n        .select(`\r\n          id,\r\n          product_id,\r\n          supplier_id,\r\n          current_price,\r\n          updated_at,\r\n          created_at,\r\n          products (\r\n            name,\r\n            sku,\r\n            color\r\n          ),\r\n          suppliers (\r\n            name\r\n          )\r\n        `)\r\n        .order('updated_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n\r\n      const formattedData: SupplierPricing[] = (data || []).map(item => ({\r\n        id: item.id,\r\n        product_id: item.product_id,\r\n        supplier_id: item.supplier_id,\r\n        current_price: item.current_price,\r\n        product_name: item.products?.name || 'Unknown Product',\r\n        product_sku: item.products?.sku || 'N/A',\r\n        product_color: item.products?.color || null,\r\n        supplier_name: item.suppliers?.name || 'Unknown Supplier',\r\n        updated_at: item.updated_at,\r\n        created_at: item.created_at\r\n      }));\r\n\r\n      setSupplierPricing(formattedData);\r\n    } catch (error) {\r\n      console.error('Error fetching supplier pricing:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to fetch supplier pricing data\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSupplierPricing();\r\n  }, []);\r\n\r\n  const filteredPricing = supplierPricing.filter(pricing =>\r\n    pricing.product_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    pricing.product_sku.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    pricing.supplier_name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // Group by product to show price comparison\r\n  const groupedByProduct = filteredPricing.reduce((acc, pricing) => {\r\n    const key = `${pricing.product_id}`;\r\n    if (!acc[key]) {\r\n      acc[key] = {\r\n        product_name: pricing.product_name,\r\n        product_sku: pricing.product_sku,\r\n        product_color: pricing.product_color,\r\n        suppliers: []\r\n      };\r\n    }\r\n    acc[key].suppliers.push(pricing);\r\n    return acc;\r\n  }, {} as Record<string, { product_name: string; product_sku: string; product_color: string; suppliers: SupplierPricing[] }>);\r\n\r\n  const getBestPrice = (suppliers: SupplierPricing[]) => {\r\n    return Math.min(...suppliers.map(s => s.current_price));\r\n  };\r\n\r\n  const getWorstPrice = (suppliers: SupplierPricing[]) => {\r\n    return Math.max(...suppliers.map(s => s.current_price));\r\n  };\r\n\r\n  const handleEdit = (pricing: SupplierPricing) => {\r\n    setEditData(pricing);\r\n    setShowAddForm(true);\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('product_suppliers')\r\n        .delete()\r\n        .eq('id', id);\r\n\r\n      if (error) throw error;\r\n\r\n      toast({ title: \"Success\", description: \"Supplier pricing deleted successfully\" });\r\n      fetchSupplierPricing();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to delete supplier pricing\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleFormClose = () => {\r\n    setShowAddForm(false);\r\n    setEditData(null);\r\n  };\r\n\r\n  const handleFormSuccess = () => {\r\n    fetchSupplierPricing();\r\n  };\r\n\r\n  if (loading) {\r\n    return <CustomLoading message=\"Loading supplier pricing\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* Mobile Header */}\r\n      <div className=\"flex flex-col gap-3\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h2 className=\"text-lg font-semibold\">Supplier Pricing</h2>\r\n          <Button size=\"sm\" onClick={() => setShowAddForm(true)} className=\"h-8 px-3\">\r\n            <Plus className=\"h-4 w-4 mr-1\" />\r\n            Add\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Mobile Search */}\r\n        <div className=\"relative\">\r\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n          <Input\r\n            placeholder=\"Search products, SKU, or suppliers...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"pl-10 h-10 text-sm\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile-First Content */}\r\n      <div className=\"space-y-3\">\r\n        {Object.keys(groupedByProduct).length === 0 ? (\r\n          <Card className=\"border-gray-200\">\r\n            <CardContent className=\"p-6 text-center\">\r\n              <Truck className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\r\n              <h3 className=\"text-base font-medium text-muted-foreground mb-2\">\r\n                {searchTerm ? \"No pricing found\" : \"No supplier pricing yet\"}\r\n              </h3>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                {searchTerm \r\n                  ? \"Try adjusting your search terms\" \r\n                  : \"Start by adding supplier pricing for your products\"\r\n                }\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n        ) : (\r\n          Object.entries(groupedByProduct).map(([productId, productData]) => {\r\n            const bestPrice = getBestPrice(productData.suppliers);\r\n            const worstPrice = getWorstPrice(productData.suppliers);\r\n            const sortedSuppliers = [...productData.suppliers].sort((a, b) => a.current_price - b.current_price);\r\n            const colorValue = getColorValue(productData.product_color);\r\n            \r\n            return (\r\n              <Card key={productId} className=\"hover:shadow-md transition-shadow border-gray-200\">\r\n                <CardHeader className=\"pb-2 px-3 pt-3\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center gap-2 flex-1 min-w-0\">\r\n                      {/* Color Dot Indicator */}\r\n                      <div \r\n                        className=\"w-3 h-3 rounded-full flex-shrink-0 border border-gray-300\"\r\n                        style={{ \r\n                          backgroundColor: colorValue,\r\n                          boxShadow: colorValue === '#FFFFFF' ? 'inset 0 0 0 1px #D1D5DB' : 'none'\r\n                        }}\r\n                        title={productData.product_color || 'No color specified'}\r\n                      />\r\n                      <CardTitle className=\"text-sm truncate\">{productData.product_name}</CardTitle>\r\n                      <Badge variant=\"outline\" className=\"text-xs flex-shrink-0\">\r\n                        {productData.product_sku}\r\n                      </Badge>\r\n                    </div>\r\n                    <div className=\"text-right text-xs flex-shrink-0\">\r\n                      <div className=\"text-green-600 font-semibold\">\r\n                        Best: ₱{bestPrice.toFixed(2)}\r\n                      </div>\r\n                      {productData.suppliers.length > 1 && (\r\n                        <div className=\"text-muted-foreground\">\r\n                          Range: ₱{(worstPrice - bestPrice).toFixed(2)}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </CardHeader>\r\n                \r\n                <CardContent className=\"pt-0 px-3 pb-3\">\r\n                  <div className=\"space-y-2\">\r\n                    {sortedSuppliers.map((supplier, index) => {\r\n                      const isBest = supplier.current_price === bestPrice && productData.suppliers.length > 1;\r\n                      const isWorst = supplier.current_price === worstPrice && productData.suppliers.length > 1;\r\n                      \r\n                      return (\r\n                        <div key={supplier.id} className=\"flex items-center justify-between p-2 rounded-lg bg-gray-50\">\r\n                          <div className=\"flex items-center gap-2 flex-1 min-w-0\">\r\n                            <Truck className=\"h-4 w-4 text-muted-foreground flex-shrink-0\" />\r\n                            <span className=\"font-medium text-xs truncate\">{supplier.supplier_name}</span>\r\n                            {isBest && (\r\n                              <Badge variant=\"outline\" className=\"text-xs text-green-700 border-green-200 flex-shrink-0\">\r\n                                <TrendingDown className=\"h-2 w-2 mr-1\" />\r\n                                Best\r\n                              </Badge>\r\n                            )}\r\n                            {isWorst && (\r\n                              <Badge variant=\"outline\" className=\"text-xs text-orange-700 border-orange-200 flex-shrink-0\">\r\n                                <TrendingUp className=\"h-2 w-2 mr-1\" />\r\n                                High\r\n                              </Badge>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n                            <div className=\"text-right\">\r\n                              <div className={`font-semibold text-xs ${isBest ? 'text-green-600' : ''}`}>\r\n                                ₱{supplier.current_price.toFixed(2)}\r\n                              </div>\r\n                              <div className=\"text-xs text-muted-foreground\">\r\n                                {new Date(supplier.updated_at).toLocaleDateString()}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex gap-1\">\r\n                              <Button\r\n                                size=\"sm\"\r\n                                variant=\"ghost\"\r\n                                onClick={() => handleEdit(supplier)}\r\n                                className=\"h-6 w-6 p-0\"\r\n                              >\r\n                                <Edit className=\"h-3 w-3\" />\r\n                              </Button>\r\n                              <AlertDialog>\r\n                                <AlertDialogTrigger asChild>\r\n                                  <Button size=\"sm\" variant=\"ghost\" className=\"h-6 w-6 p-0 text-destructive hover:text-destructive\">\r\n                                    <Trash2 className=\"h-3 w-3\" />\r\n                                  </Button>\r\n                                </AlertDialogTrigger>\r\n                                <AlertDialogContent className=\"mx-4 max-w-sm\">\r\n                                  <AlertDialogHeader>\r\n                                    <AlertDialogTitle className=\"text-base\">Delete Supplier Pricing</AlertDialogTitle>\r\n                                    <AlertDialogDescription className=\"text-sm\">\r\n                                      Are you sure you want to delete this pricing for {supplier.supplier_name}? This action cannot be undone.\r\n                                    </AlertDialogDescription>\r\n                                  </AlertDialogHeader>\r\n                                  <AlertDialogFooter>\r\n                                    <AlertDialogCancel className=\"text-sm\">Cancel</AlertDialogCancel>\r\n                                    <AlertDialogAction onClick={() => handleDelete(supplier.id)} className=\"bg-destructive text-destructive-foreground hover:bg-destructive/90 text-sm\">\r\n                                      Delete\r\n                                    </AlertDialogAction>\r\n                                  </AlertDialogFooter>\r\n                                </AlertDialogContent>\r\n                              </AlertDialog>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n\r\n      {/* Mobile Cost Analysis Summary */}\r\n      {filteredPricing.length > 0 && (\r\n        <Card className=\"bg-green-50 dark:bg-green-950/30 border-green-200\">\r\n          <CardHeader className=\"pb-2 px-3 pt-3\">\r\n            <CardTitle className=\"text-sm text-green-700 dark:text-green-400\">Cost Analysis</CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"pt-0 px-3 pb-3\">\r\n            <div className=\"grid grid-cols-2 gap-3 text-xs\">\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-green-600 dark:text-green-400\">Suppliers:</span>\r\n                <span className=\"font-semibold\">\r\n                  {new Set(filteredPricing.map(p => p.supplier_id)).size}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-green-600 dark:text-green-400\">Avg Cost:</span>\r\n                <span className=\"font-semibold\">\r\n                  ₱{(filteredPricing.reduce((sum, p) => sum + p.current_price, 0) / filteredPricing.length).toFixed(2)}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-green-600 dark:text-green-400\">Products:</span>\r\n                <span className=\"font-semibold\">\r\n                  {new Set(filteredPricing.map(p => p.product_id)).size}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <span className=\"text-green-600 dark:text-green-400\">Records:</span>\r\n                <span className=\"font-semibold\">\r\n                  {filteredPricing.length}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Add/Edit Form Modal */}\r\n      <AddSupplierPricingForm \r\n        isOpen={showAddForm}\r\n        onClose={handleFormClose}\r\n        onSuccess={handleFormSuccess}\r\n        editData={editData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { Package, Users, Truck, Plus, ArrowLeft } from 'lucide-react';\r\nimport { useIsMobile } from '@/hooks/use-mobile';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { productService } from '@/services/productService';\r\nimport TopMobileHeader from '@/includes/TopMobileHeader';\r\nimport ProductTabContent from './components/ProductTabContent';\r\nimport ErrorBoundary from '@/components/common/ErrorBoundary';\r\nimport { SEARCH_PLACEHOLDERS, LOADING_MESSAGES } from '@/constants/adminDashboard';\r\nimport { Button } from '@/components/ui/button';\r\nimport { BottomNavigation as ProductDashboardNav } from './ProductDashboardNav';\r\nimport AddProductModal from '@/components/AddProductModal';\r\nimport PriceCheckModal from '@/components/admin-dashboard/components/PriceCheckModal';\r\nimport { ClientPricingTab } from './ClientPricingTab';\r\nimport { SupplierPricingTab } from './SupplierPricingTab';\r\nimport { PullToRefresh } from '@/components/ui/PullToRefresh';\r\nimport { useRefreshFunctions } from '@/hooks/useRefreshFunctions';\r\nimport BottomMobileNavigation from '@/includes/BottomMobileNavigation';\r\n\r\n// Placeholder client object for header\r\nconst placeholderClient = {\r\n  id: 'placeholder',\r\n  name: 'Product Catalog',\r\n  contact_person: '',\r\n  contact_email: '',\r\n  phone: '',\r\n  address: '',\r\n  department_count: 0,\r\n  location_count: 0,\r\n  printer_count: 0,\r\n  notes: '',\r\n  created_at: '1970-01-01T00:00:00Z',\r\n  updated_at: '1970-01-01T00:00:00Z'\r\n};\r\n\r\nconst ProductDashboard: React.FC = () => {\r\n  const isMobile = useIsMobile();\r\n  const location = useLocation();\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const navigate = useNavigate();\r\n  const [showAddProduct, setShowAddProduct] = useState(false);\r\n  const [showPriceCheck, setShowPriceCheck] = useState(false);\r\n  const [activeTab, setActiveTab] = useState<'products' | 'client-pricing' | 'supplier-pricing'>('products');\r\n\r\n  // Fetch products\r\n  const {\r\n    data: products = [],\r\n    isLoading: productsLoading,\r\n    refetch: refetchProducts\r\n  } = useQuery({\r\n    queryKey: ['products'],\r\n    queryFn: () => productService.getProducts()\r\n  });\r\n\r\n  // Get refresh functions\r\n  const { refreshProducts } = useRefreshFunctions();\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-purple-50\">\r\n        {/* Mobile-First Container */}\r\n        <div className=\"w-full min-h-screen bg-white shadow-xl\">\r\n          {/* Mobile Header */}\r\n          <div className=\"sticky top-0 z-30 bg-gradient-to-r from-blue-100 to-purple-100 px-4 py-3 flex items-center justify-between border-b border-blue-200 shadow-sm\">\r\n            <div className=\"flex items-center gap-2 flex-1 min-w-0\">\r\n              <Package className=\"w-6 h-6 text-blue-500 flex-shrink-0\" />\r\n              <div className=\"min-w-0 flex-1\">\r\n                <span className=\"text-base font-semibold text-gray-900 truncate block\">Product Catalog</span>\r\n                <span className=\"text-xs text-gray-600\">Dashboard</span>\r\n              </div>\r\n            </div>\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              className=\"h-10 w-10 p-0 flex-shrink-0\"\r\n              onClick={() => navigate('/')}\r\n              aria-label=\"Back\"\r\n            >\r\n              <Package className=\"h-5 w-5 text-blue-500\" />\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Main Content - Mobile Optimized */}\r\n          <div className=\"pb-20 overflow-y-auto\">\r\n            <PullToRefresh onRefresh={refreshProducts}>\r\n              <div className=\"p-4\">\r\n                {activeTab === 'products' && (\r\n                  <ProductTabContent \r\n                    isLoading={productsLoading} \r\n                    filteredData={products} \r\n                    searchQuery={searchQuery} \r\n                    onDataRefresh={refetchProducts} \r\n                  />\r\n                )}\r\n                {activeTab === 'client-pricing' && products.length > 0 && (\r\n                  <ClientPricingTab \r\n                    product={{\r\n                      ...products[0],\r\n                      price: (products[0] as any).price ?? 0,\r\n                      brand: (products[0] as any).brand ?? '',\r\n                      quantityInStock: (products[0] as any).quantityInStock ?? 0\r\n                    }} \r\n                  />\r\n                )}\r\n                {activeTab === 'supplier-pricing' && <SupplierPricingTab />}\r\n              </div>\r\n            </PullToRefresh>\r\n          </div>\r\n\r\n          {/* Mobile Bottom Navigation with Back Button */}\r\n          <BottomMobileNavigation\r\n            activeTab={activeTab}\r\n            onTabChange={(tab) => setActiveTab(tab as 'products' | 'client-pricing' | 'supplier-pricing')}\r\n            tabs={[\r\n              { id: 'products', label: 'Products', icon: Package },\r\n              { id: 'client-pricing', label: 'Client Pricing', icon: Users },\r\n              { id: 'supplier-pricing', label: 'Supplier Pricing', icon: Truck },\r\n            ]}\r\n            showBackButton={true}\r\n            onBackClick={() => navigate('/')}\r\n            rightButton={\r\n              <Button\r\n                onClick={() => setShowAddProduct(true)}\r\n                className=\"bg-blue-600 hover:bg-blue-700 active:bg-blue-800 text-white rounded-full h-10 w-10 p-0 shadow-lg transition-all duration-200 active:scale-95\"\r\n                aria-label=\"Add Product\"\r\n              >\r\n                <Plus size={18} />\r\n              </Button>\r\n            }\r\n          />\r\n\r\n          {/* Modals */}\r\n          <AddProductModal \r\n            isOpen={showAddProduct} \r\n            onClose={() => setShowAddProduct(false)} \r\n            onProductAdded={() => {\r\n              setShowAddProduct(false);\r\n              refetchProducts();\r\n            }} \r\n            searchTerm={searchQuery} \r\n          />\r\n          <PriceCheckModal \r\n            isOpen={showPriceCheck} \r\n            onClose={() => setShowPriceCheck(false)} \r\n          />\r\n        </div>\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default ProductDashboard;\r\n"],"file":"assets/ProductDashboard-2BSGlCk2.js"}