{"version":3,"file":"useRefreshFunctions-DaHXTbHG.js","sources":["../../node_modules/lucide-react/dist/esm/icons/copy.js","../../node_modules/lucide-react/dist/esm/icons/ellipsis-vertical.js","../../node_modules/lucide-react/dist/esm/icons/merge.js","../../src/hooks/usePrinters.ts","../../src/components/ColorSelector.tsx","../../src/components/admin-dashboard/components/AdminEditProductModal.tsx","../../src/utils/currency.ts","../../src/components/admin-dashboard/components/ProductCard.tsx","../../src/components/ui/PullToRefresh.tsx","../../src/hooks/useRefreshFunctions.ts"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Copy = createLucideIcon(\"Copy\", [\n  [\"rect\", { width: \"14\", height: \"14\", x: \"8\", y: \"8\", rx: \"2\", ry: \"2\", key: \"17jyea\" }],\n  [\"path\", { d: \"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\", key: \"zix9uf\" }]\n]);\n\nexport { Copy as default };\n//# sourceMappingURL=copy.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst EllipsisVertical = createLucideIcon(\"EllipsisVertical\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"1\", key: \"41hilf\" }],\n  [\"circle\", { cx: \"12\", cy: \"5\", r: \"1\", key: \"gxeob9\" }],\n  [\"circle\", { cx: \"12\", cy: \"19\", r: \"1\", key: \"lyex9k\" }]\n]);\n\nexport { EllipsisVertical as default };\n//# sourceMappingURL=ellipsis-vertical.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Merge = createLucideIcon(\"Merge\", [\n  [\"path\", { d: \"m8 6 4-4 4 4\", key: \"ybng9g\" }],\n  [\"path\", { d: \"M12 2v10.3a4 4 0 0 1-1.172 2.872L4 22\", key: \"1hyw0i\" }],\n  [\"path\", { d: \"m20 22-5-5\", key: \"1m27yz\" }]\n]);\n\nexport { Merge as default };\n//# sourceMappingURL=merge.js.map\n","\r\nimport { useState, useEffect } from 'react';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Printer } from '@/types/database';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\nexport const usePrinters = (assignedOnly: boolean = false) => {\r\n  const [printers, setPrinters] = useState<Printer[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { toast } = useToast();\r\n\r\n  const loadPrinters = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      let data;\r\n      if (assignedOnly) {\r\n        // Get assigned printers (where assignments exist with is_unassigned = false and status = active)\r\n        const { data: assigned, error: assignedError } = await supabase\r\n          .from('printers')\r\n          .select(`\r\n            *,\r\n            printer_assignments!inner(\r\n              id, \r\n              client_id, \r\n              status, \r\n              serial_number,\r\n              is_unassigned,\r\n              department_location_id,\r\n              assignment_effective_date,\r\n              condition,\r\n              usage_type,\r\n              reason_for_change,\r\n              notes,\r\n              created_at,\r\n              updated_at,\r\n              maintenance_status,\r\n              last_maintenance_date,\r\n              clients(id, name),\r\n              departments_location(\r\n                id,\r\n                name,\r\n                department:departments(id, name)\r\n              )\r\n            )\r\n          `)\r\n          .eq('status', 'active')\r\n          .eq('printer_assignments.is_unassigned', false)\r\n          .eq('printer_assignments.status', 'active')\r\n          .order('name');\r\n        if (assignedError) throw assignedError;\r\n        data = assigned || [];\r\n      } else {\r\n        // Fetch all printers with assignment data\r\n        const { data: all, error: allError } = await supabase\r\n          .from('printers')\r\n          .select(`\r\n            *,\r\n            printer_assignments(\r\n              id, \r\n              client_id, \r\n              status, \r\n              serial_number,\r\n              is_unassigned,\r\n              department_location_id,\r\n              assignment_effective_date,\r\n              condition,\r\n              usage_type,\r\n              reason_for_change,\r\n              notes,\r\n              created_at,\r\n              updated_at,\r\n              clients(id, name),\r\n              departments_location(\r\n                id,\r\n                name,\r\n                department:departments(id, name)\r\n              )\r\n            )\r\n          `)\r\n          .eq('status', 'active')\r\n          .order('name');\r\n        \r\n        if (allError) {\r\n          setError('Failed to fetch printers');\r\n          toast({\r\n            title: 'Error',\r\n            description: 'Failed to fetch printers',\r\n            variant: 'destructive'\r\n          });\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        data = all || [];\r\n      }\r\n      setPrinters(data);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch printers');\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to fetch printers',\r\n        variant: 'destructive'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadPrinters();\r\n  }, [assignedOnly]);\r\n\r\n  return {\r\n    printers,\r\n    loading,\r\n    error,\r\n    loadPrinters\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\ninterface ColorSelectorProps {\r\n  selectedColor?: string;\r\n  selectedColors?: string[];\r\n  onColorChange: (color: string | string[]) => void;\r\n  size?: 'sm' | 'md' | 'lg';\r\n  showLabel?: boolean;\r\n  multiSelect?: boolean;\r\n}\r\n\r\nconst colors = [\r\n  { name: 'Cyan', value: 'cyan', bgClass: 'bg-cyan-500' },\r\n  { name: 'Yellow', value: 'yellow', bgClass: 'bg-yellow-500' },\r\n  { name: 'Magenta', value: 'magenta', bgClass: 'bg-fuchsia-500' },\r\n  { name: 'Black', value: 'black', bgClass: 'bg-black' },\r\n];\r\n\r\nconst ColorSelector: React.FC<ColorSelectorProps> = ({\r\n  selectedColor,\r\n  selectedColors,\r\n  onColorChange,\r\n  size = 'md',\r\n  showLabel = true,\r\n  multiSelect = false,\r\n}) => {\r\n  const sizeClasses = {\r\n    sm: 'w-4 h-4',\r\n    md: 'w-6 h-6',\r\n    lg: 'w-8 h-8',\r\n  };\r\n\r\n  const boxSize = sizeClasses[size];\r\n\r\n  const handleClick = (colorValue: string) => {\r\n    if (multiSelect) {\r\n      const arr = selectedColors || [];\r\n      if (arr.includes(colorValue)) {\r\n        onColorChange(arr.filter(c => c !== colorValue));\r\n      } else {\r\n        onColorChange([...arr, colorValue]);\r\n      }\r\n    } else {\r\n      onColorChange(colorValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      {showLabel && (\r\n        <label className=\"block text-sm font-medium text-gray-700\">\r\n          Color Variation\r\n        </label>\r\n      )}\r\n      <div className=\"flex space-x-2\">\r\n        {colors.map((color) => {\r\n          const isSelected = multiSelect\r\n            ? (selectedColors || []).includes(color.value)\r\n            : selectedColor === color.value;\r\n          return (\r\n            <button\r\n              key={color.value}\r\n              type=\"button\"\r\n              onClick={() => handleClick(color.value)}\r\n              className={`\r\n                ${boxSize} ${color.bgClass} rounded border-2 transition-all duration-200 hover:scale-110\r\n                ${isSelected\r\n                  ? 'border-gray-800 ring-2 ring-gray-300'\r\n                  : 'border-gray-300 hover:border-gray-400'}\r\n              `}\r\n              title={color.name}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorSelector;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Product } from '@/types/database';\r\nimport { productService } from '@/services/productService';\r\nimport { printerService } from '@/services/printerService';\r\nimport { toast } from 'sonner';\r\nimport ColorSelector from '@/components/ColorSelector';\r\n\r\ninterface AdminEditProductModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  product: Product;\r\n  onProductUpdated: () => void;\r\n  onStartMerge?: (product: Product) => void;\r\n  variants?: Product[];\r\n}\r\n\r\nconst AdminEditProductModal: React.FC<AdminEditProductModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  product,\r\n  onProductUpdated,\r\n  variants = [],\r\n}) => {\r\n  const [selectedVariant, setSelectedVariant] = useState<Product>(product);\r\n  const [name, setName] = useState(product.name || '');\r\n  const [sku, setSku] = useState(product.sku || '');\r\n  const [alias, setAlias] = useState(product.alias || '');\r\n  const [category, setCategory] = useState(product.category || '');\r\n  const [color, setColor] = useState(product.color || '');\r\n  const [printers, setPrinters] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const variant = selectedVariant || product;\r\n    setName(variant.name || '');\r\n    setSku(variant.sku || '');\r\n    setCategory(variant.category || '');\r\n    setColor(variant.color || '');\r\n    setAlias(variant.alias || '');\r\n    // Fetch and set supported printers\r\n    const fetchPrinters = async () => {\r\n      try {\r\n        const supportedPrinters = await printerService.getProductPrinters(variant.id);\r\n        setPrinters(supportedPrinters.map(p => p.name).join(', '));\r\n      } catch (error) {\r\n        console.error('Failed to fetch product printers', error);\r\n        setPrinters('');\r\n      }\r\n    };\r\n    fetchPrinters();\r\n  }, [selectedVariant, product]);\r\n\r\n  // When product prop changes, update selectedVariant\r\n  useEffect(() => {\r\n    setSelectedVariant(product);\r\n  }, [product]);\r\n\r\n  const handleUpdate = async () => {\r\n    if (!selectedVariant) return;\r\n    setIsLoading(true);\r\n    try {\r\n      const productData = { name, sku, category, color, alias };\r\n      await productService.updateProduct(selectedVariant.id, productData);\r\n      const printerNames = printers.split(',').map(p => p.trim()).filter(Boolean);\r\n      await printerService.addPrintersToProduct(selectedVariant.id, printerNames);\r\n      toast.success('Product updated successfully.');\r\n      onProductUpdated();\r\n      onClose();\r\n    } catch (error) {\r\n      toast.error('Failed to update product.');\r\n      console.error('Failed to update product', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!selectedVariant) return;\r\n    setIsLoading(true);\r\n    try {\r\n      await productService.deleteProduct(selectedVariant.id);\r\n      toast.success('Product deleted successfully.');\r\n      onProductUpdated();\r\n      onClose();\r\n    } catch (error) {\r\n      toast.error('Failed to delete product.');\r\n      console.error('Failed to delete product', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"w-full max-w-[95vw] sm:max-w-[500px] max-h-[90vh] overflow-y-auto\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"text-lg sm:text-xl\">Edit Product</DialogTitle>\r\n        </DialogHeader>\r\n        {variants.length > 1 && (\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Select Variant</label>\r\n            <select\r\n              className=\"w-full rounded border border-gray-300 px-3 py-2\"\r\n              value={selectedVariant.id}\r\n              onChange={e => {\r\n                const variant = variants.find(v => v.id === e.target.value);\r\n                if (variant) setSelectedVariant(variant);\r\n              }}\r\n            >\r\n              {variants.map(variant => (\r\n                <option key={variant.id} value={variant.id}>\r\n                  {variant.name} (SKU: {variant.sku}) {variant.color ? `- ${variant.color}` : ''}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n        <div className=\"grid gap-4 py-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"name\" className=\"text-sm font-medium\">Product Name *</Label>\r\n            <Input \r\n              id=\"name\" \r\n              value={name} \r\n              onChange={(e) => setName(e.target.value)} \r\n              className=\"w-full\"\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"sku\" className=\"text-sm font-medium\">SKU *</Label>\r\n            <Input \r\n              id=\"sku\" \r\n              value={sku} \r\n              onChange={(e) => setSku(e.target.value)} \r\n              className=\"w-full\"\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"alias\" className=\"text-sm font-medium\">Alias</Label>\r\n            <Input \r\n              id=\"alias\" \r\n              value={alias} \r\n              onChange={(e) => setAlias(e.target.value)} \r\n              className=\"w-full\" \r\n              placeholder=\"e.g., 128A\" \r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"category\" className=\"text-sm font-medium\">Category *</Label>\r\n            <Input \r\n              id=\"category\" \r\n              value={category} \r\n              onChange={(e) => setCategory(e.target.value)} \r\n              className=\"w-full\"\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label className=\"text-sm font-medium\">Color Variation</Label>\r\n            <ColorSelector \r\n              selectedColor={color} \r\n              onColorChange={(newColor) => setColor(Array.isArray(newColor) ? newColor[0] : newColor)} \r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"printers\" className=\"text-sm font-medium\">Supported Printers</Label>\r\n            <Textarea \r\n              id=\"printers\" \r\n              value={printers} \r\n              onChange={(e) => setPrinters(e.target.value)}\r\n              placeholder=\"e.g., HP LaserJet Pro M404n, Canon PIXMA G3260\"\r\n              className=\"min-h-[80px]\"\r\n            />\r\n            <p className=\"text-xs text-gray-500\">\r\n              Tip: Use exact model names separated by commas. New printers will be automatically added to the database.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <DialogFooter className=\"flex-col sm:flex-row gap-2 sm:gap-0\">\r\n          <Button \r\n            variant=\"destructive\" \r\n            onClick={handleDelete} \r\n            disabled={isLoading}\r\n            className=\"w-full sm:w-auto order-last sm:order-first\"\r\n          >\r\n            Delete Product\r\n          </Button>\r\n          <div className=\"flex gap-2 w-full sm:w-auto\">\r\n            <Button \r\n              variant=\"outline\" \r\n              onClick={onClose} \r\n              disabled={isLoading}\r\n              className=\"flex-1 sm:flex-none\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              onClick={handleUpdate} \r\n              disabled={isLoading}\r\n              className=\"flex-1 sm:flex-none\"\r\n            >\r\n              {isLoading ? 'Updating...' : 'Update Product'}\r\n            </Button>\r\n          </div>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AdminEditProductModal;\r\n","\r\nexport const formatPHP = (amount: number): string => {\r\n  return new Intl.NumberFormat('en-PH', {\r\n    style: 'currency',\r\n    currency: 'PHP',\r\n    minimumFractionDigits: 2,\r\n  }).format(amount);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Package, Settings, Edit, Trash2, Eye, Copy, Merge, MoreVertical, Palette } from 'lucide-react';\r\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { CompatibleProducts } from '@/PrinterDashboard/components/CompatibleProducts';\r\n\r\ninterface ProductGroup {\r\n  baseSku: string;\r\n  category: string;\r\n  name: string;\r\n  colors: string[];\r\n  priceType: string;\r\n  status: string;\r\n  allProducts: any[];\r\n  supportedPrinters: any[];\r\n  departmentsSupplied: any[];\r\n  customPricing?: any;\r\n  skus: string[];\r\n  productSkus: Array<{\r\n    sku: string;\r\n    color?: string;\r\n  }>;\r\n}\r\n\r\ninterface ProductCardProps {\r\n  productGroup: ProductGroup;\r\n  onEdit?: (productGroup: ProductGroup) => void;\r\n  onDelete?: (productGroup: ProductGroup) => void;\r\n  onViewDetails?: (productGroup: ProductGroup) => void;\r\n  onClone?: (productGroup: ProductGroup) => void;\r\n  onMerge?: (productGroup: ProductGroup) => void;\r\n}\r\n\r\nconst ProductCard: React.FC<ProductCardProps> = ({\r\n  productGroup,\r\n  onEdit,\r\n  onDelete,\r\n  onViewDetails,\r\n  onClone,\r\n  onMerge\r\n}) => {\r\n  const { userProfile } = useAuth();\r\n  const [showPrices, setShowPrices] = useState(false);\r\n  const [showDeleteSelection, setShowDeleteSelection] = useState(false);\r\n\r\n  // Check if user is a client user (not admin/owner/sales_admin)\r\n  const isClientUser = userProfile && !['admin', 'sales_admin', 'owner'].includes(userProfile.role || '');\r\n\r\n  const getColorForSku = (color?: string) => {\r\n    if (!color) return '#6B7280';\r\n    const colorMap: {\r\n      [key: string]: string;\r\n    } = {\r\n      'black': '#000000',\r\n      'cyan': '#00FFFF',\r\n      'magenta': '#FF00FF',\r\n      'yellow': '#FFFF00',\r\n      'red': '#FF0000',\r\n      'blue': '#0000FF',\r\n      'green': '#00FF00'\r\n    };\r\n    return colorMap[color.toLowerCase()] || '#6B7280';\r\n  };\r\n\r\n  const handleCardClick = (e: React.MouseEvent) => {\r\n    // Don't expand if clicking on SKU area or action buttons\r\n    if ((e.target as HTMLElement).closest('.sku-area') || (e.target as HTMLElement).closest('.action-area')) {\r\n      return;\r\n    }\r\n    setShowPrices(!showPrices);\r\n  };\r\n\r\n  const handleSkuClick = (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    // Direct edit - no dialog for editing\r\n    onEdit?.(productGroup);\r\n  };\r\n\r\n  const handleEditClick = (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    // Direct edit - no dialog for editing\r\n    onEdit?.(productGroup);\r\n  };\r\n\r\n  const handleDeleteClick = (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    if (productGroup.allProducts.length === 1) {\r\n      // Single product - directly delete\r\n      onDelete?.(productGroup);\r\n    } else {\r\n      // Multiple products - show selection modal (keep this for delete)\r\n      setShowDeleteSelection(true);\r\n    }\r\n  };\r\n\r\n  const handleProductDelete = (product: any) => {\r\n    setShowDeleteSelection(false);\r\n    // Create a single-product group for deletion\r\n    const singleProductGroup = {\r\n      ...productGroup,\r\n      allProducts: [product]\r\n    };\r\n    onDelete?.(singleProductGroup);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"relative cursor-pointer hover:shadow-md transition-all duration-200 active:scale-[0.98]\" onClick={handleCardClick}>\r\n        <CardContent className=\"p-3\">\r\n          {/* Mobile-first compact layout */}\r\n          <div className=\"flex gap-3\">\r\n            {/* Left: Compact product info */}\r\n            <div className=\"flex flex-col items-center min-w-[80px] w-20\">\r\n              {/* SKU(s) - clickable and compact */}\r\n              <div \r\n                className=\"font-semibold text-xs text-gray-900 leading-tight mb-2 text-center sku-area cursor-pointer hover:text-blue-600 hover:underline transition-colors p-1 rounded touch-target\"\r\n                onClick={handleSkuClick}\r\n                title=\"Tap to edit\"\r\n              >\r\n                {Array.from(new Set(productGroup.allProducts.map(p => p.sku))).join(' / ')}\r\n              </div>\r\n              \r\n              {/* Compact product thumbnail */}\r\n              <div className=\"bg-blue-50 rounded-lg flex items-center justify-center w-16 h-16 mb-2\">\r\n                <Package className=\"w-8 h-8 text-blue-400\" />\r\n              </div>\r\n              \r\n              {/* Edit and Delete buttons below thumbnail - KEEP THE UI */}\r\n              {!isClientUser && (\r\n                <div className=\"flex gap-1 w-full action-area\">\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    className=\"h-6 px-2 text-xs flex-1\"\r\n                    onClick={handleEditClick}\r\n                    title=\"Edit product\"\r\n                  >\r\n                    <Edit className=\"h-3 w-3\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    className=\"h-6 px-2 text-xs flex-1 text-red-600 hover:text-red-700 hover:bg-red-50\"\r\n                    onClick={handleDeleteClick}\r\n                    title=\"Delete product\"\r\n                  >\r\n                    <Trash2 className=\"h-3 w-3\" />\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Right: Details - optimized for mobile */}\r\n            <div className=\"flex-1 min-w-0\">\r\n              {/* Product names with color indicators */}\r\n              <div className=\"mb-2\">\r\n                <CompatibleProducts \r\n                  printerId={productGroup.allProducts[0]?.printer_id || productGroup.supportedPrinters[0]?.id} \r\n                  className=\"text-xs flex flex-row flex-wrap gap-2\" \r\n                />\r\n              </div>\r\n              \r\n              {/* Supplied To - compact */}\r\n              <div className=\"mb-2\">\r\n                <div className=\"text-xs text-gray-500 mb-1\">Supplied To:</div>\r\n                {productGroup.departmentsSupplied.length > 0 ? (\r\n                  <div className=\"text-xs text-gray-700 space-y-0.5\">\r\n                    {productGroup.departmentsSupplied.slice(0, 2).map((dept, idx) => (\r\n                      <div key={idx} className=\"truncate\">\r\n                        {dept.clientName}\r\n                        {dept.departmentName && ` - ${dept.departmentName}`}\r\n                      </div>\r\n                    ))}\r\n                    {productGroup.departmentsSupplied.length > 2 && (\r\n                      <div className=\"text-gray-500\">+{productGroup.departmentsSupplied.length - 2} more</div>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"text-xs text-gray-400 italic\">None</div>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Printers - compact */}\r\n              {productGroup.supportedPrinters.length > 0 && (\r\n                <div className=\"mb-2\">\r\n                  <div className=\"text-xs text-gray-500 mb-1\">Printers:</div>\r\n                  <div className=\"text-xs text-gray-700\">\r\n                    {productGroup.supportedPrinters.slice(0, 2).map((printer, idx) => (\r\n                      <span key={printer.id || idx} className=\"block truncate\">\r\n                        {[printer.manufacturer, printer.series, printer.model || printer.name]\r\n                          .filter(Boolean).join(' ')}\r\n                      </span>\r\n                    ))}\r\n                    {productGroup.supportedPrinters.length > 2 && (\r\n                      <span className=\"text-gray-500\">+{productGroup.supportedPrinters.length - 2} more</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Action menu - mobile optimized */}\r\n            {!isClientUser && (\r\n              <div className=\"action-area flex-shrink-0\">\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button \r\n                      variant=\"ghost\" \r\n                      size=\"icon\" \r\n                      className=\"h-8 w-8 p-0 touch-target\"\r\n                      onClick={e => e.stopPropagation()}\r\n                    >\r\n                      <MoreVertical className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent align=\"end\" className=\"w-40\">\r\n                    <DropdownMenuItem onClick={e => { e.stopPropagation(); onViewDetails && onViewDetails(productGroup); }}>\r\n                      <Eye className=\"mr-2 h-3 w-3\" />\r\n                      View Details\r\n                    </DropdownMenuItem>\r\n                    <DropdownMenuItem onClick={e => { e.stopPropagation(); onEdit && onEdit(productGroup); }}>\r\n                      <Edit className=\"mr-2 h-3 w-3\" />\r\n                      Edit Product\r\n                    </DropdownMenuItem>\r\n                    <DropdownMenuItem onClick={e => { e.stopPropagation(); onClone && onClone(productGroup); }}>\r\n                      <Copy className=\"mr-2 h-3 w-3\" />\r\n                      Clone\r\n                    </DropdownMenuItem>\r\n                    <DropdownMenuItem onClick={e => { e.stopPropagation(); onMerge && onMerge(productGroup); }}>\r\n                      <Merge className=\"mr-2 h-3 w-3\" />\r\n                      Merge\r\n                    </DropdownMenuItem>\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Delete Product Selection Modal - KEEP THIS for delete action */}\r\n      <Dialog open={showDeleteSelection} onOpenChange={setShowDeleteSelection}>\r\n        <DialogContent className=\"w-[95vw] max-w-md h-[85vh] max-h-[600px] rounded-xl p-0 flex flex-col\">\r\n          <DialogHeader className=\"sticky top-0 bg-white z-10 p-4 border-b rounded-t-xl\">\r\n            <DialogTitle className=\"text-base text-red-600\">Select Product to Delete</DialogTitle>\r\n          </DialogHeader>\r\n          <div className=\"flex-1 overflow-y-auto p-4 space-y-2\">\r\n            {productGroup.allProducts.map((product, idx) => (\r\n              <div\r\n                key={idx}\r\n                className=\"flex items-center justify-between p-3 border border-red-200 rounded-lg hover:bg-red-50 cursor-pointer transition-colors active:scale-[0.98] touch-target\"\r\n                onClick={() => handleProductDelete(product)}\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                aria-label={`Delete ${product.name}`}\r\n                onKeyDown={e => {\r\n                  if (e.key === 'Enter' || e.key === ' ') handleProductDelete(product);\r\n                }}\r\n              >\r\n                <div className=\"flex items-center gap-3 min-w-0 flex-1\">\r\n                  <span \r\n                    className=\"w-4 h-4 rounded-full border border-gray-300 flex-shrink-0\" \r\n                    style={{ backgroundColor: getColorForSku(product.color) }} \r\n                  />\r\n                  <div className=\"min-w-0 flex-1\">\r\n                    <div className=\"font-medium text-sm text-gray-900 truncate\">{product.name}</div>\r\n                    <div className=\"text-xs text-gray-500 truncate\">SKU: {product.sku}</div>\r\n                    <div className=\"text-xs text-red-600 truncate\">⚠️ This action cannot be undone</div>\r\n                  </div>\r\n                </div>\r\n                <Trash2 className=\"h-4 w-4 text-red-600 flex-shrink-0\" />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\r\n\r\ninterface PullToRefreshProps {\r\n  onRefresh: () => Promise<void> | void;\r\n  children: React.ReactNode;\r\n  threshold?: number; // Distance in pixels to trigger refresh\r\n  maxPullDistance?: number; // Maximum distance user can pull\r\n  holdDuration?: number; // Duration in ms to hold before allowing pull\r\n  className?: string;\r\n}\r\n\r\nexport const PullToRefresh: React.FC<PullToRefreshProps> = ({\r\n  onRefresh,\r\n  children,\r\n  threshold = 80,\r\n  maxPullDistance = 120,\r\n  holdDuration = 300, // 300ms hold duration\r\n  className = ''\r\n}) => {\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [pullDistance, setPullDistance] = useState(0);\r\n  const [isPulling, setIsPulling] = useState(false);\r\n  const [isHolding, setIsHolding] = useState(false);\r\n  const [showHoldIndicator, setShowHoldIndicator] = useState(false);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const startY = useRef<number>(0);\r\n  const currentY = useRef<number>(0);\r\n  const isDragging = useRef<boolean>(false);\r\n  const holdTimer = useRef<NodeJS.Timeout | null>(null);\r\n  const touchStartTime = useRef<number>(0);\r\n\r\n  const handleRefresh = useCallback(async () => {\r\n    if (isRefreshing) return;\r\n    \r\n    setIsRefreshing(true);\r\n    try {\r\n      await onRefresh();\r\n    } catch (error) {\r\n      console.error('Pull to refresh failed:', error);\r\n    } finally {\r\n      setIsRefreshing(false);\r\n      setPullDistance(0);\r\n      setIsHolding(false);\r\n      setShowHoldIndicator(false);\r\n    }\r\n  }, [onRefresh, isRefreshing]);\r\n\r\n  const handleTouchStart = useCallback((e: TouchEvent) => {\r\n    const scrollTop = containerRef.current?.scrollTop || 0;\r\n    \r\n    // Only allow pull-to-refresh when at the top of the scrollable area\r\n    if (scrollTop <= 0) {\r\n      startY.current = e.touches[0].clientY;\r\n      currentY.current = e.touches[0].clientY;\r\n      isDragging.current = true;\r\n      touchStartTime.current = Date.now();\r\n      \r\n      // Start hold timer\r\n      holdTimer.current = setTimeout(() => {\r\n        setIsHolding(true);\r\n        setShowHoldIndicator(true);\r\n      }, holdDuration);\r\n    }\r\n  }, [holdDuration]);\r\n\r\n  const handleTouchMove = useCallback((e: TouchEvent) => {\r\n    if (!isDragging.current || isRefreshing) return;\r\n\r\n    currentY.current = e.touches[0].clientY;\r\n    const deltaY = currentY.current - startY.current;\r\n\r\n    // Only allow downward pull after holding\r\n    if (deltaY > 0 && isHolding) {\r\n      e.preventDefault();\r\n      const distance = Math.min(deltaY * 0.5, maxPullDistance); // Dampen the pull\r\n      setPullDistance(distance);\r\n      setIsPulling(distance > 0);\r\n    } else if (deltaY > 0 && !isHolding) {\r\n      // Show hold indicator if user starts pulling without holding\r\n      setShowHoldIndicator(true);\r\n    }\r\n  }, [isRefreshing, maxPullDistance, isHolding]);\r\n\r\n  const handleTouchEnd = useCallback(() => {\r\n    if (!isDragging.current) return;\r\n\r\n    // Clear hold timer\r\n    if (holdTimer.current) {\r\n      clearTimeout(holdTimer.current);\r\n      holdTimer.current = null;\r\n    }\r\n\r\n    isDragging.current = false;\r\n    \r\n    if (pullDistance >= threshold && isHolding) {\r\n      handleRefresh();\r\n    } else {\r\n      // Reset if not pulled enough or not held\r\n      setPullDistance(0);\r\n      setIsPulling(false);\r\n      setIsHolding(false);\r\n      setShowHoldIndicator(false);\r\n    }\r\n  }, [pullDistance, threshold, isHolding, handleRefresh]);\r\n\r\n  const handleTouchCancel = useCallback(() => {\r\n    if (holdTimer.current) {\r\n      clearTimeout(holdTimer.current);\r\n      holdTimer.current = null;\r\n    }\r\n    \r\n    isDragging.current = false;\r\n    setPullDistance(0);\r\n    setIsPulling(false);\r\n    setIsHolding(false);\r\n    setShowHoldIndicator(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n\r\n    container.addEventListener('touchstart', handleTouchStart, { passive: false });\r\n    container.addEventListener('touchmove', handleTouchMove, { passive: false });\r\n    container.addEventListener('touchend', handleTouchEnd, { passive: false });\r\n    container.addEventListener('touchcancel', handleTouchCancel, { passive: false });\r\n\r\n    return () => {\r\n      container.removeEventListener('touchstart', handleTouchStart);\r\n      container.removeEventListener('touchmove', handleTouchMove);\r\n      container.removeEventListener('touchend', handleTouchEnd);\r\n      container.removeEventListener('touchcancel', handleTouchCancel);\r\n      \r\n      if (holdTimer.current) {\r\n        clearTimeout(holdTimer.current);\r\n      }\r\n    };\r\n  }, [handleTouchStart, handleTouchMove, handleTouchEnd, handleTouchCancel]);\r\n\r\n  return (\r\n    <div \r\n      ref={containerRef}\r\n      className={`relative overflow-hidden ${className}`}\r\n      style={{\r\n        transform: `translateY(${pullDistance}px)`,\r\n        transition: isPulling ? 'none' : 'transform 0.3s ease-out'\r\n      }}\r\n    >\r\n      {/* Hold indicator */}\r\n      {showHoldIndicator && !isHolding && (\r\n        <div \r\n          className=\"absolute top-0 left-0 right-0 flex items-center justify-center bg-gradient-to-b from-yellow-50 to-transparent transition-opacity duration-200 opacity-100\"\r\n          style={{\r\n            height: '60px',\r\n            transform: 'translateY(-60px)'\r\n          }}\r\n        >\r\n          <div className=\"flex items-center gap-2 text-yellow-600\">\r\n            <span className=\"text-sm font-medium\">Hold to enable pull-to-refresh</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Pull indicator */}\r\n      <div \r\n        className={`absolute top-0 left-0 right-0 flex items-center justify-center bg-gradient-to-b from-blue-50 to-transparent transition-opacity duration-200 ${\r\n          isPulling && isHolding ? 'opacity-100' : 'opacity-0'\r\n        }`}\r\n        style={{\r\n          height: `${Math.max(pullDistance, 60)}px`,\r\n          transform: `translateY(-${Math.max(pullDistance, 60)}px)`\r\n        }}\r\n      >\r\n        <div className=\"flex items-center gap-2 text-blue-600\">\r\n          <span className=\"text-sm font-medium\">\r\n            {pullDistance >= threshold ? 'Release to refresh' : 'Pull to refresh'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"relative\">\r\n        {children}\r\n      </div>\r\n\r\n      {/* Loading overlay */}\r\n      {isRefreshing && (\r\n        <div className=\"absolute inset-0 bg-white/80 backdrop-blur-sm flex items-center justify-center z-50\">\r\n          <div className=\"flex items-center gap-3 text-blue-600\">\r\n            <span className=\"text-sm font-medium\">Refreshing...</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}; ","import { useQueryClient } from '@tanstack/react-query';\r\nimport { useClients } from '@/hooks/useClients';\r\nimport { useSuppliers } from '@/hooks/useSuppliers';\r\nimport { usePrinters } from '@/hooks/usePrinters';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\nexport const useRefreshFunctions = () => {\r\n  const queryClient = useQueryClient();\r\n  const { toast } = useToast();\r\n  \r\n  // Get refetch functions from existing hooks\r\n  const { loadClients } = useClients();\r\n  const { loadSuppliers } = useSuppliers();\r\n  const { loadPrinters: loadAssignedPrinters } = usePrinters(true);\r\n  const { loadPrinters: loadAllPrinters } = usePrinters(false);\r\n\r\n  const refreshAllData = async () => {\r\n    try {\r\n      // Invalidate all queries to force refetch\r\n      await queryClient.invalidateQueries();\r\n      \r\n      // Manually trigger refetch for hooks that don't use react-query\r\n      await Promise.all([\r\n        loadClients(),\r\n        loadSuppliers(),\r\n        loadAssignedPrinters(),\r\n        loadAllPrinters(),\r\n      ]);\r\n\r\n      toast({\r\n        title: \"Data Refreshed\",\r\n        description: \"All data has been updated successfully.\",\r\n      });\r\n    } catch (error) {\r\n      console.error('Refresh failed:', error);\r\n      toast({\r\n        title: \"Refresh Failed\",\r\n        description: \"Some data may not have been updated. Please try again.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const refreshClients = async () => {\r\n    try {\r\n      await queryClient.invalidateQueries({ queryKey: ['clients'] });\r\n      await loadClients();\r\n      toast({\r\n        title: \"Clients Refreshed\",\r\n        description: \"Client data has been updated.\",\r\n      });\r\n    } catch (error) {\r\n      console.error('Client refresh failed:', error);\r\n      toast({\r\n        title: \"Refresh Failed\",\r\n        description: \"Failed to refresh client data.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const refreshSuppliers = async () => {\r\n    try {\r\n      await queryClient.invalidateQueries({ queryKey: ['suppliers'] });\r\n      await loadSuppliers();\r\n      toast({\r\n        title: \"Suppliers Refreshed\",\r\n        description: \"Supplier data has been updated.\",\r\n      });\r\n    } catch (error) {\r\n      console.error('Supplier refresh failed:', error);\r\n      toast({\r\n        title: \"Refresh Failed\",\r\n        description: \"Failed to refresh supplier data.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const refreshPrinters = async () => {\r\n    try {\r\n      await queryClient.invalidateQueries({ queryKey: ['printers'] });\r\n      await Promise.all([\r\n        loadAssignedPrinters(),\r\n        loadAllPrinters()\r\n      ]);\r\n      toast({\r\n        title: \"Printers Refreshed\",\r\n        description: \"Printer data has been updated.\",\r\n      });\r\n    } catch (error) {\r\n      console.error('Printer refresh failed:', error);\r\n      toast({\r\n        title: \"Refresh Failed\",\r\n        description: \"Failed to refresh printer data.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const refreshProducts = async () => {\r\n    try {\r\n      await queryClient.invalidateQueries({ queryKey: ['products'] });\r\n      toast({\r\n        title: \"Products Refreshed\",\r\n        description: \"Product data has been updated.\",\r\n      });\r\n    } catch (error) {\r\n      console.error('Product refresh failed:', error);\r\n      toast({\r\n        title: \"Refresh Failed\",\r\n        description: \"Failed to refresh product data.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const refreshDashboardStats = async () => {\r\n    try {\r\n      await queryClient.invalidateQueries({ queryKey: ['dashboard-stats'] });\r\n      toast({\r\n        title: \"Dashboard Refreshed\",\r\n        description: \"Dashboard statistics have been updated.\",\r\n      });\r\n    } catch (error) {\r\n      console.error('Dashboard refresh failed:', error);\r\n      toast({\r\n        title: \"Refresh Failed\",\r\n        description: \"Failed to refresh dashboard data.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const refreshClientData = async (clientId: string) => {\r\n    try {\r\n      await queryClient.invalidateQueries({ queryKey: ['client', clientId] });\r\n      await queryClient.invalidateQueries({ queryKey: ['assignments', clientId] });\r\n      await queryClient.invalidateQueries({ queryKey: ['departments', clientId] });\r\n      toast({\r\n        title: \"Client Data Refreshed\",\r\n        description: \"Client information has been updated.\",\r\n      });\r\n    } catch (error) {\r\n      console.error('Client data refresh failed:', error);\r\n      toast({\r\n        title: \"Refresh Failed\",\r\n        description: \"Failed to refresh client data.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const refreshSupplierData = async (supplierId: string) => {\r\n    try {\r\n      await queryClient.invalidateQueries({ queryKey: ['supplier', supplierId] });\r\n      await queryClient.invalidateQueries({ queryKey: ['supplier-products', supplierId] });\r\n      toast({\r\n        title: \"Supplier Data Refreshed\",\r\n        description: \"Supplier information has been updated.\",\r\n      });\r\n    } catch (error) {\r\n      console.error('Supplier data refresh failed:', error);\r\n      toast({\r\n        title: \"Refresh Failed\",\r\n        description: \"Failed to refresh supplier data.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  return {\r\n    refreshAllData,\r\n    refreshClients,\r\n    refreshSuppliers,\r\n    refreshPrinters,\r\n    refreshProducts,\r\n    refreshDashboardStats,\r\n    refreshClientData,\r\n    refreshSupplierData,\r\n  };\r\n}; "],"names":["Copy","createLucideIcon","EllipsisVertical","Merge","usePrinters","assignedOnly","printers","setPrinters","useState","loading","setLoading","error","setError","toast","useToast","loadPrinters","data","assigned","assignedError","supabase","all","allError","err","useEffect","colors","ColorSelector","selectedColor","selectedColors","onColorChange","size","showLabel","multiSelect","boxSize","handleClick","colorValue","arr","c","jsxs","jsx","color","isSelected","AdminEditProductModal","isOpen","onClose","product","onProductUpdated","variants","selectedVariant","setSelectedVariant","name","setName","sku","setSku","alias","setAlias","category","setCategory","setColor","isLoading","setIsLoading","variant","supportedPrinters","printerService","p","handleUpdate","productData","productService","printerNames","handleDelete","Dialog","DialogContent","DialogHeader","DialogTitle","e","v","Label","Input","newColor","Textarea","DialogFooter","Button","formatPHP","amount","ProductCard","productGroup","onEdit","onDelete","onViewDetails","onClone","onMerge","userProfile","useAuth","showPrices","setShowPrices","showDeleteSelection","setShowDeleteSelection","isClientUser","getColorForSku","handleCardClick","handleSkuClick","handleEditClick","handleDeleteClick","handleProductDelete","singleProductGroup","Fragment","Card","CardContent","Package","Edit","Trash2","CompatibleProducts","_a","_b","dept","idx","printer","DropdownMenu","DropdownMenuTrigger","MoreVertical","DropdownMenuContent","DropdownMenuItem","Eye","PullToRefresh","onRefresh","children","threshold","maxPullDistance","holdDuration","className","isRefreshing","setIsRefreshing","pullDistance","setPullDistance","isPulling","setIsPulling","isHolding","setIsHolding","showHoldIndicator","setShowHoldIndicator","containerRef","useRef","startY","currentY","isDragging","holdTimer","touchStartTime","handleRefresh","useCallback","handleTouchStart","handleTouchMove","deltaY","distance","handleTouchEnd","handleTouchCancel","container","useRefreshFunctions","queryClient","useQueryClient","loadClients","useClients","loadSuppliers","useSuppliers","loadAssignedPrinters","loadAllPrinters","clientId","supplierId"],"mappings":"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","x_google_ignoreList":[0,1,2]}