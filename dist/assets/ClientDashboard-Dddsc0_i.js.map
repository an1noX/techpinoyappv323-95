{"version":3,"file":"ClientDashboard-Dddsc0_i.js","sources":["../../node_modules/lucide-react/dist/esm/icons/circle-pause.js","../../node_modules/lucide-react/dist/esm/icons/ellipsis.js","../../node_modules/lucide-react/dist/esm/icons/key-round.js","../../node_modules/lucide-react/dist/esm/icons/move.js","../../node_modules/lucide-react/dist/esm/icons/pencil.js","../../src/components/admin-dashboard/hooks/useDepartments.ts","../../src/components/admin-dashboard/components/UnifiedDepartmentModal.tsx","../../src/components/admin-dashboard/components/EditPrinterAssignmentModal.tsx","../../src/components/admin-dashboard/components/AssignPrinterToLocationModal.tsx","../../src/components/admin-dashboard/components/ClientPrinterCard.tsx","../../src/hooks/useRealTimeUpdates.ts","../../src/components/admin-dashboard/AdminDashboardClientDepartments.tsx","../../node_modules/react-hook-form/dist/index.esm.mjs","../../src/components/ui/form.tsx","../../node_modules/zod/lib/index.mjs","../../node_modules/@hookform/resolvers/dist/resolvers.mjs","../../node_modules/@hookform/resolvers/zod/dist/zod.mjs","../../src/components/products/pricing/AddClientPriceDialog.tsx","../../src/components/admin-dashboard/components/TransferPrinterModal.tsx","../../src/components/admin-dashboard/ClientPrinters.tsx","../../src/components/admin-dashboard/hooks/useClientProducts.ts","../../src/components/admin-dashboard/utils/productGrouping.ts","../../src/components/admin-dashboard/AdminDashboardClientProducts.tsx","../../src/components/EditClientModal.tsx","../../src/components/admin-dashboard/hooks/useClientDetail.ts","../../src/utils/priceAnalysis.ts","../../src/components/admin-dashboard/components/ClientServiceCard.tsx","../../src/ClientDashboard/ServicePrinters.tsx","../../src/ClientDashboard/ClientSupport.tsx","../../src/PrinterDashboard/hooks/usePrinterSearch.ts","../../src/components/admin-dashboard/components/PrinterSelectionModal.tsx","../../src/PrinterDashboard/AssignPrinterToClientModal.tsx","../../src/ClientDashboard/AddCompanyPrinterModal.tsx","../../src/ClientDashboard/ClientDashboardSearch.tsx","../../src/hooks/useRoleBasedNavigation.ts","../../src/ClientDashboard/ClientDashboard.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CirclePause = createLucideIcon(\"CirclePause\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"line\", { x1: \"10\", x2: \"10\", y1: \"15\", y2: \"9\", key: \"c1nkhi\" }],\n  [\"line\", { x1: \"14\", x2: \"14\", y1: \"15\", y2: \"9\", key: \"h65svq\" }]\n]);\n\nexport { CirclePause as default };\n//# sourceMappingURL=circle-pause.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Ellipsis = createLucideIcon(\"Ellipsis\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"1\", key: \"41hilf\" }],\n  [\"circle\", { cx: \"19\", cy: \"12\", r: \"1\", key: \"1wjl8i\" }],\n  [\"circle\", { cx: \"5\", cy: \"12\", r: \"1\", key: \"1pcz8c\" }]\n]);\n\nexport { Ellipsis as default };\n//# sourceMappingURL=ellipsis.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst KeyRound = createLucideIcon(\"KeyRound\", [\n  [\n    \"path\",\n    {\n      d: \"M2.586 17.414A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814a6.5 6.5 0 1 0-4-4z\",\n      key: \"1s6t7t\"\n    }\n  ],\n  [\"circle\", { cx: \"16.5\", cy: \"7.5\", r: \".5\", fill: \"currentColor\", key: \"w0ekpg\" }]\n]);\n\nexport { KeyRound as default };\n//# sourceMappingURL=key-round.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Move = createLucideIcon(\"Move\", [\n  [\"path\", { d: \"M12 2v20\", key: \"t6zp3m\" }],\n  [\"path\", { d: \"m15 19-3 3-3-3\", key: \"11eu04\" }],\n  [\"path\", { d: \"m19 9 3 3-3 3\", key: \"1mg7y2\" }],\n  [\"path\", { d: \"M2 12h20\", key: \"9i4pu4\" }],\n  [\"path\", { d: \"m5 9-3 3 3 3\", key: \"j64kie\" }],\n  [\"path\", { d: \"m9 5 3-3 3 3\", key: \"l8vdw6\" }]\n]);\n\nexport { Move as default };\n//# sourceMappingURL=move.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Pencil = createLucideIcon(\"Pencil\", [\n  [\n    \"path\",\n    {\n      d: \"M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z\",\n      key: \"1a8usu\"\n    }\n  ],\n  [\"path\", { d: \"m15 5 4 4\", key: \"1mk7zo\" }]\n]);\n\nexport { Pencil as default };\n//# sourceMappingURL=pencil.js.map\n","\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { supabase } from '@/integrations/supabase/client';\r\n\r\nexport const useDepartments = (clientId: string) => {\r\n  return useQuery({\r\n    queryKey: ['departments', clientId],\r\n    queryFn: async (): Promise<any[]> => {\r\n      if (!clientId) return [];\r\n\r\n      // Get all departments for the client with their locations\r\n      const { data: departments, error: deptError } = await supabase\r\n        .from('departments')\r\n        .select(`\r\n          *,\r\n          locations:departments_location(*)\r\n        `)\r\n        .eq('client_id', clientId)\r\n        .order('name');\r\n\r\n      if (deptError) throw deptError;\r\n\r\n      if (!departments || departments.length === 0) return [];\r\n\r\n      // Get printer assignments for this client using department_location_id\r\n      const { data: assignments, error: assignError } = await supabase\r\n        .from('printer_assignments')\r\n        .select(`\r\n          id,\r\n          printer_id,\r\n          department_location_id,\r\n          serial_number,\r\n          status,\r\n          deployment_date,\r\n          monthly_price,\r\n          usage_type,\r\n          printer:printers(name, model, manufacturer, image_url, series)\r\n        `)\r\n        .eq('client_id', clientId)\r\n        .eq('status', 'active');\r\n\r\n      if (assignError) throw assignError;\r\n\r\n      // Transform departments to include locations with printers\r\n      const result: any[] = departments.map(dept => {\r\n        const departmentLocations: any[] = (dept.locations || []).map(location => {\r\n          // Get printer assignments for this location\r\n          const locationPrinters = (assignments || [])\r\n            .filter(assignment => assignment.department_location_id === location.id)\r\n            .map(assignment => ({\r\n              id: assignment.id,\r\n              printer_id: assignment.printer_id,\r\n              serial_number: assignment.serial_number,\r\n              status: assignment.status as 'active' | 'inactive' | 'returned',\r\n              deployment_date: assignment.deployment_date,\r\n              usage_type: assignment.usage_type as 'rental' | 'service_unit' | 'client_owned',\r\n              monthly_price: assignment.monthly_price,\r\n              image_url: assignment.printer?.image_url,\r\n              printer: assignment.printer,\r\n              compatible_products: []\r\n            }));\r\n\r\n          return {\r\n            id: location.id,\r\n            name: location.name,\r\n            office_name: location.office_name,\r\n            description: location.description,\r\n            floor: location.floor,\r\n            contact_person: location.contact_person,\r\n            contact_number: location.contact_number,\r\n            abbreviation: location.abbreviation,\r\n            printer_count: locationPrinters.length,\r\n            department_id: location.department_id,\r\n            client_id: location.client_id,\r\n            printers: locationPrinters,\r\n            created_at: location.created_at,\r\n            updated_at: location.updated_at\r\n          };\r\n        });\r\n\r\n        const totalPrinterCount = departmentLocations.reduce(\r\n          (sum, location) => sum + location.printer_count,\r\n          0\r\n        );\r\n\r\n        return {\r\n          id: dept.id,\r\n          name: dept.name,\r\n          description: dept.description,\r\n          client_id: dept.client_id,\r\n          total_printer_count: totalPrinterCount,\r\n          locations: departmentLocations,\r\n          created_at: dept.created_at,\r\n          updated_at: dept.updated_at\r\n        };\r\n      });\r\n\r\n      return result.sort((a, b) => a.name.localeCompare(b.name));\r\n    },\r\n    enabled: !!clientId\r\n  });\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Plus, Trash2, Edit } from 'lucide-react';\r\nimport { AlertDialog, AlertDialogContent, AlertDialogHeader, AlertDialogFooter, AlertDialogTitle, AlertDialogCancel, AlertDialogAction } from '@/components/ui/alert-dialog';\r\n\r\ninterface LocationDraft {\r\n  id?: string; // present if editing\r\n  name: string;\r\n  floor: string;\r\n  officeName: string;\r\n  description: string;\r\n  contactPerson: string;\r\n  contactNumber: string;\r\n  abbreviation: string;\r\n  printers?: any[]; // <-- Added for linter error fix\r\n}\r\n\r\ninterface DepartmentDraft {\r\n  id?: string; // present if editing\r\n  name: string;\r\n  abbreviation: string;\r\n  floor: string;\r\n  location: string;\r\n  contactPerson: string;\r\n  description: string;\r\n  locations: LocationDraft[];\r\n}\r\n\r\ninterface UnifiedDepartmentModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  clientId: string;\r\n  department?: DepartmentDraft | null; // null for add, object for edit\r\n  onDepartmentSaved: () => void;\r\n}\r\n\r\nconst UnifiedDepartmentModal: React.FC<UnifiedDepartmentModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  clientId,\r\n  department,\r\n  onDepartmentSaved,\r\n}) => {\r\n  const { toast } = useToast();\r\n  const isEdit = !!department?.id;\r\n\r\n  // Department fields\r\n  const [name, setName] = useState('');\r\n  const [contactPerson, setContactPerson] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [locations, setLocations] = useState<LocationDraft[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [activeLocationEditIdx, setActiveLocationEditIdx] = useState<number | null>(null);\r\n  const [showDeleteConfirmIdx, setShowDeleteConfirmIdx] = useState<number | null>(null);\r\n  const [deletedLocationIds, setDeletedLocationIds] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      if (department) {\r\n        setName(department.name || '');\r\n        setContactPerson(department.contactPerson || '');\r\n        setDescription(department.description || '');\r\n        setLocations(department.locations || []);\r\n      } else {\r\n        setName('');\r\n        setContactPerson('');\r\n        setDescription('');\r\n        setLocations([]);\r\n      }\r\n      setErrors({});\r\n    }\r\n  }, [isOpen, department]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n    if (!name.trim()) newErrors.name = 'Department name is required';\r\n    if (!clientId) newErrors.client = 'Client ID is required';\r\n    if (locations.some(loc => !loc.name.trim())) newErrors.locations = 'All locations must have a name';\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleAddLocation = () => {\r\n    setLocations([...locations, { name: '', floor: '', officeName: '', description: '', contactPerson: '', contactNumber: '', abbreviation: '' }]);\r\n  };\r\n\r\n  const handleRemoveLocation = (idx: number) => {\r\n    const loc = locations[idx];\r\n    if (loc.id) {\r\n      setDeletedLocationIds(prev => [...prev, loc.id!]);\r\n    }\r\n    setLocations(locations.filter((_, i) => i !== idx));\r\n  };\r\n\r\n  const handleLocationChange = (idx: number, field: keyof LocationDraft, value: string) => {\r\n    setLocations(locations.map((loc, i) => i === idx ? { ...loc, [field]: value } : loc));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) return;\r\n    setIsLoading(true);\r\n    try {\r\n      let deptId = department?.id;\r\n      \r\n      if (!isEdit) {\r\n        // Create department first\r\n        const { data: newDept, error: deptError } = await supabase\r\n          .from('departments')\r\n          .insert({\r\n            name: name.trim(),\r\n            contact_person: contactPerson.trim() || null,\r\n            description: description.trim() || null,\r\n            client_id: clientId,\r\n          })\r\n          .select('id')\r\n          .single();\r\n\r\n        if (deptError) {\r\n          console.error('Department creation error:', deptError);\r\n          throw new Error(`Failed to create department: ${deptError.message}`);\r\n        }\r\n        \r\n        deptId = newDept.id;\r\n      } else {\r\n        // Update existing department\r\n        const { error: updateError } = await supabase\r\n          .from('departments')\r\n          .update({\r\n            name: name.trim(),\r\n            contact_person: contactPerson.trim() || null,\r\n            description: description.trim() || null,\r\n          })\r\n          .eq('id', deptId);\r\n\r\n        if (updateError) {\r\n          console.error('Department update error:', updateError);\r\n          throw new Error(`Failed to update department: ${updateError.message}`);\r\n        }\r\n      }\r\n\r\n      // Now handle locations - ensure we have a valid department_id\r\n      if (!deptId) {\r\n        throw new Error('Department ID is required for location operations');\r\n      }\r\n\r\n      // Process locations sequentially to avoid conflicts\r\n      for (const loc of locations) {\r\n        if (loc.id) {\r\n          // Update existing location\r\n          const { error: locUpdateError } = await supabase\r\n            .from('departments_location')\r\n            .update({\r\n              name: loc.name.trim(),\r\n              floor: loc.floor.trim() || null,\r\n              office_name: loc.officeName.trim() || null,\r\n              description: loc.description.trim() || null,\r\n              contact_person: loc.contactPerson.trim() || null,\r\n              contact_number: loc.contactNumber.trim() || null,\r\n              abbreviation: loc.abbreviation.trim() || null,\r\n            })\r\n            .eq('id', loc.id);\r\n\r\n          if (locUpdateError) {\r\n            console.error('Location update error:', locUpdateError);\r\n            throw new Error(`Failed to update location \"${loc.name}\": ${locUpdateError.message}`);\r\n          }\r\n        } else {\r\n          // Insert new location with proper foreign key references\r\n          const { error: locInsertError } = await supabase\r\n            .from('departments_location')\r\n            .insert({\r\n              department_id: deptId,\r\n              client_id: clientId,\r\n              name: loc.name.trim(),\r\n              floor: loc.floor.trim() || null,\r\n              office_name: loc.officeName.trim() || null,\r\n              description: loc.description.trim() || null,\r\n              contact_person: loc.contactPerson.trim() || null,\r\n              contact_number: loc.contactNumber.trim() || null,\r\n              abbreviation: loc.abbreviation.trim() || null,\r\n            });\r\n\r\n          if (locInsertError) {\r\n            console.error('Location insert error:', locInsertError);\r\n            throw new Error(`Failed to create location \"${loc.name}\": ${locInsertError.message}`);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Delete removed locations from Supabase\r\n      for (const locId of deletedLocationIds) {\r\n        await supabase\r\n          .from('departments_location')\r\n          .delete()\r\n          .eq('id', locId);\r\n      }\r\n\r\n      toast({\r\n        title: 'Success',\r\n        description: isEdit ? 'Department updated successfully.' : 'Department created successfully.',\r\n      });\r\n      \r\n      onDepartmentSaved();\r\n      onClose();\r\n      setDeletedLocationIds([]); // Reset after submit\r\n    } catch (error) {\r\n      console.error('Form submission error:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'An unexpected error occurred';\r\n      \r\n      toast({\r\n        title: 'Error',\r\n        description: errorMessage,\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-lg max-h-[90vh] overflow-y-auto\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center space-x-2\">\r\n            <div className=\"bg-blue-600 p-2 rounded-lg\">\r\n              {isEdit ? <Edit className=\"h-5 w-5 text-white\" /> : <Plus className=\"h-5 w-5 text-white\" />}\r\n            </div>\r\n            <span>{isEdit ? 'Edit Department' : 'Add Department'}</span>\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Department Name *</label>\r\n            <Input \r\n              value={name} \r\n              onChange={e => setName(e.target.value)} \r\n              placeholder=\"Enter department name\" \r\n              className={errors.name ? 'border-red-300' : ''} \r\n            />\r\n            {errors.name && <p className=\"text-red-600 text-sm mt-1\">{errors.name}</p>}\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Contact Person</label>\r\n            <Input \r\n              value={contactPerson} \r\n              onChange={e => setContactPerson(e.target.value)} \r\n              placeholder=\"Department head or contact person\" \r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\r\n            <Textarea \r\n              value={description} \r\n              onChange={e => setDescription(e.target.value)} \r\n              placeholder=\"Brief description of the department...\" \r\n              className=\"min-h-[80px]\" \r\n            />\r\n          </div>\r\n          \r\n          {/* Locations Section */}\r\n          <div className=\"border rounded-lg p-4 bg-gray-50\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <span className=\"font-medium text-gray-800\">Locations</span>\r\n              <Button type=\"button\" variant=\"outline\" size=\"sm\" onClick={handleAddLocation}>\r\n                <Plus className=\"h-4 w-4 mr-1\" /> Add Location\r\n              </Button>\r\n            </div>\r\n            \r\n            {errors.locations && <p className=\"text-red-600 text-sm mb-2\">{errors.locations}</p>}\r\n            \r\n            {locations.length === 0 && (\r\n              <div className=\"text-xs text-gray-500\">No locations added yet.</div>\r\n            )}\r\n            \r\n            {locations.map((loc, idx) => {\r\n              // Determine if this location should be editable\r\n              const isLocationEditable =\r\n                !isEdit || // Add Department mode: always editable\r\n                !loc.name || // If location name is empty, always editable\r\n                activeLocationEditIdx === idx; // Edit Department mode: editable only if edit icon clicked\r\n\r\n              // Ensure printers is always an array for display\r\n              const printersArray = Array.isArray(loc.printers) ? loc.printers : [];\r\n              const hasPrinters = printersArray.length > 0;\r\n\r\n              return (\r\n                <div key={idx} className=\"border rounded-md p-3 mb-2 bg-white flex flex-col gap-2\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Input \r\n                      value={loc.name} \r\n                      onChange={e => handleLocationChange(idx, 'name', e.target.value)} \r\n                      placeholder=\"Office Name / Floor *\" \r\n                      className=\"text-sm flex-1\" \r\n                      disabled={!isLocationEditable}\r\n                    />\r\n                    {isEdit && loc.name && (\r\n                      <Button \r\n                        type=\"button\" \r\n                        variant=\"ghost\" \r\n                        size=\"icon\" \r\n                        onClick={() => setActiveLocationEditIdx(idx)}\r\n                        title=\"Edit Location\"\r\n                      >\r\n                        <Edit className=\"h-4 w-4 text-blue-500\" />\r\n                      </Button>\r\n                    )}\r\n                    <Button \r\n                      type=\"button\" \r\n                      variant=\"ghost\" \r\n                      size=\"icon\" \r\n                      onClick={() => setShowDeleteConfirmIdx(idx)}\r\n                      title=\"Delete Location\"\r\n                    >\r\n                      <Trash2 className=\"h-4 w-4 text-red-500\" />\r\n                    </Button>\r\n                  </div>\r\n                  {/* Confirmation dialog for delete - only in edit mode */}\r\n                  {isEdit && showDeleteConfirmIdx === idx && (\r\n                    <AlertDialog open={true} onOpenChange={() => setShowDeleteConfirmIdx(null)}>\r\n                      <AlertDialogContent>\r\n                        <AlertDialogHeader>\r\n                          <AlertDialogTitle>Unable to Delete Location</AlertDialogTitle>\r\n                        </AlertDialogHeader>\r\n                        {hasPrinters ? (\r\n                          <>\r\n                            <div className=\"text-sm text-red-600 mb-2\">\r\n                              There are still printers assigned to it.\r\n                            </div>\r\n                            <div className=\"mb-2\">\r\n                              <div className=\"flex font-semibold text-xs text-gray-700 border-b pb-1 mb-1\">\r\n                                <div className=\"w-full\">Printer Names</div>\r\n                              </div>\r\n                              <div className=\"flex flex-wrap gap-2\">\r\n                                {printersArray.map((printer: any, i: number) => {\r\n                                  // Ensure display name and serial number are present, even if printer is nested\r\n                                  let printerDisplayName = printer.name || printer.printer_name || printer.model || printer.id;\r\n                                  let serialNumber = printer.serial_number || (printer.printer && printer.printer.serial_number) || '';\r\n\r\n                                  if (!printerDisplayName && printer.printer) {\r\n                                    printerDisplayName = printer.printer.name || printer.printer.printer_name || printer.printer.model || printer.printer.id;\r\n                                  }\r\n                                  if (!serialNumber && printer.printer) {\r\n                                    serialNumber = printer.printer.serial_number || '';\r\n                                  }\r\n\r\n                                  return (\r\n                                    <span key={i} className=\"px-2 py-1 bg-gray-100 rounded text-xs\">\r\n                                      {printerDisplayName}\r\n                                      {serialNumber ? ` (${serialNumber})` : ''}\r\n                                    </span>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"text-sm text-red-600 mb-2\">\r\n                              ⚠️ You can only delete locations that have no associated printers.\r\n                            </div>\r\n                            <AlertDialogFooter>\r\n                              <AlertDialogCancel onClick={() => setShowDeleteConfirmIdx(null)}>\r\n                                Close\r\n                              </AlertDialogCancel>\r\n                            </AlertDialogFooter>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <div className=\"text-sm text-gray-700 mb-2\">\r\n                              Are you sure you want to delete this location? This action cannot be undone.\r\n                            </div>\r\n                            <AlertDialogFooter>\r\n                              <AlertDialogCancel onClick={() => setShowDeleteConfirmIdx(null)}>\r\n                                Cancel\r\n                              </AlertDialogCancel>\r\n                              <AlertDialogAction\r\n                                onClick={() => {\r\n                                  handleRemoveLocation(idx);\r\n                                  setShowDeleteConfirmIdx(null);\r\n                                }}\r\n                                className=\"bg-red-600 hover:bg-red-700 text-white\"\r\n                              >\r\n                                Yes, Delete\r\n                              </AlertDialogAction>\r\n                            </AlertDialogFooter>\r\n                          </>\r\n                        )}\r\n                      </AlertDialogContent>\r\n                    </AlertDialog>\r\n                  )}\r\n                  {/* Removed: Floor, Office Name, Abbreviation, Contact Person, Contact Number, Description */}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          \r\n          <DialogFooter className=\"flex-col sm:flex-row gap-2 sm:gap-0\">\r\n            <div className=\"flex gap-2 w-full sm:w-auto\">\r\n              <Button \r\n                type=\"button\" \r\n                variant=\"outline\" \r\n                onClick={onClose} \r\n                disabled={isLoading} \r\n                className=\"flex-1 sm:flex-none\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button \r\n                type=\"submit\" \r\n                disabled={isLoading} \r\n                className=\"flex-1 sm:flex-none\"\r\n              >\r\n                {isLoading ? (isEdit ? 'Saving...' : 'Creating...') : (isEdit ? 'Save Changes' : 'Create Department')}\r\n              </Button>\r\n            </div>\r\n          </DialogFooter>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UnifiedDepartmentModal;\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogFooter,\r\n  AlertDialogCancel,\r\n  AlertDialogAction,\r\n} from '@/components/ui/alert-dialog';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { assetService } from '@/services/assetService';\r\n\r\ninterface PrinterAssignment {\r\n  id: string;\r\n  printer_id: string;\r\n  department_location_id: string | null; // use exactly as in your schema\r\n  serial_number: string | null;\r\n  status: 'active' | 'inactive' | 'returned' | 'undeployed';\r\n  usage_type: 'rental' | 'service_unit' | 'client_owned';\r\n  printer: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface Department {\r\n  id: string;\r\n  name: string;\r\n  locations: Array<{\r\n    id: string;\r\n    name: string;\r\n    departments_id: string; // use exactly as in your schema\r\n  }>;\r\n}\r\n\r\ninterface EditPrinterAssignmentModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  assignment: PrinterAssignment | null;\r\n  departments: Department[];\r\n  currentDepartmentName?: string;\r\n  currentLocationName?: string;\r\n}\r\n\r\nconst EditPrinterAssignmentModal: React.FC<EditPrinterAssignmentModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  assignment,\r\n  departments,\r\n  currentDepartmentName = '',\r\n  currentLocationName = '',\r\n}) => {\r\n  const [selectedLocationId, setSelectedLocationId] = useState(assignment?.department_location_id || '');\r\n  const [status, setStatus] = useState<'active' | 'inactive' | 'returned' | 'undeployed'>(assignment?.status || 'active');\r\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  const locationOptions = departments.flatMap(dept =>\r\n    dept.locations.map(location => ({\r\n      id: location.id,\r\n      label: `${dept.name} - ${location.name}`,\r\n      departmentName: dept.name,\r\n      locationName: location.name,\r\n    }))\r\n  );\r\n\r\n  const targetLocationObj = departments\r\n    .flatMap(dept => dept.locations)\r\n    .find(loc => loc.id === selectedLocationId);\r\n  const targetDeptName = departments.find(dept =>\r\n    dept.locations.some(loc => loc.id === selectedLocationId)\r\n  )?.name || '';\r\n  const targetLocationName = targetLocationObj?.name || '';\r\n\r\n  React.useEffect(() => {\r\n    if (assignment) {\r\n      setSelectedLocationId(assignment.department_location_id || '');\r\n      setStatus(assignment.status || 'active');\r\n    }\r\n  }, [assignment]);\r\n\r\n  const handleTransferClick = () => {\r\n    setShowConfirmDialog(true);\r\n  };\r\n\r\n  // Add transfer logic\r\n  const handleConfirmTransfer = async () => {\r\n    try {\r\n      // Debug: log values before API call\r\n      console.log('Transfer assignmentId:', assignment?.id);\r\n      console.log('Transfer newDepartmentLocationId:', selectedLocationId);\r\n      // Actual update logic (make sure this method exists and works)\r\n      await assetService.updateAssignment(\r\n        assignment?.id!,\r\n        { department_location_id: selectedLocationId }\r\n      );\r\n      setShowConfirmDialog(false);\r\n      onClose();\r\n      toast({\r\n        title: 'Printer Transferred',\r\n        description: 'The printer assignment has been successfully transferred.',\r\n        variant: 'default',\r\n      });\r\n    } catch (error: any) {\r\n      setShowConfirmDialog(false);\r\n      toast({\r\n        title: 'Transfer Failed',\r\n        description: `Error: ${error?.message || error?.toString()}`,\r\n        variant: 'destructive',\r\n      });\r\n      // Debug: log error\r\n      console.error('Transfer error:', error);\r\n    }\r\n  };\r\n\r\n  if (!assignment) return null;\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"w-full max-w-[95vw] sm:max-w-[500px] max-h-[90vh] overflow-y-auto\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"text-lg sm:text-xl\">\r\n            {assignment?.printer?.name || 'Product'}\r\n            {assignment.serial_number && (\r\n              <span className=\"text-xs text-gray-500 font-normal ml-2 align-middle\">- {assignment.serial_number}</span>\r\n            )}\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n        <div className=\"grid gap-4 py-4\">\r\n          {status !== 'undeployed' && (\r\n            <div className=\"space-y-2\">\r\n              <div className=\"text-sm font-medium mb-1\">\r\n                Transfer to {status === 'active' && <span className=\"text-red-500\">*</span>}\r\n              </div>\r\n              <Select value={selectedLocationId} onValueChange={setSelectedLocationId}>\r\n                <SelectTrigger className=\"w-full\">\r\n                  <SelectValue placeholder=\"Select department location\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  {locationOptions.map((option) => (\r\n                    <SelectItem key={option.id} value={option.id}>\r\n                      {option.label}\r\n                    </SelectItem>\r\n                  ))}\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <DialogFooter className=\"flex-col sm:flex-row gap-2 sm:gap-0\">\r\n          <div className=\"flex gap-2 w-full sm:w-auto\">\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={onClose}\r\n              className=\"flex-1 sm:flex-none\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleTransferClick}\r\n              className=\"flex-1 sm:flex-none\"\r\n            >\r\n              Transfer\r\n            </Button>\r\n          </div>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n      <AlertDialog open={showConfirmDialog} onOpenChange={setShowConfirmDialog}>\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader>\r\n            <AlertDialogTitle className=\"text-base sm:text-lg font-semibold mb-2\">\r\n              Confirm Printer Transfer\r\n            </AlertDialogTitle>\r\n          </AlertDialogHeader>\r\n          <div className=\"text-sm mb-4\">\r\n            <div className=\"mb-3\">\r\n              <span className=\"block mb-1 font-medium\">You're about to transfer printer assignment:</span>\r\n              <div className=\"rounded-lg bg-gray-50 p-3 flex flex-col gap-2\">\r\n                <div className=\"flex flex-col sm:flex-row sm:items-center gap-1\">\r\n                  <span className=\"font-semibold text-gray-700\">Printer:</span>\r\n                  <span className=\"text-gray-900\">{assignment?.printer?.name || ''}</span>\r\n                </div>\r\n                <div className=\"flex flex-col sm:flex-row sm:items-center gap-1\">\r\n                  <span className=\"font-semibold text-gray-700\">From:</span>\r\n                  <span className=\"text-gray-900\">\r\n                    {currentDepartmentName && currentLocationName\r\n                      ? `${currentDepartmentName} - ${currentLocationName}`\r\n                      : currentDepartmentName\r\n                        ? currentDepartmentName\r\n                        : currentLocationName\r\n                          ? currentLocationName\r\n                          : <span className=\"italic text-gray-400\">Unassigned</span>}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex flex-col sm:flex-row sm:items-center gap-1\">\r\n                  <span className=\"font-semibold text-gray-700\">To:</span>\r\n                  <span className=\"text-gray-900\">\r\n                    {targetDeptName && targetLocationName\r\n                      ? `${targetDeptName} - ${targetLocationName}`\r\n                      : <span className=\"italic text-gray-400\">Select a location</span>}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 mb-1 text-gray-700\">\r\n              Are you sure you want to continue?\r\n            </div>\r\n            <div className=\"text-xs text-gray-500\">\r\n              Click <span className=\"font-semibold text-blue-600\">Continue</span> to confirm the transfer or <span className=\"font-semibold\">Cancel</span> to go back.\r\n            </div>\r\n          </div>\r\n          <AlertDialogFooter>\r\n            <AlertDialogCancel className=\"w-full sm:w-auto\" onClick={() => setShowConfirmDialog(false)}>\r\n              Cancel\r\n            </AlertDialogCancel>\r\n            <AlertDialogAction className=\"w-full sm:w-auto bg-blue-600 hover:bg-blue-700 text-white\" onClick={handleConfirmTransfer}>\r\n              Continue\r\n            </AlertDialogAction>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditPrinterAssignmentModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Printer, Plus, Building } from 'lucide-react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { CheckCircle } from 'lucide-react';\r\nimport { usePrinters } from '@/hooks/usePrinters';\r\nimport { productService } from '@/services/productService';\r\nimport { clientService } from '@/services/clientService';\r\nimport { useDepartments } from '@/components/admin-dashboard/hooks/useDepartments';\r\n\r\ninterface AssignPrinterToLocationModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  location: any | null; // Changed from DepartmentLocation to any\r\n  locations?: any[]; // Changed from DepartmentLocation to any\r\n  departmentBaseName: string;\r\n  clientId: string;\r\n  onPrinterAssigned: () => void;\r\n  departments?: any[]; // Changed from Department to any\r\n  initialDepartmentId?: string;\r\n}\r\n\r\nconst AssignPrinterToLocationModal: React.FC<AssignPrinterToLocationModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  location,\r\n  locations,\r\n  departmentBaseName,\r\n  clientId,\r\n  onPrinterAssigned,\r\n  departments = [],\r\n  initialDepartmentId\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    printerId: '',\r\n    printerName: '',\r\n    serialNumber: '',\r\n    deploymentDate: '',\r\n    usageType: 'service_unit', // default to 'service_unit'\r\n    monthlyPrice: '',\r\n    hasSecurityDeposit: false,\r\n    securityDepositAmount: '',\r\n    status: 'active' as 'active' | 'inactive' | 'returned',\r\n    notes: '',\r\n    locationName: ''\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { toast } = useToast();\r\n  const [printerSearch, setPrinterSearch] = useState('');\r\n  const [showPrinterDropdown, setShowPrinterDropdown] = useState(false);\r\n  const { printers: availablePrinters, loading: loadingPrinters } = usePrinters(false); // only available printers\r\n  const { data: departmentsData = [], isLoading: departmentsLoading, refetch } = useDepartments(clientId);\r\n  const [selectedDepartmentLocationId, setSelectedDepartmentLocationId] = useState('');\r\n  const [compatibleProductsMap, setCompatibleProductsMap] = useState<Record<string, any[]>>({});\r\n  const [clientPricingMap, setClientPricingMap] = useState<Record<string, Record<string, number>>>({});\r\n  const [loadingCompat, setLoadingCompat] = useState<string | null>(null);\r\n\r\n  // Create a flat array of all department-location pairs for the client\r\n  const departmentLocationOptions = React.useMemo(() => {\r\n    if (locations && locations.length > 0) {\r\n      // Limit to current department's locations\r\n      return locations.map(loc => ({\r\n        id: loc.id,\r\n        label: `${departmentBaseName} - ${loc.name}`\r\n      }));\r\n    }\r\n    // Fallback to all departments if not limited\r\n    return (departmentsData || []).flatMap(dept =>\r\n      (dept.locations || []).map(loc => ({\r\n        id: loc.id,\r\n        label: `${dept.name} - ${loc.name}`\r\n      }))\r\n    );\r\n  }, [locations, departmentBaseName, departmentsData]);\r\n\r\n  // Reset selection when modal opens\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setSelectedDepartmentLocationId('');\r\n      setPrinterSearch('');\r\n      setShowPrinterDropdown(false);\r\n      // Set deployment date to today if not already set\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        deploymentDate: prev.deploymentDate || new Date().toISOString().split('T')[0]\r\n      }));\r\n    }\r\n  }, [isOpen]);\r\n\r\n  // Filter printers by search\r\n  const filteredPrinters = printerSearch.trim() === ''\r\n    ? availablePrinters\r\n    : availablePrinters.filter(printer => {\r\n        const term = printerSearch.toLowerCase();\r\n        return (\r\n          printer.name.toLowerCase().includes(term) ||\r\n          (printer.manufacturer && printer.manufacturer.toLowerCase().includes(term)) ||\r\n          (printer.model && printer.model.toLowerCase().includes(term)) ||\r\n          (printer.series && printer.series.toLowerCase().includes(term))\r\n        );\r\n      });\r\n\r\n  // Fetch compatible products and client pricing for a printer (with caching)\r\n  const fetchCompatAndPricing = async (printerId: string) => {\r\n    if (compatibleProductsMap[printerId]) return; // already cached\r\n    setLoadingCompat(printerId);\r\n    try {\r\n      const products = await productService.getProductsByPrinter(printerId);\r\n      setCompatibleProductsMap(prev => ({ ...prev, [printerId]: products }));\r\n      // For each product, fetch client pricing (only for this client)\r\n      const pricing: Record<string, number> = {};\r\n      await Promise.all(products.map(async (product: any) => {\r\n        const clients = await clientService.getProductClients(product.id);\r\n        const clientEntry = clients.find((c: any) => c.client_id === clientId);\r\n        if (clientEntry) pricing[product.id] = clientEntry.quoted_price;\r\n      }));\r\n      setClientPricingMap(prev => ({ ...prev, [printerId]: pricing }));\r\n    } catch (e) {\r\n      // ignore errors for now\r\n    } finally {\r\n      setLoadingCompat(null);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!formData.printerId || !selectedDepartmentLocationId || !formData.deploymentDate) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Please fill in all required fields (Printer, Department/Location, and Deployment Date).\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    try {\r\n      const { error } = await supabase\r\n        .from('printer_assignments')\r\n        .insert({\r\n          printer_id: formData.printerId,\r\n          client_id: clientId,\r\n          department_location_id: selectedDepartmentLocationId,\r\n          serial_number: formData.serialNumber || null,\r\n          deployment_date: formData.deploymentDate,\r\n          usage_type: formData.usageType,\r\n          monthly_price: formData.usageType === 'rental' && formData.monthlyPrice ? parseFloat(formData.monthlyPrice) : null,\r\n          has_security_deposit: formData.hasSecurityDeposit,\r\n          security_deposit_amount: formData.hasSecurityDeposit && formData.securityDepositAmount ? parseFloat(formData.securityDepositAmount) : null,\r\n          notes: formData.notes || null,\r\n          status: formData.status\r\n        });\r\n      if (error) throw error;\r\n      toast({\r\n        title: \"Success\",\r\n        description: `Printer has been assigned to location successfully!`,\r\n      });\r\n      onPrinterAssigned();\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error('Failed to assign printer:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to assign printer. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFormData({\r\n      printerId: '',\r\n      printerName: '',\r\n      serialNumber: '',\r\n      deploymentDate: '',\r\n      usageType: 'service_unit',\r\n      monthlyPrice: '',\r\n      hasSecurityDeposit: false,\r\n      securityDepositAmount: '',\r\n      status: 'active',\r\n      notes: '',\r\n      locationName: ''\r\n    });\r\n    setSelectedDepartmentLocationId('');\r\n    setPrinterSearch('');\r\n    setShowPrinterDropdown(false);\r\n    onClose();\r\n  };\r\n\r\n  // Helper function for display name\r\n  const getPrinterDisplayName = (printer: any) => {\r\n    const manufacturer = printer.manufacturer || '';\r\n    const series = printer.series || '';\r\n    const model = printer.model || '';\r\n    const name = printer.name || '';\r\n    if (model) {\r\n      return [manufacturer, series, model].filter(Boolean).join(' ');\r\n    } else {\r\n      return [manufacturer, series, name].filter(Boolean).join(' ');\r\n    }\r\n  };\r\n\r\n  // Get the selected department and location names for display\r\n  const selectedDepartmentLocation = departmentLocationOptions.find(opt => opt.id === selectedDepartmentLocationId);\r\n  const departmentLocationDisplay = selectedDepartmentLocation ? selectedDepartmentLocation.label : '';\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={isOpen} onOpenChange={handleClose}>\r\n        <DialogContent className=\"max-w-md\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"flex items-center space-x-2\">\r\n              <div className=\"bg-green-600 p-2 rounded-lg\">\r\n                <Printer className=\"h-5 w-5 text-white\" />\r\n              </div>\r\n              <span>Assign Printer to Location</span>\r\n            </DialogTitle>\r\n            {departmentLocationDisplay && (\r\n              <p className=\"text-sm text-gray-600 mt-1\">\r\n                {departmentLocationDisplay}\r\n              </p>\r\n            )}\r\n          </DialogHeader>\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            {/* Department / Location Selection */}\r\n            <div className=\"space-y-2\">\r\n              <Label className=\"text-sm font-medium text-gray-700 flex items-center\">\r\n                Department / Location *\r\n              </Label>\r\n              <Select\r\n                value={selectedDepartmentLocationId || undefined}\r\n                onValueChange={setSelectedDepartmentLocationId}\r\n                disabled={isLoading || departmentsLoading || departmentLocationOptions.length === 0}\r\n              >\r\n                <SelectTrigger className=\"w-full mt-1\">\r\n                  <SelectValue placeholder=\"Select a department and location\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  {departmentLocationOptions.length === 0 ? (\r\n                    <div className=\"px-4 py-2 text-gray-500\">No departments or locations available</div>\r\n                  ) : (\r\n                    departmentLocationOptions.map(opt => (\r\n                      <SelectItem key={opt.id} value={opt.id}>{opt.label}</SelectItem>\r\n                    ))\r\n                  )}\r\n                </SelectContent>\r\n              </Select>\r\n              {departmentsLoading && <div className=\"text-sm text-gray-500 mt-2\">Loading departments...</div>}\r\n              {departmentLocationOptions.length === 0 && (\r\n                <div className=\"text-xs text-red-500 mt-1\">No departments or locations available. Please add one first.</div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Printer Selection */}\r\n            <div>\r\n              <Label>Printer *</Label>\r\n              <div className=\"mb-4 relative\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.printerName || printerSearch}\r\n                  onChange={e => {\r\n                    setPrinterSearch(e.target.value);\r\n                    setFormData(prev => ({ ...prev, printerName: '', printerId: '' }));\r\n                    setShowPrinterDropdown(true);\r\n                  }}\r\n                  onFocus={() => { setShowPrinterDropdown(true); setPrinterSearch(printerSearch); }}\r\n                  placeholder=\"Search printers by name, model, or manufacturer...\"\r\n                  className=\"w-full pl-3 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                  autoComplete=\"off\"\r\n                  disabled={isLoading}\r\n                />\r\n                {showPrinterDropdown && printerSearch && (\r\n                  <div className=\"absolute left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg max-h-60 overflow-y-auto z-50 min-w-full\">\r\n                    {loadingPrinters ? (\r\n                      <div className=\"p-4 text-center text-gray-500\">Loading printers...</div>\r\n                    ) : filteredPrinters.length === 0 ? (\r\n                      <div className=\"p-4 text-center text-gray-500\">No printers found</div>\r\n                    ) : (\r\n                      filteredPrinters.map(printer => {\r\n                        const compatProducts = compatibleProductsMap[printer.id] || [];\r\n                        return (\r\n                          <button\r\n                            key={printer.id}\r\n                            type=\"button\"\r\n                            className=\"w-full text-left px-2 py-2 bg-white border border-gray-200 rounded-lg shadow-sm mb-2 hover:bg-blue-50 focus:bg-blue-100 transition-colors\"\r\n                            onClick={() => {\r\n                              setFormData(prev => ({\r\n                                ...prev,\r\n                                printerId: printer.id,\r\n                                printerName: getPrinterDisplayName(printer)\r\n                              }));\r\n                              setPrinterSearch(getPrinterDisplayName(printer));\r\n                              setShowPrinterDropdown(false);\r\n                            }}\r\n                            onMouseEnter={() => fetchCompatAndPricing(printer.id)}\r\n                            onFocus={() => { setShowPrinterDropdown(true); setPrinterSearch(printerSearch); }}\r\n                          >\r\n                            <div className=\"flex items-center\">\r\n                              <div className=\"w-10 h-10 flex-shrink-0 flex items-center justify-center bg-gray-100 rounded border overflow-hidden mr-3\">\r\n                                {printer.image_url ? (\r\n                                  <img src={printer.image_url} alt={printer.name} className=\"object-contain w-full h-full\" />\r\n                                ) : (\r\n                                  <Printer className=\"h-7 w-7 text-gray-400\" />\r\n                                )}\r\n                              </div>\r\n                              <div className=\"flex-1 min-w-0\">\r\n                                <div className=\"font-semibold text-sm truncate\" style={{ lineHeight: '1.2' }}>{getPrinterDisplayName(printer)}</div>\r\n                                {/* Toner info and price badge row */}\r\n                                {compatProducts && compatProducts.length > 0 && (\r\n                                  <div className=\"mt-1 space-y-0.5\">\r\n                                    {compatProducts.map(product => {\r\n                                      const clientPrice = clientPricingMap[printer.id] && clientPricingMap[printer.id][product.id] !== undefined\r\n                                        ? clientPricingMap[printer.id][product.id]\r\n                                        : null;\r\n                                      return (\r\n                                        <div key={product.id} className=\"flex items-center justify-between\">\r\n                                          <div className=\"text-xs text-gray-700 truncate flex items-center\" style={{ lineHeight: '1.2' }}>\r\n                                            {product.color && (\r\n                                              <span className=\"inline-block w-2.5 h-2.5 rounded-full mr-1.5 border border-gray-300\" style={{ background: product.color }}></span>\r\n                                            )}\r\n                                            Toner: {product.name}\r\n                                            {product.sku && <> ({product.sku})</>}\r\n                                          </div>\r\n                                          {clientPrice !== null ? (\r\n                                            <span className=\"ml-2 px-2 py-0.5 bg-blue-100 text-blue-700 text-xs rounded-full font-medium whitespace-nowrap\">₱{clientPrice.toLocaleString()}</span>\r\n                                          ) : null}\r\n                                        </div>\r\n                                      );\r\n                                    })}\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </button>\r\n                        );\r\n                      })\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Serial Number */}\r\n            <div>\r\n              <Label htmlFor=\"serial_number\">Serial Number</Label>\r\n              <Input\r\n                id=\"serial_number\"\r\n                value={formData.serialNumber}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, serialNumber: e.target.value }))}\r\n                disabled={isLoading}\r\n                placeholder=\"Enter serial number\"\r\n                className=\"mt-1\"\r\n              />\r\n            </div>\r\n\r\n            {/* Deployment Date */}\r\n            <div>\r\n              <Label htmlFor=\"deployment_date\">Deployment Date *</Label>\r\n              <Input\r\n                id=\"deployment_date\"\r\n                type=\"date\"\r\n                value={formData.deploymentDate}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, deploymentDate: e.target.value }))}\r\n                disabled={isLoading}\r\n                className=\"mt-1\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {/* Usage Type */}\r\n            <div>\r\n              <Label>Usage Type</Label>\r\n              <Select\r\n                value={formData.usageType}\r\n                onValueChange={(value) => setFormData(prev => ({ ...prev, usageType: value }))}\r\n                disabled={isLoading}\r\n              >\r\n                <SelectTrigger className=\"mt-1\">\r\n                  <SelectValue />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"service_unit\">Service Unit</SelectItem>\r\n                  <SelectItem value=\"client_owned\">Client Owned</SelectItem>\r\n                  <SelectItem value=\"rental\">Rental</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n\r\n            {/* Monthly Price (if rental) */}\r\n            {formData.usageType === 'rental' && (\r\n              <div>\r\n                <Label htmlFor=\"monthly_price\">Monthly Rental Price</Label>\r\n                <Input\r\n                  id=\"monthly_price\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  step=\"0.01\"\r\n                  value={formData.monthlyPrice}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, monthlyPrice: e.target.value }))}\r\n                  disabled={isLoading}\r\n                  placeholder=\"0.00\"\r\n                  className=\"mt-1\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* Security Deposit */}\r\n            <div className=\"flex items-center space-x-2 mt-2\">\r\n              <Label>Security Deposit</Label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={formData.hasSecurityDeposit}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, hasSecurityDeposit: e.target.checked }))}\r\n                disabled={isLoading}\r\n                className=\"ml-2\"\r\n              />\r\n              <span className=\"text-xs text-gray-500\">Does this assignment require a security deposit?</span>\r\n            </div>\r\n\r\n            {formData.hasSecurityDeposit && (\r\n              <div>\r\n                <Label htmlFor=\"security_deposit_amount\">Security Deposit Amount</Label>\r\n                <Input\r\n                  id=\"security_deposit_amount\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  step=\"0.01\"\r\n                  value={formData.securityDepositAmount}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, securityDepositAmount: e.target.value }))}\r\n                  disabled={isLoading}\r\n                  placeholder=\"0.00\"\r\n                  className=\"mt-1\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* Status */}\r\n            <div>\r\n              <Label>Status</Label>\r\n              <Select \r\n                value={formData.status} \r\n                onValueChange={(value) => setFormData(prev => ({ ...prev, status: value as 'active' | 'inactive' | 'returned' }))}\r\n                disabled={isLoading}\r\n              >\r\n                <SelectTrigger className=\"mt-1\">\r\n                  <SelectValue />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"active\">Active</SelectItem>\r\n                  <SelectItem value=\"inactive\">Inactive</SelectItem>\r\n                  <SelectItem value=\"returned\">Returned</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n\r\n            {/* Notes */}\r\n            <div>\r\n              <Label htmlFor=\"notes\">Notes</Label>\r\n              <Textarea\r\n                id=\"notes\"\r\n                value={formData.notes}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\r\n                disabled={isLoading}\r\n                placeholder=\"Assignment notes...\"\r\n                className=\"mt-1\"\r\n                rows={3}\r\n              />\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"flex space-x-2 pt-4\">\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline\"\r\n                onClick={handleClose}\r\n                disabled={isLoading}\r\n                className=\"flex-1\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={isLoading || !formData.printerId || !selectedDepartmentLocationId}\r\n                className=\"flex-1\"\r\n              >\r\n                {isLoading ? 'Assigning...' : 'Assign Printer'}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignPrinterToLocationModal;\r\n","import React, { useState } from 'react';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { MapPin, Building2, Package, PauseCircle, CheckCircle, Pencil, ArrowRightLeft } from 'lucide-react';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { CompatibleProducts } from '@/PrinterDashboard/components/CompatibleProducts';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogFooter,\r\n  AlertDialogCancel,\r\n  AlertDialogAction,\r\n} from '@/components/ui/alert-dialog';\r\n\r\ninterface ClientPrinterCardProps {\r\n  printer: any;\r\n  onManage: () => void;\r\n  clientId: string;\r\n  departmentName?: string;\r\n  locationName?: string;\r\n  showUndeployedStatus?: boolean;\r\n  onDataRefresh?: () => void;\r\n}\r\n\r\nconst ClientPrinterCard: React.FC<ClientPrinterCardProps> = ({\r\n  printer,\r\n  onManage,\r\n  clientId,\r\n  departmentName,\r\n  locationName,\r\n  showUndeployedStatus = false,\r\n  onDataRefresh\r\n}) => {\r\n  const { userProfile } = useAuth();\r\n  const [showSerialDialog, setShowSerialDialog] = useState(false);\r\n  const [serialInput, setSerialInput] = useState('');\r\n  const [showSerialConfirm, setShowSerialConfirm] = useState(false);\r\n  const [isSerialUpdating, setIsSerialUpdating] = useState(false);\r\n  const [serialError, setSerialError] = useState('');\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status?.toLowerCase()) {\r\n      case 'active':\r\n        return 'bg-green-100 text-green-700 border-green-200';\r\n      case 'inactive':\r\n        return 'bg-gray-100 text-gray-700 border-gray-300';\r\n      case 'undeployed':\r\n        return 'bg-orange-100 text-orange-700 border-orange-200';\r\n      default:\r\n        return 'bg-gray-100 text-gray-700 border-gray-200';\r\n    }\r\n  };\r\n\r\n  const isInactive = printer.status?.toLowerCase() === 'inactive';\r\n  const isActive = printer.status?.toLowerCase() === 'active';\r\n  const isUndeployed = printer.status?.toLowerCase() === 'undeployed';\r\n  const isAvailable = printer.status?.toLowerCase() === 'available';\r\n\r\n  return (\r\n    <>\r\n      <Card className={`hover:shadow-md transition-shadow ${isInactive ? 'bg-gray-50 border-l-4 border-gray-400 opacity-80' : ''} ${isActive ? 'bg-white border-l-4 border-green-400' : ''}`}>\r\n        <CardContent className=\"p-4\">\r\n          <div className=\"flex items-start gap-3\">\r\n            {/* Printer image thumbnail */}\r\n            <div className=\"relative flex-shrink-0\">\r\n              <img\r\n                src={printer.image_url || '/placeholder.svg'}\r\n                alt={printer.name || 'Printer'}\r\n                className=\"w-24 h-24 object-cover rounded-md\"\r\n                onError={e => { e.currentTarget.src = '/placeholder.svg'; }}\r\n              />\r\n            </div>\r\n            {/* Info/details right of image */}\r\n            <div className=\"flex-1 min-w-0\">\r\n              <div className=\"flex items-center gap-2 mb-2\">\r\n                <h4 className={`font-medium text-sm truncate ${isInactive ? 'text-gray-500 italic' : 'text-gray-900'}`}>\r\n                  {printer.name || printer.printer?.name || 'Unknown Printer'}\r\n                </h4>\r\n                {printer.usage_type === 'client_owned' && (\r\n                  <Badge className=\"bg-blue-100 text-blue-700 border-blue-200 text-xs px-2 py-1\" variant=\"outline\">\r\n                    Client Owned\r\n                  </Badge>\r\n                )}\r\n                {showUndeployedStatus && (\r\n                  <Badge \r\n                    className={`text-xs px-2 py-1 ${getStatusColor('undeployed')}`}\r\n                    variant=\"outline\"\r\n                  >\r\n                    <Package className=\"w-3 h-3 mr-1\" />\r\n                    Undeployed\r\n                  </Badge>\r\n                )}\r\n                {!showUndeployedStatus && printer.status && isActive && (\r\n                  <Badge className=\"bg-green-100 text-green-700 border-green-300 text-xs px-2 py-1 flex items-center gap-1\" variant=\"outline\">\r\n                    <CheckCircle className=\"w-3 h-3 mr-1 text-green-500\" />\r\n                    Active\r\n                  </Badge>\r\n                )}\r\n                {!showUndeployedStatus && printer.status && !isInactive && !isActive && (\r\n                  <Badge \r\n                    className={`text-xs px-2 py-1 ${getStatusColor(printer.status)}`}\r\n                    variant=\"outline\"\r\n                  >\r\n                    {printer.status}\r\n                  </Badge>\r\n                )}\r\n                {isInactive && (\r\n                  <Badge className=\"bg-gray-200 text-gray-700 border-gray-300 text-xs px-2 py-1 flex items-center gap-1\" variant=\"outline\">\r\n                    <PauseCircle className=\"w-3 h-3 mr-1 text-gray-400\" />\r\n                    Inactive\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n              <div className=\"space-y-1\">\r\n                {printer.model && (\r\n                  <p className={`text-xs ${isInactive ? 'text-gray-400 italic' : 'text-gray-600'}`}>\r\n                    Model: {printer.model}\r\n                  </p>\r\n                )}\r\n                {printer.serial_number ? (\r\n                  <p className={`text-xs ${isInactive ? 'text-gray-400 italic' : 'text-gray-600'}`}>\r\n                    S/N: {printer.serial_number}\r\n                  </p>\r\n                ) : (\r\n                  <p className=\"text-xs text-orange-600 flex items-center gap-1\">\r\n                    S/N: Missing Serial No.\r\n                    <Button\r\n                      variant=\"ghost\"\r\n                      size=\"icon\"\r\n                      className=\"p-0 h-4 w-4\"\r\n                      onClick={() => {\r\n                        setSerialInput('');\r\n                        setShowSerialDialog(true);\r\n                      }}\r\n                      title=\"Edit Serial Number\"\r\n                    >\r\n                      <Pencil className=\"h-4 w-4 text-orange-600\" />\r\n                    </Button>\r\n                  </p>\r\n                )}\r\n                {departmentName && locationName && (\r\n                  <div className={`flex items-center gap-4 text-xs ${isInactive ? 'text-gray-400 italic' : 'text-gray-500'}`}>\r\n                    <div className=\"flex items-center gap-1\">\r\n                      <Building2 className=\"w-3 h-3\" />\r\n                      <span>{departmentName}</span>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-1\">\r\n                      <MapPin className=\"w-3 h-3\" />\r\n                      <span>{locationName}</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {showUndeployedStatus && (\r\n                  <div className=\"flex items-center gap-1 text-xs text-orange-600\">\r\n                    <Package className=\"w-3 h-3\" />\r\n                    <span>Available for deployment to any location</span>\r\n                  </div>\r\n                )}\r\n                {isInactive && (\r\n                  <div className=\"flex items-center gap-1 text-xs text-gray-400 italic mt-1\">\r\n                    <PauseCircle className=\"w-3 h-3\" />\r\n                    <span>This printer is currently inactive and not deployed.</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {/* Section Divider and Compatible Products */}\r\n              <hr className=\"my-2 border-t border-orange-200/50\" />\r\n              <CompatibleProducts \r\n                printerId={printer.printer_id}\r\n                className=\"text-xs flex flex-row flex-wrap gap-2 mt-1\" \r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col items-end gap-2\">\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={onManage}\r\n                className=\"h-8 w-8 p-0 flex-shrink-0\"\r\n                title=\"Transfer Printer\"\r\n              >\r\n                <ArrowRightLeft className=\"h-5 w-5 text-blue-600\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Serial Number Update Dialog */}\r\n      <AlertDialog open={showSerialDialog} onOpenChange={setShowSerialDialog}>\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader>\r\n            <AlertDialogTitle>Update Serial Number</AlertDialogTitle>\r\n          </AlertDialogHeader>\r\n          <input\r\n            type=\"text\"\r\n            className=\"border rounded px-2 py-1 w-full mb-3\"\r\n            placeholder=\"Enter Serial Number\"\r\n            value={serialInput}\r\n            onChange={e => setSerialInput(e.target.value)}\r\n            disabled={isSerialUpdating}\r\n          />\r\n          {serialError && <p className=\"text-xs text-red-600 mb-2 text-center\">{serialError}</p>}\r\n          <AlertDialogFooter>\r\n            <AlertDialogCancel onClick={() => setShowSerialDialog(false)} disabled={isSerialUpdating}>\r\n              Cancel\r\n            </AlertDialogCancel>\r\n            <AlertDialogAction\r\n              disabled={isSerialUpdating || !serialInput.trim()}\r\n              onClick={async () => {\r\n                setIsSerialUpdating(true);\r\n                setSerialError('');\r\n                try {\r\n                  // Update serial number in Supabase\r\n                  const { error } = await supabase\r\n                    .from('printer_assignments')\r\n                    .update({ serial_number: serialInput.trim() })\r\n                    .eq('id', printer.assignment_id);\r\n                  if (error) throw error;\r\n                  printer.serial_number = serialInput.trim();\r\n                  setShowSerialDialog(false);\r\n                  setShowSerialConfirm(true);\r\n                  if (onDataRefresh) onDataRefresh();\r\n                } catch (err) {\r\n                  setSerialError('Failed to update serial number. Please try again.');\r\n                } finally {\r\n                  setIsSerialUpdating(false);\r\n                }\r\n              }}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n            >\r\n              {isSerialUpdating ? 'Saving...' : 'Save'}\r\n            </AlertDialogAction>\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n      {showSerialConfirm && (\r\n        <AlertDialog open={showSerialConfirm} onOpenChange={setShowSerialConfirm}>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader>\r\n              <AlertDialogTitle>Serial number has been updated.</AlertDialogTitle>\r\n            </AlertDialogHeader>\r\n            <div className=\"flex flex-col items-center\">\r\n              <CheckCircle className=\"h-8 w-8 text-green-500 mb-2\" />\r\n              <Button variant=\"default\" size=\"sm\" onClick={() => setShowSerialConfirm(false)}>\r\n                OK\r\n              </Button>\r\n            </div>\r\n          </AlertDialogContent>\r\n        </AlertDialog>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientPrinterCard;\r\n","\r\nimport { useEffect, useCallback } from 'react';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\nexport const useRealTimeUpdates = (options: {\r\n  queryKeys?: string[];\r\n  showNotifications?: boolean;\r\n}) => {\r\n  const { queryKeys = [], showNotifications = true } = options;\r\n  const queryClient = useQueryClient();\r\n  const { toast } = useToast();\r\n\r\n  const invalidateQueries = useCallback((message?: string) => {\r\n    // Invalidate specific query keys\r\n    queryKeys.forEach(key => {\r\n      queryClient.invalidateQueries({ queryKey: [key] });\r\n    });\r\n    \r\n    // Invalidate common printer-related queries\r\n    queryClient.invalidateQueries({ queryKey: ['printers'] });\r\n    queryClient.invalidateQueries({ queryKey: ['printer-assignments'] });\r\n    queryClient.invalidateQueries({ queryKey: ['available-printers'] });\r\n    queryClient.invalidateQueries({ queryKey: ['assigned-printers'] });\r\n    queryClient.invalidateQueries({ queryKey: ['compatible-products'] });\r\n    \r\n    if (showNotifications && message) {\r\n      toast({\r\n        title: \"Data Updated\",\r\n        description: message,\r\n        duration: 3000,\r\n      });\r\n    }\r\n  }, [queryClient, queryKeys, showNotifications, toast]);\r\n\r\n  useEffect(() => {\r\n    // Set up real-time subscription for printer assignments\r\n    const assignmentChannel = supabase\r\n      .channel('printer-assignments-realtime')\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: '*',\r\n          schema: 'public',\r\n          table: 'printer_assignments'\r\n        },\r\n        (payload) => {\r\n          console.log('Printer assignment change detected:', payload);\r\n          invalidateQueries('Printer assignments updated');\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    // Set up real-time subscription for printers\r\n    const printerChannel = supabase\r\n      .channel('printers-realtime')\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: '*',\r\n          schema: 'public',\r\n          table: 'printers'\r\n        },\r\n        (payload) => {\r\n          console.log('Printer change detected:', payload);\r\n          invalidateQueries('Printer data updated');\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    // Set up real-time subscription for product_printers\r\n    const productPrinterChannel = supabase\r\n      .channel('product-printers-realtime')\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: '*',\r\n          schema: 'public',\r\n          table: 'product_printers'\r\n        },\r\n        (payload) => {\r\n          console.log('Product-printer relationship change detected:', payload);\r\n          invalidateQueries('Compatible products updated');\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    return () => {\r\n      supabase.removeChannel(assignmentChannel);\r\n      supabase.removeChannel(printerChannel);\r\n      supabase.removeChannel(productPrinterChannel);\r\n    };\r\n  }, [invalidateQueries]);\r\n\r\n  return {\r\n    refreshData: () => invalidateQueries('Data refreshed manually')\r\n  };\r\n};\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { useDepartments } from './hooks/useDepartments';\r\nimport { Button } from '@/components/ui/button';\r\nimport { MoreHorizontal, Plus, MapPin, Package, Edit, Trash2 } from 'lucide-react';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\"\r\nimport DepartmentCard from './components/DepartmentCard';\r\nimport UnifiedDepartmentModal from './components/UnifiedDepartmentModal';\r\nimport EditPrinterAssignmentModal from './components/EditPrinterAssignmentModal';\r\nimport AssignPrinterToLocationModal from './components/AssignPrinterToLocationModal';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport ClientPrinterCard from './components/ClientPrinterCard';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { assetService } from '@/services/assetService';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { CustomLoading } from \"@/components/ui/CustomLoading\";\r\nimport { useRealTimeUpdates } from '@/hooks/useRealTimeUpdates';\r\nimport { AlertDialog, AlertDialogContent, AlertDialogHeader, AlertDialogFooter, AlertDialogTitle, AlertDialogCancel, AlertDialogAction } from '@/components/ui/alert-dialog';\r\n\r\n// Define types locally to avoid import issues\r\ninterface Department {\r\n  id: string;\r\n  name: string;\r\n  locations: any[];\r\n  total_printer_count: number;\r\n}\r\n\r\ninterface AdminDashboardClientDepartmentsProps {\r\n  clientId: string;\r\n  filteredPrinters?: any[];\r\n  onDepartmentDetailsView?: (value: boolean) => void;\r\n}\r\n\r\nconst AdminDashboardClientDepartments: React.FC<AdminDashboardClientDepartmentsProps> = ({ \r\n  clientId, \r\n  filteredPrinters, \r\n  onDepartmentDetailsView \r\n}) => {\r\n  const { userProfile } = useAuth();\r\n  const [showUnifiedModal, setShowUnifiedModal] = useState(false);\r\n  const [selectedDepartment, setSelectedDepartment] = useState<any>(null);\r\n  const [selectedPrinterAssignment, setSelectedPrinterAssignment] = useState<any>(null);\r\n  const [assignPrinterDepartment, setAssignPrinterDepartment] = useState<any>(null);\r\n  const [assignPrinterLocation, setAssignPrinterLocation] = useState<any>(null);\r\n  const [showAssignPrinterModal, setShowAssignPrinterModal] = useState(false);\r\n  const [showDeleteDeptDialog, setShowDeleteDeptDialog] = useState(false);\r\n  const [deleteDeptBlocked, setDeleteDeptBlocked] = useState(false);\r\n  const [deptToDelete, setDeptToDelete] = useState<any>(null);\r\n  const [selectedDepartmentName, setSelectedDepartmentName] = useState<string>('');\r\n  const [selectedLocationName, setSelectedLocationName] = useState<string>('');\r\n  const { toast } = useToast();\r\n\r\n  // Check if user is a client user (not admin/owner/sales_admin)\r\n  const isClientUser = userProfile && !['admin', 'sales_admin'].includes(userProfile.role || '');\r\n\r\n  const { data: departments = [], isLoading, refetch } = useDepartments(clientId);\r\n\r\n  // Fetch undeployed printers for this client\r\n  const { data: undeployedPrinters = [], isLoading: isLoadingUndeployed, refetch: refetchUndeployed } = useQuery({\r\n    queryKey: ['client-printer-pool', clientId],\r\n    queryFn: () => assetService.getClientPrinterPool(clientId),\r\n    enabled: !!clientId\r\n  });\r\n\r\n  // Fetch inactive printers for this client\r\n  const { data: inactivePrinters = [], isLoading: isLoadingInactive, refetch: refetchInactive } = useQuery({\r\n    queryKey: ['client-inactive-printers', clientId],\r\n    queryFn: () => assetService.getClientInactiveAssignments(clientId),\r\n    enabled: !!clientId\r\n  });\r\n\r\n  // Set up real-time updates to listen for assignment changes\r\n  const { refreshData } = useRealTimeUpdates({\r\n    queryKeys: ['departments', 'client-printer-pool', 'client-inactive-printers'],\r\n    showNotifications: false\r\n  });\r\n\r\n  // Listen for custom events from AssignModal and other components\r\n  useEffect(() => {\r\n    const handleRefreshEvent = () => {\r\n      console.log('🔄 AdminDashboardClientDepartments: Received refresh event, updating data...');\r\n      handleRefresh();\r\n    };\r\n    \r\n    // Listen for events dispatched by AssignModal\r\n    window.addEventListener('refresh-printer-data', handleRefreshEvent);\r\n    window.addEventListener('refresh-compatible-products', handleRefreshEvent);\r\n    \r\n    return () => {\r\n      window.removeEventListener('refresh-printer-data', handleRefreshEvent);\r\n      window.removeEventListener('refresh-compatible-products', handleRefreshEvent);\r\n    };\r\n  }, []);\r\n\r\n  // Group inactive printers by department/location using correct property access\r\n  const inactiveByDeptLoc: Record<string, Record<string, any[]>> = {};\r\n  const inactiveNoDept: any[] = [];\r\n  inactivePrinters.forEach(assignment => {\r\n    // Handle different possible structures for department_location_id\r\n    let deptId = null;\r\n    let locId = null;\r\n    \r\n    if (assignment.department_location_id && typeof assignment.department_location_id === 'object') {\r\n      const deptLocObj = assignment.department_location_id as any;\r\n      deptId = deptLocObj.department_id;\r\n      locId = deptLocObj.id;\r\n    }\r\n    if (deptId && locId) {\r\n      if (!inactiveByDeptLoc[deptId]) inactiveByDeptLoc[deptId] = {};\r\n      if (!inactiveByDeptLoc[deptId][locId]) inactiveByDeptLoc[deptId][locId] = [];\r\n      inactiveByDeptLoc[deptId][locId].push(assignment);\r\n    } else {\r\n      inactiveNoDept.push(assignment);\r\n    }\r\n  });\r\n\r\n  const handleDepartmentSelect = (departmentId: string) => {\r\n    const element = document.getElementById(`department-${departmentId}`);\r\n    if (element) {\r\n      element.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n    }\r\n  };\r\n\r\n  const handleEditAssignment = (assignment: any) => {\r\n    setSelectedPrinterAssignment(assignment);\r\n  };\r\n\r\n  const handleEdit = (department: any) => {\r\n    // Helper: find full printer object by id\r\n    const findPrinterById = (printerId: any) => {\r\n      // Try filteredPrinters, undeployedPrinters, inactivePrinters, or any other printer list you have\r\n      const allPrinters = [\r\n        ...(filteredPrinters || []),\r\n        ...undeployedPrinters,\r\n        ...inactivePrinters,\r\n      ];\r\n      return allPrinters.find(p => p.id === printerId || p.printer_id === printerId);\r\n    };\r\n\r\n    const transformedDepartment = {\r\n      id: department.id,\r\n      name: department.name,\r\n      abbreviation: department.abbreviation || '',\r\n      floor: department.floor || '',\r\n      location: department.location || '',\r\n      contactPerson: department.contact_person || '',\r\n      description: department.description || '',\r\n      locations: department.locations.map((loc: any) => {\r\n        // Merge active and inactive printers for this location\r\n        const activePrinters = loc.printers || [];\r\n        const inactiveForLoc = (inactiveByDeptLoc[department.id] && inactiveByDeptLoc[department.id][loc.id]) || [];\r\n        const mergedPrinters = [\r\n          ...activePrinters,\r\n          ...inactiveForLoc.filter(inactive =>\r\n            !activePrinters.some(active => active.id === inactive.printer_id)\r\n          )\r\n        ];\r\n        // Map each printer to a full object with a name property\r\n        const mappedPrinters = mergedPrinters.map(printer => {\r\n          if (printer && typeof printer === 'object' && printer.name) {\r\n            return printer;\r\n          }\r\n          // If it's an assignment object (inactive), try to get printer details\r\n          if (printer && typeof printer === 'object' && printer.printer) {\r\n            return {\r\n              ...printer,\r\n              name: printer.printer.name || printer.printer.model || printer.printer.id || 'Unknown Printer',\r\n            };\r\n          }\r\n          // If it's just an id, find the full printer object\r\n          return findPrinterById(printer) || { id: printer, name: 'Unknown Printer' };\r\n        });\r\n        return {\r\n          id: loc.id,\r\n          name: loc.name,\r\n          floor: loc.floor || '',\r\n          officeName: loc.office_name || '',\r\n          description: loc.description || '',\r\n          contactPerson: loc.contact_person || '',\r\n          contactNumber: loc.contact_number || '',\r\n          abbreviation: loc.abbreviation || '',\r\n          printers: mappedPrinters, // <-- Pass mapped printers here!\r\n        };\r\n      })\r\n    };\r\n    setSelectedDepartment(transformedDepartment);\r\n    setShowUnifiedModal(true);\r\n  };\r\n\r\n  const handleDelete = (department: any) => {\r\n    setDeptToDelete(department);\r\n    if (department.locations && department.locations.length > 0) {\r\n      setDeleteDeptBlocked(true);\r\n    } else {\r\n      setDeleteDeptBlocked(false);\r\n    }\r\n    setShowDeleteDeptDialog(true);\r\n  };\r\n\r\n  const confirmDeleteDepartment = async () => {\r\n    if (!deptToDelete) return;\r\n    try {\r\n      // Replace with your actual delete logic (API call, etc.)\r\n      await assetService.deleteDepartment(deptToDelete.id);\r\n      toast({\r\n        title: 'Department Deleted',\r\n        description: 'The department has been deleted successfully.',\r\n      });\r\n      setShowDeleteDeptDialog(false);\r\n      setDeptToDelete(null);\r\n      handleRefresh();\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to delete department.',\r\n        variant: 'destructive',\r\n      });\r\n      setShowDeleteDeptDialog(false);\r\n      setDeptToDelete(null);\r\n    }\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setSelectedDepartment(null);\r\n    setShowUnifiedModal(false);\r\n    setSelectedPrinterAssignment(null);\r\n    setAssignPrinterDepartment(null);\r\n    setAssignPrinterLocation(null);\r\n    setShowAssignPrinterModal(false);\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    console.log('🔄 AdminDashboardClientDepartments: Refreshing all data...');\r\n    refetch();\r\n    refetchUndeployed();\r\n    refetchInactive();\r\n    refreshData();\r\n  };\r\n\r\n  const handleAssignPrinter = (department: any) => {\r\n    if (department.locations && department.locations.length > 0) {\r\n      setAssignPrinterDepartment(department);\r\n      setAssignPrinterLocation(department.locations[0]);\r\n      setShowAssignPrinterModal(true);\r\n    } else {\r\n      toast({ title: 'No locations', description: 'Add a location to this department before assigning a printer.', variant: 'destructive' });\r\n    }\r\n  };\r\n\r\n  const handleUnassign = async (assignmentId: string) => {\r\n    try {\r\n      await assetService.makePrinterAvailable(assignmentId);\r\n      handleRefresh();\r\n    } catch (error) {\r\n      // Optionally show a toast or error message\r\n      console.error('Failed to unassign printer:', error);\r\n    }\r\n  };\r\n\r\n  const totalLocations = useMemo(() => departments.reduce((acc, dept) => acc + dept.locations.length, 0), [departments]);\r\n  const totalPrinters = useMemo(() => departments.reduce((acc, dept) => acc + dept.locations.reduce((locAcc, loc) => locAcc + (loc.printer_count || 0), 0), 0), [departments]);\r\n\r\n  // If filteredPrinters is present and non-empty, display only those printers grouped by department/location\r\n  if (filteredPrinters && filteredPrinters.length > 0) {\r\n    // Group printers by department and location\r\n    const grouped = {} as Record<string, { departmentName: string; locations: Record<string, { locationName: string; printers: any[] }> }>;\r\n    filteredPrinters.forEach(printer => {\r\n      const deptId = printer.department_id || 'unknown';\r\n      const locId = printer.location_id || 'unknown';\r\n      if (!grouped[deptId]) grouped[deptId] = { departmentName: printer.department_name || '', locations: {} };\r\n      if (!grouped[deptId].locations[locId]) grouped[deptId].locations[locId] = { locationName: printer.location_name || '', printers: [] };\r\n      grouped[deptId].locations[locId].printers.push(printer);\r\n    });\r\n    return (\r\n      <div className=\"space-y-3\">\r\n        {Object.entries(grouped).map(([deptId, dept]) => (\r\n          <div key={deptId} className=\"border rounded-lg p-3 bg-white shadow-sm\">\r\n            <h3 className=\"font-medium text-sm text-gray-900 mb-2 flex items-center gap-2\">\r\n              <MapPin className=\"h-4 w-4 text-blue-500\" />\r\n              {dept.departmentName || 'Department'}\r\n            </h3>\r\n            {Object.entries(dept.locations).map(([locId, loc]) => (\r\n              <div key={locId} className=\"space-y-2\">\r\n                {/* Active printers */}\r\n                {loc.printers.map(printer => (\r\n                  <ClientPrinterCard\r\n                    key={printer.id}\r\n                    printer={printer}\r\n                    onManage={() => {}}\r\n                    clientId={clientId}\r\n                    departmentName={dept.departmentName}\r\n                    locationName={loc.locationName}\r\n                  />\r\n                ))}\r\n                {/* Inactive printers for this dept/location */}\r\n                {(inactiveByDeptLoc[deptId] && inactiveByDeptLoc[deptId][locId]) &&\r\n                  inactiveByDeptLoc[deptId][locId].map(assignment => (\r\n                    <ClientPrinterCard\r\n                      key={assignment.id}\r\n                      printer={{\r\n                        ...assignment,\r\n                        id: assignment.printer_id,\r\n                        name: assignment.printer?.name || 'Unknown Printer',\r\n                        model: assignment.printer?.model,\r\n                        status: assignment.status,\r\n                        department_name: dept.departmentName,\r\n                        location_name: loc.locationName,\r\n                      }}\r\n                      onManage={() => handleEditAssignment(assignment)}\r\n                      clientId={clientId}\r\n                      departmentName={dept.departmentName}\r\n                      locationName={loc.locationName}\r\n                    />\r\n                  ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n        {/* Inactive printers with no department/location */}\r\n        {inactiveNoDept.length > 0 && (\r\n          <div className=\"border rounded-lg p-3 bg-white shadow-sm\">\r\n            <div className=\"flex items-center gap-2 mb-3\">\r\n              <Package className=\"h-4 w-4 text-gray-400\" />\r\n              <h3 className=\"font-medium text-sm text-gray-900\">Inactive (No Department)</h3>\r\n              <Badge variant=\"secondary\" className=\"text-xs\">\r\n                {inactiveNoDept.length} printer{inactiveNoDept.length !== 1 ? 's' : ''}\r\n              </Badge>\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              {inactiveNoDept.map(assignment => (\r\n                <ClientPrinterCard\r\n                  key={assignment.id}\r\n                  printer={{\r\n                    ...assignment,\r\n                    id: assignment.printer_id,\r\n                    name: assignment.printer?.name || 'Unknown Printer',\r\n                    model: assignment.printer?.model,\r\n                    status: assignment.status,\r\n                    department_name: 'Inactive',\r\n                    location_name: '',\r\n                  }}\r\n                  onManage={() => handleEditAssignment(assignment)}\r\n                  clientId={clientId}\r\n                  departmentName=\"Inactive\"\r\n                  locationName=\"\"\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading || isLoadingUndeployed || isLoadingInactive) {\r\n    return <CustomLoading message=\"Loading departments\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-3 pb-20\"> {/* Add pb-20 or pb-safe */}\r\n      {/* Mobile-first compact header with actions */}\r\n      <div className=\"flex items-center justify-between gap-2\">\r\n        {departments.length > 1 && (\r\n          <Select onValueChange={handleDepartmentSelect}>\r\n            <SelectTrigger className=\"h-10 text-sm flex-1 max-w-[200px]\">\r\n              <SelectValue placeholder=\"Jump to department\" />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              {departments.map((dept) => (\r\n                <SelectItem key={dept.id} value={dept.id} className=\"text-sm\">\r\n                  {dept.name}\r\n                </SelectItem>\r\n              ))}\r\n            </SelectContent>\r\n          </Select>\r\n        )}\r\n        \r\n        {/* Only show action buttons for non-client users */}\r\n        {!isClientUser && (\r\n          <div className=\"flex gap-2\">\r\n            <Button \r\n              onClick={() => setShowUnifiedModal(true)} \r\n              size=\"sm\" \r\n              variant=\"outline\" \r\n              className=\"h-10 px-3 text-xs whitespace-nowrap touch-target\"\r\n            >\r\n              <Plus className=\"w-3 h-3 mr-1\" />\r\n              Add Department\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Department/Location rendering with merged inactive assignments */}\r\n      {departments.map((dept) => (\r\n        <div key={dept.id} className=\"border rounded-lg p-3 bg-white shadow-sm\" id={`department-${dept.id}`}>\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <h3 className=\"font-medium text-sm text-gray-900 flex items-center gap-2\">\r\n              <MapPin className=\"h-4 w-4 text-blue-500\" />\r\n              {dept.name}\r\n            </h3>\r\n            {/* Department actions for non-client users */}\r\n            {!isClientUser && (\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\">\r\n                    <MoreHorizontal className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n                <DropdownMenuContent align=\"end\" className=\"w-48\">\r\n                  <DropdownMenuItem onClick={() => handleEdit(dept)}>\r\n                    <Edit className=\"h-4 w-4 mr-2\" />\r\n                    Edit Department\r\n                  </DropdownMenuItem>\r\n                  <DropdownMenuItem onClick={() => handleDelete(dept)} className=\"text-red-600\">\r\n                    <Trash2 className=\"h-4 w-4 mr-2\" />\r\n                    Delete Department\r\n                  </DropdownMenuItem>\r\n                </DropdownMenuContent>\r\n              </DropdownMenu>\r\n            )}\r\n          </div>\r\n          {dept.locations.map((loc) => {\r\n            // Merge active and inactive printers for this location\r\n            const activePrinters = loc.printers || [];\r\n            const inactiveForLoc = (inactiveByDeptLoc[dept.id] && inactiveByDeptLoc[dept.id][loc.id]) || [];\r\n            const mergedPrinters = [\r\n              ...activePrinters,\r\n              ...inactiveForLoc.filter(inactive =>\r\n                !activePrinters.some(active => active.id === inactive.printer_id)\r\n              )\r\n            ];\r\n            return (\r\n              <div key={loc.id} className=\"space-y-2\">\r\n                {/* Add this line to show location name above the printer cards */}\r\n                <div className=\"font-semibold text-xs text-blue-700 mb-1\">{loc.name}</div>\r\n                {mergedPrinters.length > 0 ? (\r\n                  mergedPrinters.map(printer => (\r\n                    <ClientPrinterCard\r\n                      key={printer.id}\r\n                      printer={printer.status === 'inactive' ? {\r\n                        ...printer,\r\n                        id: printer.printer_id,\r\n                        assignment_id: printer.id,\r\n                        name: printer.printer?.name || 'Unknown Printer',\r\n                        model: printer.printer?.model,\r\n                        status: printer.status,\r\n                        department_name: dept.name,\r\n                        location_name: loc.name,\r\n                      } : {\r\n                        ...printer,\r\n                        assignment_id: printer.id,\r\n                      }}\r\n                      onManage={() => {\r\n                        setSelectedPrinterAssignment(printer);\r\n                        setSelectedDepartmentName(dept.name);\r\n                        setSelectedLocationName(loc.name);\r\n                      }}\r\n                      clientId={clientId}\r\n                      departmentName={dept.name}\r\n                      locationName={loc.name}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <p className=\"text-xs text-gray-400 italic py-1 text-center\">\r\n                    No printers assigned\r\n                  </p>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ))}\r\n\r\n      {/* Undeployed Printers Section */}\r\n      {undeployedPrinters.length > 0 && (\r\n        <div className=\"border rounded-lg p-3 bg-white shadow-sm\">\r\n          <div className=\"flex items-center gap-2 mb-3\">\r\n            <Package className=\"h-4 w-4 text-orange-500\" />\r\n            <h3 className=\"font-medium text-sm text-gray-900\">Available for Deployment</h3>\r\n            <Badge variant=\"secondary\" className=\"text-xs\">\r\n              {undeployedPrinters.length} printer{undeployedPrinters.length !== 1 ? 's' : ''}\r\n            </Badge>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            {undeployedPrinters.map((assignment) => (\r\n              <ClientPrinterCard\r\n                key={assignment.id}\r\n                printer={{\r\n                  ...assignment,\r\n                  id: assignment.printer_id,\r\n                  name: assignment.printer?.name || 'Unknown Printer',\r\n                  model: assignment.printer?.model,\r\n                  status: assignment.status,\r\n                  department_name: 'Undeployed',\r\n                  location_name: 'Available for Deployment',\r\n                  assignment_id: assignment.id, // <-- ensure assignment_id is set for undeployed\r\n                }}\r\n                onManage={() => handleEditAssignment(assignment)}\r\n                clientId={clientId}\r\n                departmentName=\"Available for Deployment\"\r\n                locationName=\"\"\r\n                showUndeployedStatus={true}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Inactive printers with no department/location */}\r\n      {inactiveNoDept.length > 0 && (\r\n        <div className=\"border rounded-lg p-3 bg-white shadow-sm\">\r\n          <div className=\"flex items-center gap-2 mb-3\">\r\n            <Package className=\"h-4 w-4 text-gray-400\" />\r\n            <h3 className=\"font-medium text-sm text-gray-900\">Inactive (No Department)</h3>\r\n            <Badge variant=\"secondary\" className=\"text-xs\">\r\n              {inactiveNoDept.length} printer{inactiveNoDept.length !== 1 ? 's' : ''}\r\n            </Badge>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            {inactiveNoDept.map(assignment => (\r\n              <ClientPrinterCard\r\n                key={assignment.id}\r\n                printer={{\r\n                  ...assignment,\r\n                  id: assignment.printer_id,\r\n                  name: assignment.printer?.name || 'Unknown Printer',\r\n                  model: assignment.printer?.model,\r\n                  status: assignment.status,\r\n                  department_name: 'Inactive',\r\n                  location_name: '',\r\n                  assignment_id: assignment.id, // <-- ensure assignment_id is set for inactive\r\n                }}\r\n                onManage={() => handleEditAssignment(assignment)}\r\n                clientId={clientId}\r\n                departmentName=\"Inactive\"\r\n                locationName=\"\"\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Unified Department Modal */}\r\n      <UnifiedDepartmentModal\r\n        isOpen={showUnifiedModal}\r\n        onClose={handleModalClose}\r\n        clientId={clientId}\r\n        department={selectedDepartment}\r\n        onDepartmentSaved={handleRefresh}\r\n      />\r\n\r\n      {/* Existing modals for printer management */}\r\n      {selectedPrinterAssignment && (\r\n        <EditPrinterAssignmentModal\r\n          isOpen={!!selectedPrinterAssignment}\r\n          onClose={() => {\r\n            setSelectedPrinterAssignment(null);\r\n            setSelectedDepartmentName('');\r\n            setSelectedLocationName('');\r\n          }}\r\n          assignment={selectedPrinterAssignment}\r\n          departments={departments}\r\n          currentDepartmentName={selectedDepartmentName}\r\n          currentLocationName={selectedLocationName}\r\n        />\r\n      )}\r\n\r\n      <AssignPrinterToLocationModal\r\n        isOpen={showAssignPrinterModal}\r\n        onClose={() => setShowAssignPrinterModal(false)}\r\n        location={assignPrinterLocation}\r\n        locations={assignPrinterDepartment?.locations || []}\r\n        departmentBaseName={assignPrinterDepartment?.name || ''}\r\n        clientId={clientId}\r\n        onPrinterAssigned={() => {\r\n          setShowAssignPrinterModal(false);\r\n          setAssignPrinterDepartment(null);\r\n          setAssignPrinterLocation(null);\r\n          handleRefresh();\r\n        }}\r\n      />\r\n\r\n      <AlertDialog open={showDeleteDeptDialog} onOpenChange={() => setShowDeleteDeptDialog(false)}>\r\n        <AlertDialogContent>\r\n          <AlertDialogHeader>\r\n            <AlertDialogTitle>\r\n              Delete Department\r\n            </AlertDialogTitle>\r\n          </AlertDialogHeader>\r\n          {deptToDelete && deptToDelete.locations && deptToDelete.locations.length > 0 ? (\r\n            (() => {\r\n              // Check if any location has printers assigned\r\n              const locationsWithAssignments = deptToDelete.locations.filter(\r\n                (loc: any) => Array.isArray(loc.printers) && loc.printers.length > 0\r\n              );\r\n              if (locationsWithAssignments.length > 0) {\r\n                return (\r\n                  <>\r\n                    <div className=\"text-sm text-red-600 mb-2\">\r\n                      ⚠️ You cannot delete this department because some locations have printer assignments.\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                      <div className=\"flex font-semibold text-xs text-gray-700 border-b pb-1 mb-1\">\r\n                        <div className=\"w-2/3\">Location</div>\r\n                        <div className=\"w-1/3\">Printers</div>\r\n                      </div>\r\n                      {deptToDelete.locations.map((loc: any) => (\r\n                        <div key={loc.id} className=\"flex text-xs py-1 border-b last:border-b-0\">\r\n                          <div className=\"w-2/3\">{loc.name || <span className=\"italic text-gray-400\">Unnamed</span>}</div>\r\n                          <div className=\"w-1/3\">{loc.printers ? loc.printers.length : 0}</div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </>\r\n                );\r\n              } else {\r\n                // No assignments, show locations to be deleted\r\n                return (\r\n                  <>\r\n                    <div className=\"text-sm text-yellow-700 mb-2\">\r\n                      These locations will also be deleted:\r\n                    </div>\r\n                    <div className=\"mb-2\">\r\n                      <div className=\"flex font-semibold text-xs text-gray-700 border-b pb-1 mb-1\">\r\n                        <div className=\"w-2/3\">Location</div>\r\n                        <div className=\"w-1/3\">Printers</div>\r\n                      </div>\r\n                      {deptToDelete.locations.map((loc: any) => (\r\n                        <div key={loc.id} className=\"flex text-xs py-1 border-b last:border-b-0\">\r\n                          <div className=\"w-2/3\">{loc.name || <span className=\"italic text-gray-400\">Unnamed</span>}</div>\r\n                          <div className=\"w-1/3\">{loc.printers ? loc.printers.length : 0}</div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-700 mb-2\">\r\n                      Are you sure you want to delete this department? This action cannot be undone.\r\n                    </div>\r\n                  </>\r\n                );\r\n              }\r\n            })()\r\n          ) : (\r\n            <div className=\"text-sm text-gray-700 mb-2\">\r\n              Are you sure you want to delete this department? This action cannot be undone.\r\n            </div>\r\n          )}\r\n          <AlertDialogFooter>\r\n            <AlertDialogCancel onClick={() => setShowDeleteDeptDialog(false)}>\r\n              Cancel\r\n            </AlertDialogCancel>\r\n            {/* Only allow delete if no assignments */}\r\n            {deptToDelete &&\r\n              deptToDelete.locations &&\r\n              deptToDelete.locations.length > 0 &&\r\n              !deptToDelete.locations.some((loc: any) => Array.isArray(loc.printers) && loc.printers.length > 0) && (\r\n                <AlertDialogAction\r\n                  onClick={confirmDeleteDepartment}\r\n                  className=\"bg-red-600 hover:bg-red-700 text-white\"\r\n                >\r\n                  Yes, Delete\r\n                </AlertDialogAction>\r\n              )}\r\n            {/* If no locations, allow delete */}\r\n            {deptToDelete &&\r\n              (!deptToDelete.locations || deptToDelete.locations.length === 0) && (\r\n                <AlertDialogAction\r\n                  onClick={confirmDeleteDepartment}\r\n                  className=\"bg-red-600 hover:bg-red-700 text-white\"\r\n                >\r\n                  Yes, Delete\r\n                </AlertDialogAction>\r\n              )}\r\n          </AlertDialogFooter>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardClientDepartments;\r\n","import React from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (value) => value instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\nvar isObject = (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar isPlainObject = (tempObject) => {\n    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\n};\n\nvar isWeb = typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n\nfunction cloneObject(data) {\n    let copy;\n    const isArray = Array.isArray(data);\n    if (data instanceof Date) {\n        copy = new Date(data);\n    }\n    else if (data instanceof Set) {\n        copy = new Set(data);\n    }\n    else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n        (isArray || isObject(data))) {\n        copy = isArray ? [] : {};\n        if (!isArray && !isPlainObject(data)) {\n            copy = data;\n        }\n        else {\n            for (const key in data) {\n                if (data.hasOwnProperty(key)) {\n                    copy[key] = cloneObject(data[key]);\n                }\n            }\n        }\n    }\n    else {\n        return data;\n    }\n    return copy;\n}\n\nvar compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (object, path, defaultValue) => {\n    if (!path || !isObject(object)) {\n        return defaultValue;\n    }\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], object);\n    return isUndefined(result) || result === object\n        ? isUndefined(object[path])\n            ? defaultValue\n            : object[path]\n        : result;\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nvar set = (object, path, value) => {\n    let index = -1;\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\n    const length = tempPath.length;\n    const lastIndex = length - 1;\n    while (++index < length) {\n        const key = tempPath[index];\n        let newValue = value;\n        if (index !== lastIndex) {\n            const objValue = object[key];\n            newValue =\n                isObject(objValue) || Array.isArray(objValue)\n                    ? objValue\n                    : !isNaN(+tempPath[index + 1])\n                        ? []\n                        : {};\n        }\n        if (key === '__proto__') {\n            return;\n        }\n        object[key] = newValue;\n        object = object[key];\n    }\n    return object;\n};\n\nconst EVENTS = {\n    BLUR: 'blur',\n    FOCUS_OUT: 'focusout',\n    CHANGE: 'change',\n};\nconst VALIDATION_MODE = {\n    onBlur: 'onBlur',\n    onChange: 'onChange',\n    onSubmit: 'onSubmit',\n    onTouched: 'onTouched',\n    all: 'all',\n};\nconst INPUT_VALIDATION_RULES = {\n    max: 'max',\n    min: 'min',\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n    pattern: 'pattern',\n    required: 'required',\n    validate: 'validate',\n};\n\nconst HookFormContext = React.createContext(null);\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst useFormContext = () => React.useContext(HookFormContext);\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst FormProvider = (props) => {\n    const { children, ...data } = props;\n    return (React.createElement(HookFormContext.Provider, { value: data }, children));\n};\n\nvar getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\n    const result = {\n        defaultValues: control._defaultValues,\n    };\n    for (const key in formState) {\n        Object.defineProperty(result, key, {\n            get: () => {\n                const _key = key;\n                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n                }\n                localProxyFormState && (localProxyFormState[_key] = true);\n                return formState[_key];\n            },\n        });\n    }\n    return result;\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n    updateFormState(formStateData);\n    const { name, ...formState } = formStateData;\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar shouldSubscribeByName = (name, signalName, exact) => !name ||\n    !signalName ||\n    name === signalName ||\n    convertToArrayPayload(name).some((currentName) => currentName &&\n        (exact\n            ? currentName === signalName\n            : currentName.startsWith(signalName) ||\n                signalName.startsWith(currentName)));\n\nfunction useSubscribe(props) {\n    const _props = React.useRef(props);\n    _props.current = props;\n    React.useEffect(() => {\n        const subscription = !props.disabled &&\n            _props.current.subject &&\n            _props.current.subject.subscribe({\n                next: _props.current.next,\n            });\n        return () => {\n            subscription && subscription.unsubscribe();\n        };\n    }, [props.disabled]);\n}\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, name, exact } = props || {};\n    const [formState, updateFormState] = React.useState(control._formState);\n    const _mounted = React.useRef(true);\n    const _localProxyFormState = React.useRef({\n        isDirty: false,\n        isLoading: false,\n        dirtyFields: false,\n        touchedFields: false,\n        validatingFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    const _name = React.useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        next: (value) => _mounted.current &&\n            shouldSubscribeByName(_name.current, value.name, exact) &&\n            shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) &&\n            updateFormState({\n                ...control._formState,\n                ...value,\n            }),\n        subject: control._subjects.state,\n    });\n    React.useEffect(() => {\n        _mounted.current = true;\n        _localProxyFormState.current.isValid && control._updateValid(true);\n        return () => {\n            _mounted.current = false;\n        };\n    }, [control]);\n    return getProxyFormState(formState, control, _localProxyFormState.current, false);\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n    if (isString(names)) {\n        isGlobal && _names.watch.add(names);\n        return get(formValues, names, defaultValue);\n    }\n    if (Array.isArray(names)) {\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\n    }\n    isGlobal && (_names.watchAll = true);\n    return formValues;\n};\n\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nfunction useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, exact, } = props || {};\n    const _name = React.useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        subject: control._subjects.values,\n        next: (formState) => {\n            if (shouldSubscribeByName(_name.current, formState.name, exact)) {\n                updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));\n            }\n        },\n    });\n    const [value, updateValue] = React.useState(control._getWatch(name, defaultValue));\n    React.useEffect(() => control._removeUnmounted());\n    return value;\n}\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nfunction useController(props) {\n    const methods = useFormContext();\n    const { name, disabled, control = methods.control, shouldUnregister } = props;\n    const isArrayField = isNameInFieldArray(control._names.array, name);\n    const value = useWatch({\n        control,\n        name,\n        defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),\n        exact: true,\n    });\n    const formState = useFormState({\n        control,\n        name,\n        exact: true,\n    });\n    const _registerProps = React.useRef(control.register(name, {\n        ...props.rules,\n        value,\n        ...(isBoolean(props.disabled) ? { disabled: props.disabled } : {}),\n    }));\n    React.useEffect(() => {\n        const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\n        const updateMounted = (name, value) => {\n            const field = get(control._fields, name);\n            if (field && field._f) {\n                field._f.mount = value;\n            }\n        };\n        updateMounted(name, true);\n        if (_shouldUnregisterField) {\n            const value = cloneObject(get(control._options.defaultValues, name));\n            set(control._defaultValues, name, value);\n            if (isUndefined(get(control._formValues, name))) {\n                set(control._formValues, name, value);\n            }\n        }\n        return () => {\n            (isArrayField\n                ? _shouldUnregisterField && !control._state.action\n                : _shouldUnregisterField)\n                ? control.unregister(name)\n                : updateMounted(name, false);\n        };\n    }, [name, control, isArrayField, shouldUnregister]);\n    React.useEffect(() => {\n        if (get(control._fields, name)) {\n            control._updateDisabledField({\n                disabled,\n                fields: control._fields,\n                name,\n                value: get(control._fields, name)._f.value,\n            });\n        }\n    }, [disabled, name, control]);\n    return {\n        field: {\n            name,\n            value,\n            ...(isBoolean(disabled) || formState.disabled\n                ? { disabled: formState.disabled || disabled }\n                : {}),\n            onChange: React.useCallback((event) => _registerProps.current.onChange({\n                target: {\n                    value: getEventValue(event),\n                    name: name,\n                },\n                type: EVENTS.CHANGE,\n            }), [name]),\n            onBlur: React.useCallback(() => _registerProps.current.onBlur({\n                target: {\n                    value: get(control._formValues, name),\n                    name: name,\n                },\n                type: EVENTS.BLUR,\n            }), [name, control]),\n            ref: React.useCallback((elm) => {\n                const field = get(control._fields, name);\n                if (field && elm) {\n                    field._f.ref = {\n                        focus: () => elm.focus(),\n                        select: () => elm.select(),\n                        setCustomValidity: (message) => elm.setCustomValidity(message),\n                        reportValidity: () => elm.reportValidity(),\n                    };\n                }\n            }, [control._fields, name]),\n        },\n        formState,\n        fieldState: Object.defineProperties({}, {\n            invalid: {\n                enumerable: true,\n                get: () => !!get(formState.errors, name),\n            },\n            isDirty: {\n                enumerable: true,\n                get: () => !!get(formState.dirtyFields, name),\n            },\n            isTouched: {\n                enumerable: true,\n                get: () => !!get(formState.touchedFields, name),\n            },\n            isValidating: {\n                enumerable: true,\n                get: () => !!get(formState.validatingFields, name),\n            },\n            error: {\n                enumerable: true,\n                get: () => get(formState.errors, name),\n            },\n        }),\n    };\n}\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = (props) => props.render(useController(props));\n\nconst flatten = (obj) => {\n    const output = {};\n    for (const key of Object.keys(obj)) {\n        if (isObjectType(obj[key])) {\n            const nested = flatten(obj[key]);\n            for (const nestedKey of Object.keys(nested)) {\n                output[`${key}.${nestedKey}`] = nested[nestedKey];\n            }\n        }\n        else {\n            output[key] = obj[key];\n        }\n    }\n    return output;\n};\n\nconst POST_REQUEST = 'post';\n/**\n * Form component to manage submission.\n *\n * @param props - to setup submission detail. {@link FormProps}\n *\n * @returns form component or headless render prop.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control, formState: { errors } } = useForm();\n *\n *   return (\n *     <Form action=\"/api\" control={control}>\n *       <input {...register(\"name\")} />\n *       <p>{errors?.root?.server && 'Server error'}</p>\n *       <button>Submit</button>\n *     </Form>\n *   );\n * }\n * ```\n */\nfunction Form(props) {\n    const methods = useFormContext();\n    const [mounted, setMounted] = React.useState(false);\n    const { control = methods.control, onSubmit, children, action, method = POST_REQUEST, headers, encType, onError, render, onSuccess, validateStatus, ...rest } = props;\n    const submit = async (event) => {\n        let hasError = false;\n        let type = '';\n        await control.handleSubmit(async (data) => {\n            const formData = new FormData();\n            let formDataJson = '';\n            try {\n                formDataJson = JSON.stringify(data);\n            }\n            catch (_a) { }\n            const flattenFormValues = flatten(control._formValues);\n            for (const key in flattenFormValues) {\n                formData.append(key, flattenFormValues[key]);\n            }\n            if (onSubmit) {\n                await onSubmit({\n                    data,\n                    event,\n                    method,\n                    formData,\n                    formDataJson,\n                });\n            }\n            if (action) {\n                try {\n                    const shouldStringifySubmissionData = [\n                        headers && headers['Content-Type'],\n                        encType,\n                    ].some((value) => value && value.includes('json'));\n                    const response = await fetch(action, {\n                        method,\n                        headers: {\n                            ...headers,\n                            ...(encType ? { 'Content-Type': encType } : {}),\n                        },\n                        body: shouldStringifySubmissionData ? formDataJson : formData,\n                    });\n                    if (response &&\n                        (validateStatus\n                            ? !validateStatus(response.status)\n                            : response.status < 200 || response.status >= 300)) {\n                        hasError = true;\n                        onError && onError({ response });\n                        type = String(response.status);\n                    }\n                    else {\n                        onSuccess && onSuccess({ response });\n                    }\n                }\n                catch (error) {\n                    hasError = true;\n                    onError && onError({ error });\n                }\n            }\n        })(event);\n        if (hasError && props.control) {\n            props.control._subjects.state.next({\n                isSubmitSuccessful: false,\n            });\n            props.control.setError('root.server', {\n                type,\n            });\n        }\n    };\n    React.useEffect(() => {\n        setMounted(true);\n    }, []);\n    return render ? (React.createElement(React.Fragment, null, render({\n        submit,\n    }))) : (React.createElement(\"form\", { noValidate: mounted, action: action, method: method, encType: encType, onSubmit: submit, ...rest }, children));\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n            ...(errors[name] && errors[name].types ? errors[name].types : {}),\n            [type]: message || true,\n        },\n    }\n    : {};\n\nvar generateId = () => {\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16 + d) % 16 | 0;\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n\nvar getValidationModes = (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\n    (_names.watchAll ||\n        _names.watch.has(name) ||\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nconst iterateFieldsByAction = (fields, action, fieldsNames, abortEarly) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const { _f, ...currentField } = field;\n            if (_f) {\n                if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly) {\n                    return true;\n                }\n                else if (_f.ref && action(_f.ref, _f.name) && !abortEarly) {\n                    return true;\n                }\n                else {\n                    if (iterateFieldsByAction(currentField, action)) {\n                        break;\n                    }\n                }\n            }\n            else if (isObject(currentField)) {\n                if (iterateFieldsByAction(currentField, action)) {\n                    break;\n                }\n            }\n        }\n    }\n    return;\n};\n\nvar updateFieldArrayRootError = (errors, error, name) => {\n    const fieldArrayErrors = convertToArrayPayload(get(errors, name));\n    set(fieldArrayErrors, 'root', error[name]);\n    set(errors, name, fieldArrayErrors);\n    return errors;\n};\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isHTMLElement = (value) => {\n    if (!isWeb) {\n        return false;\n    }\n    const owner = value ? value.ownerDocument : 0;\n    return (value instanceof\n        (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement));\n};\n\nvar isMessage = (value) => isString(value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRegex = (value) => value instanceof RegExp;\n\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nvar getCheckboxValue = (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n\nconst defaultReturn = {\n    isValid: false,\n    value: null,\n};\nvar getRadioValue = (options) => Array.isArray(options)\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\n        ? {\n            isValid: true,\n            value: option.value,\n        }\n        : previous, defaultReturn)\n    : defaultReturn;\n\nfunction getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n    };\n\nvar validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, disabled, } = field._f;\n    const inputValue = get(formValues, name);\n    if (!mount || disabled) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidity = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) &&\n        isUndefined(ref.value) &&\n        isUndefined(inputValue)) ||\n        (isHTMLElement(ref) && ref.value === '') ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = {\n            type: exceedMax ? maxType : minType,\n            message,\n            ref,\n            ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n        };\n    };\n    if (isFieldArray\n        ? !Array.isArray(inputValue) || !inputValue.length\n        : required &&\n            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n                (isBoolean(inputValue) && !inputValue) ||\n                (isCheckBox && !getCheckboxValue(refs).isValid) ||\n                (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.required,\n                message,\n                ref: inputRef,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber ||\n                (inputValue ? +inputValue : inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);\n            const isTime = ref.type == 'time';\n            const isWeek = ref.type == 'week';\n            if (isString(maxOutput.value) && inputValue) {\n                exceedMax = isTime\n                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n                    : isWeek\n                        ? inputValue > maxOutput.value\n                        : valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value) && inputValue) {\n                exceedMin = isTime\n                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n                    : isWeek\n                        ? inputValue < minOutput.value\n                        : valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) &&\n        !isEmpty &&\n        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > +maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < +minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.pattern,\n                message,\n                ref,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue, formValues);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = {\n                    ...validateError,\n                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),\n                };\n                if (!validateAllFieldCriteria) {\n                    setCustomValidity(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\n                if (validateError) {\n                    validationResult = {\n                        ...validateError,\n                        ...appendErrorsCurry(key, validateError.message),\n                    };\n                    setCustomValidity(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = {\n                    ref: inputRef,\n                    ...validationResult,\n                };\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidity(true);\n    return error;\n};\n\nvar appendAt = (data, value) => [\n    ...data,\n    ...convertToArrayPayload(value),\n];\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nfunction insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}\n\nvar moveArrayAt = (data, from, to) => {\n    if (!Array.isArray(data)) {\n        return [];\n    }\n    if (isUndefined(data[to])) {\n        data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n};\n\nvar prependAt = (data, value) => [\n    ...convertToArrayPayload(value),\n    ...convertToArrayPayload(data),\n];\n\nfunction removeAtIndexes(data, indexes) {\n    let i = 0;\n    const temp = [...data];\n    for (const index of indexes) {\n        temp.splice(index - i, 1);\n        i++;\n    }\n    return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = (data, index) => isUndefined(index)\n    ? []\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\n    [data[indexA], data[indexB]] = [data[indexB], data[indexA]];\n};\n\nfunction baseGet(object, updatePath) {\n    const length = updatePath.slice(0, -1).length;\n    let index = 0;\n    while (index < length) {\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\n    }\n    return object;\n}\nfunction isEmptyArray(obj) {\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction unset(object, path) {\n    const paths = Array.isArray(path)\n        ? path\n        : isKey(path)\n            ? [path]\n            : stringToPath(path);\n    const childObject = paths.length === 1 ? object : baseGet(object, paths);\n    const index = paths.length - 1;\n    const key = paths[index];\n    if (childObject) {\n        delete childObject[key];\n    }\n    if (index !== 0 &&\n        ((isObject(childObject) && isEmptyObject(childObject)) ||\n            (Array.isArray(childObject) && isEmptyArray(childObject)))) {\n        unset(object, paths.slice(0, -1));\n    }\n    return object;\n}\n\nvar updateAt = (fieldValues, index, value) => {\n    fieldValues[index] = value;\n    return fieldValues;\n};\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFieldArray(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\n    const [fields, setFields] = React.useState(control._getFieldArray(name));\n    const ids = React.useRef(control._getFieldArray(name).map(generateId));\n    const _fieldIds = React.useRef(fields);\n    const _name = React.useRef(name);\n    const _actioned = React.useRef(false);\n    _name.current = name;\n    _fieldIds.current = fields;\n    control._names.array.add(name);\n    props.rules &&\n        control.register(name, props.rules);\n    useSubscribe({\n        next: ({ values, name: fieldArrayName, }) => {\n            if (fieldArrayName === _name.current || !fieldArrayName) {\n                const fieldValues = get(values, _name.current);\n                if (Array.isArray(fieldValues)) {\n                    setFields(fieldValues);\n                    ids.current = fieldValues.map(generateId);\n                }\n            }\n        },\n        subject: control._subjects.array,\n    });\n    const updateValues = React.useCallback((updatedFieldArrayValues) => {\n        _actioned.current = true;\n        control._updateFieldArray(name, updatedFieldArrayValues);\n    }, [control, name]);\n    const append = (value, options) => {\n        const appendValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = appendAt(control._getFieldArray(name), appendValue);\n        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\n        ids.current = appendAt(ids.current, appendValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, appendAt, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const prepend = (value, options) => {\n        const prependValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = prependAt(control._getFieldArray(name), prependValue);\n        control._names.focus = getFocusFieldName(name, 0, options);\n        ids.current = prependAt(ids.current, prependValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, prependAt, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\n        ids.current = removeArrayAt(ids.current, index);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n            argA: index,\n        });\n    };\n    const insert$1 = (index, value, options) => {\n        const insertValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\n        control._names.focus = getFocusFieldName(name, index, options);\n        ids.current = insert(ids.current, index, insertValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, insert, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        });\n    };\n    const swap = (indexA, indexB) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n        swapArrayAt(ids.current, indexA, indexB);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, false);\n    };\n    const move = (from, to) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        moveArrayAt(updatedFieldArrayValues, from, to);\n        moveArrayAt(ids.current, from, to);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, false);\n    };\n    const update = (index, value) => {\n        const updateValue = cloneObject(value);\n        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\n        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\n        updateValues(updatedFieldArrayValues);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {\n            argA: index,\n            argB: updateValue,\n        }, true, false);\n    };\n    const replace = (value) => {\n        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n        ids.current = updatedFieldArrayValues.map(generateId);\n        updateValues([...updatedFieldArrayValues]);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);\n    };\n    React.useEffect(() => {\n        control._state.action = false;\n        isWatched(name, control._names) &&\n            control._subjects.state.next({\n                ...control._formState,\n            });\n        if (_actioned.current &&\n            (!getValidationModes(control._options.mode).isOnSubmit ||\n                control._formState.isSubmitted)) {\n            if (control._options.resolver) {\n                control._executeSchema([name]).then((result) => {\n                    const error = get(result.errors, name);\n                    const existingError = get(control._formState.errors, name);\n                    if (existingError\n                        ? (!error && existingError.type) ||\n                            (error &&\n                                (existingError.type !== error.type ||\n                                    existingError.message !== error.message))\n                        : error && error.type) {\n                        error\n                            ? set(control._formState.errors, name, error)\n                            : unset(control._formState.errors, name);\n                        control._subjects.state.next({\n                            errors: control._formState.errors,\n                        });\n                    }\n                });\n            }\n            else {\n                const field = get(control._fields, name);\n                if (field &&\n                    field._f &&\n                    !(getValidationModes(control._options.reValidateMode).isOnSubmit &&\n                        getValidationModes(control._options.mode).isOnSubmit)) {\n                    validateField(field, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&\n                        control._subjects.state.next({\n                            errors: updateFieldArrayRootError(control._formState.errors, error, name),\n                        }));\n                }\n            }\n        }\n        control._subjects.values.next({\n            name,\n            values: { ...control._formValues },\n        });\n        control._names.focus &&\n            iterateFieldsByAction(control._fields, (ref, key) => {\n                if (control._names.focus &&\n                    key.startsWith(control._names.focus) &&\n                    ref.focus) {\n                    ref.focus();\n                    return 1;\n                }\n                return;\n            });\n        control._names.focus = '';\n        control._updateValid();\n        _actioned.current = false;\n    }, [fields, name, control]);\n    React.useEffect(() => {\n        !get(control._formValues, name) && control._updateFieldArray(name);\n        return () => {\n            (control._options.shouldUnregister || shouldUnregister) &&\n                control.unregister(name);\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: React.useCallback(swap, [updateValues, name, control]),\n        move: React.useCallback(move, [updateValues, name, control]),\n        prepend: React.useCallback(prepend, [updateValues, name, control]),\n        append: React.useCallback(append, [updateValues, name, control]),\n        remove: React.useCallback(remove, [updateValues, name, control]),\n        insert: React.useCallback(insert$1, [updateValues, name, control]),\n        update: React.useCallback(update, [updateValues, name, control]),\n        replace: React.useCallback(replace, [updateValues, name, control]),\n        fields: React.useMemo(() => fields.map((field, index) => ({\n            ...field,\n            [keyName]: ids.current[index] || generateId(),\n        })), [fields, keyName]),\n    };\n}\n\nvar createSubject = () => {\n    let _observers = [];\n    const next = (value) => {\n        for (const observer of _observers) {\n            observer.next && observer.next(value);\n        }\n    };\n    const subscribe = (observer) => {\n        _observers.push(observer);\n        return {\n            unsubscribe: () => {\n                _observers = _observers.filter((o) => o !== observer);\n            },\n        };\n    };\n    const unsubscribe = () => {\n        _observers = [];\n    };\n    return {\n        get observers() {\n            return _observers;\n        },\n        next,\n        subscribe,\n        unsubscribe,\n    };\n};\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\n    if (isPrimitive(object1) || isPrimitive(object2)) {\n        return object1 === object2;\n    }\n    if (isDateObject(object1) && isDateObject(object2)) {\n        return object1.getTime() === object2.getTime();\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isDateObject(val1) && isDateObject(val2)) ||\n                (isObject(val1) && isObject(val2)) ||\n                (Array.isArray(val1) && Array.isArray(val2))\n                ? !deepEqual(val1, val2)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = (ref) => isHTMLElement(ref) && ref.isConnected;\n\nvar objectHasFunction = (data) => {\n    for (const key in data) {\n        if (isFunction(data[key])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction markFieldsDirty(data, fields = {}) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                fields[key] = Array.isArray(data[key]) ? [] : {};\n                markFieldsDirty(data[key], fields[key]);\n            }\n            else if (!isNullOrUndefined(data[key])) {\n                fields[key] = true;\n            }\n        }\n    }\n    return fields;\n}\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                if (isUndefined(formValues) ||\n                    isPrimitive(dirtyFieldsFromValues[key])) {\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\n                        ? markFieldsDirty(data[key], [])\n                        : { ...markFieldsDirty(data[key]) };\n                }\n                else {\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n                }\n            }\n            else {\n                dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n            }\n        }\n    }\n    return dirtyFieldsFromValues;\n}\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : value\n                ? +value\n                : value\n        : valueAsDate && isString(value)\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;\n\nfunction getFieldValue(_f) {\n    const ref = _f.ref;\n    if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n        return;\n    }\n    if (isFileInput(ref)) {\n        return ref.files;\n    }\n    if (isRadioInput(ref)) {\n        return getRadioValue(_f.refs).value;\n    }\n    if (isMultipleSelect(ref)) {\n        return [...ref.selectedOptions].map(({ value }) => value);\n    }\n    if (isCheckBoxInput(ref)) {\n        return getCheckboxValue(_f.refs).value;\n    }\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n    const fields = {};\n    for (const name of fieldsNames) {\n        const field = get(_fields, name);\n        field && set(fields, name, field._f);\n    }\n    return {\n        criteriaMode,\n        names: [...fieldsNames],\n        fields,\n        shouldUseNativeValidation,\n    };\n};\n\nvar getRuleValue = (rule) => isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n        ? rule.source\n        : isObject(rule)\n            ? isRegex(rule.value)\n                ? rule.value.source\n                : rule.value\n            : rule;\n\nconst ASYNC_FUNCTION = 'AsyncFunction';\nvar hasPromiseValidation = (fieldReference) => (!fieldReference || !fieldReference.validate) &&\n    !!((isFunction(fieldReference.validate) &&\n        fieldReference.validate.constructor.name === ASYNC_FUNCTION) ||\n        (isObject(fieldReference.validate) &&\n            Object.values(fieldReference.validate).find((validateFunction) => validateFunction.constructor.name === ASYNC_FUNCTION)));\n\nvar hasValidation = (options) => options.mount &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\n    const error = get(errors, name);\n    if (error || isKey(name)) {\n        return {\n            error,\n            name,\n        };\n    }\n    const names = name.split('.');\n    while (names.length) {\n        const fieldName = names.join('.');\n        const field = get(_fields, fieldName);\n        const foundError = get(errors, fieldName);\n        if (field && !Array.isArray(field) && name !== fieldName) {\n            return { name };\n        }\n        if (foundError && foundError.type) {\n            return {\n                name: fieldName,\n                error: foundError,\n            };\n        }\n        names.pop();\n    }\n    return {\n        name,\n    };\n}\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n    if (mode.isOnAll) {\n        return false;\n    }\n    else if (!isSubmitted && mode.isOnTouch) {\n        return !(isTouched || isBlurEvent);\n    }\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n        return !isBlurEvent;\n    }\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n        return isBlurEvent;\n    }\n    return true;\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nfunction createFormControl(props = {}) {\n    let _options = {\n        ...defaultOptions,\n        ...props,\n    };\n    let _formState = {\n        submitCount: 0,\n        isDirty: false,\n        isLoading: isFunction(_options.defaultValues),\n        isValidating: false,\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        touchedFields: {},\n        dirtyFields: {},\n        validatingFields: {},\n        errors: _options.errors || {},\n        disabled: _options.disabled || false,\n    };\n    let _fields = {};\n    let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values)\n        ? cloneObject(_options.defaultValues || _options.values) || {}\n        : {};\n    let _formValues = _options.shouldUnregister\n        ? {}\n        : cloneObject(_defaultValues);\n    let _state = {\n        action: false,\n        mount: false,\n        watch: false,\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n    };\n    let delayErrorCallback;\n    let timer = 0;\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        validatingFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    const _subjects = {\n        values: createSubject(),\n        array: createSubject(),\n        state: createSubject(),\n    };\n    const validationModeBeforeSubmit = getValidationModes(_options.mode);\n    const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n    const debounce = (callback) => (wait) => {\n        clearTimeout(timer);\n        timer = setTimeout(callback, wait);\n    };\n    const _updateValid = async (shouldUpdateValid) => {\n        if (!props.disabled && (_proxyFormState.isValid || shouldUpdateValid)) {\n            const isValid = _options.resolver\n                ? isEmptyObject((await _executeSchema()).errors)\n                : await executeBuiltInValidation(_fields, true);\n            if (isValid !== _formState.isValid) {\n                _subjects.state.next({\n                    isValid,\n                });\n            }\n        }\n    };\n    const _updateIsValidating = (names, isValidating) => {\n        if (!props.disabled &&\n            (_proxyFormState.isValidating || _proxyFormState.validatingFields)) {\n            (names || Array.from(_names.mount)).forEach((name) => {\n                if (name) {\n                    isValidating\n                        ? set(_formState.validatingFields, name, isValidating)\n                        : unset(_formState.validatingFields, name);\n                }\n            });\n            _subjects.state.next({\n                validatingFields: _formState.validatingFields,\n                isValidating: !isEmptyObject(_formState.validatingFields),\n            });\n        }\n    };\n    const _updateFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {\n        if (args && method && !props.disabled) {\n            _state.action = true;\n            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n                const fieldValues = method(get(_fields, name), args.argA, args.argB);\n                shouldSetValues && set(_fields, name, fieldValues);\n            }\n            if (shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.errors, name))) {\n                const errors = method(get(_formState.errors, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.errors, name, errors);\n                unsetEmptyArray(_formState.errors, name);\n            }\n            if (_proxyFormState.touchedFields &&\n                shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.touchedFields, name))) {\n                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n            }\n            if (_proxyFormState.dirtyFields) {\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n            }\n            _subjects.state.next({\n                name,\n                isDirty: _getDirty(name, values),\n                dirtyFields: _formState.dirtyFields,\n                errors: _formState.errors,\n                isValid: _formState.isValid,\n            });\n        }\n        else {\n            set(_formValues, name, values);\n        }\n    };\n    const updateErrors = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const _setErrors = (errors) => {\n        _formState.errors = errors;\n        _subjects.state.next({\n            errors: _formState.errors,\n            isValid: false,\n        });\n    };\n    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n        const field = get(_fields, name);\n        if (field) {\n            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n            isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipSetValueAs\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\n                : setFieldValue(name, defaultValue);\n            _state.mount && _updateValid();\n        }\n    };\n    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n        let shouldUpdateField = false;\n        let isPreviousDirty = false;\n        const output = {\n            name,\n        };\n        if (!props.disabled) {\n            const disabledField = !!(get(_fields, name) &&\n                get(_fields, name)._f &&\n                get(_fields, name)._f.disabled);\n            if (!isBlurEvent || shouldDirty) {\n                if (_proxyFormState.isDirty) {\n                    isPreviousDirty = _formState.isDirty;\n                    _formState.isDirty = output.isDirty = _getDirty();\n                    shouldUpdateField = isPreviousDirty !== output.isDirty;\n                }\n                const isCurrentFieldPristine = disabledField || deepEqual(get(_defaultValues, name), fieldValue);\n                isPreviousDirty = !!(!disabledField && get(_formState.dirtyFields, name));\n                isCurrentFieldPristine || disabledField\n                    ? unset(_formState.dirtyFields, name)\n                    : set(_formState.dirtyFields, name, true);\n                output.dirtyFields = _formState.dirtyFields;\n                shouldUpdateField =\n                    shouldUpdateField ||\n                        (_proxyFormState.dirtyFields &&\n                            isPreviousDirty !== !isCurrentFieldPristine);\n            }\n            if (isBlurEvent) {\n                const isPreviousFieldTouched = get(_formState.touchedFields, name);\n                if (!isPreviousFieldTouched) {\n                    set(_formState.touchedFields, name, isBlurEvent);\n                    output.touchedFields = _formState.touchedFields;\n                    shouldUpdateField =\n                        shouldUpdateField ||\n                            (_proxyFormState.touchedFields &&\n                                isPreviousFieldTouched !== isBlurEvent);\n                }\n            }\n            shouldUpdateField && shouldRender && _subjects.state.next(output);\n        }\n        return shouldUpdateField ? output : {};\n    };\n    const shouldRenderByError = (name, isValid, error, fieldState) => {\n        const previousFieldError = get(_formState.errors, name);\n        const shouldUpdateValid = _proxyFormState.isValid &&\n            isBoolean(isValid) &&\n            _formState.isValid !== isValid;\n        if (props.delayError && error) {\n            delayErrorCallback = debounce(() => updateErrors(name, error));\n            delayErrorCallback(props.delayError);\n        }\n        else {\n            clearTimeout(timer);\n            delayErrorCallback = null;\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n            !isEmptyObject(fieldState) ||\n            shouldUpdateValid) {\n            const updatedFormState = {\n                ...fieldState,\n                ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n                errors: _formState.errors,\n                name,\n            };\n            _formState = {\n                ..._formState,\n                ...updatedFormState,\n            };\n            _subjects.state.next(updatedFormState);\n        }\n    };\n    const _executeSchema = async (name) => {\n        _updateIsValidating(name, true);\n        const result = await _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\n        _updateIsValidating(name);\n        return result;\n    };\n    const executeSchemaAndUpdateState = async (names) => {\n        const { errors } = await _executeSchema(names);\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {\n        valid: true,\n    }) => {\n        for (const name in fields) {\n            const field = fields[name];\n            if (field) {\n                const { _f, ...fieldValue } = field;\n                if (_f) {\n                    const isFieldArrayRoot = _names.array.has(_f.name);\n                    const isPromiseFunction = field._f && hasPromiseValidation(field._f);\n                    if (isPromiseFunction && _proxyFormState.validatingFields) {\n                        _updateIsValidating([name], true);\n                    }\n                    const fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);\n                    if (isPromiseFunction && _proxyFormState.validatingFields) {\n                        _updateIsValidating([name]);\n                    }\n                    if (fieldError[_f.name]) {\n                        context.valid = false;\n                        if (shouldOnlyCheckValid) {\n                            break;\n                        }\n                    }\n                    !shouldOnlyCheckValid &&\n                        (get(fieldError, _f.name)\n                            ? isFieldArrayRoot\n                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)\n                                : set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name));\n                }\n                !isEmptyObject(fieldValue) &&\n                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const _removeUnmounted = () => {\n        for (const name of _names.unMount) {\n            const field = get(_fields, name);\n            field &&\n                (field._f.refs\n                    ? field._f.refs.every((ref) => !live(ref))\n                    : !live(field._f.ref)) &&\n                unregister(name);\n        }\n        _names.unMount = new Set();\n    };\n    const _getDirty = (name, data) => !props.disabled &&\n        (name && data && set(_formValues, name, data),\n            !deepEqual(getValues(), _defaultValues));\n    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\n        ...(_state.mount\n            ? _formValues\n            : isUndefined(defaultValue)\n                ? _defaultValues\n                : isString(names)\n                    ? { [names]: defaultValue }\n                    : defaultValue),\n    }, isGlobal, defaultValue);\n    const _getFieldArray = (name) => compact(get(_state.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));\n    const setFieldValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        let fieldValue = value;\n        if (field) {\n            const fieldReference = field._f;\n            if (fieldReference) {\n                !fieldReference.disabled &&\n                    set(_formValues, name, getFieldValueAs(value, fieldReference));\n                fieldValue =\n                    isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n                        ? ''\n                        : value;\n                if (isMultipleSelect(fieldReference.ref)) {\n                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));\n                }\n                else if (fieldReference.refs) {\n                    if (isCheckBoxInput(fieldReference.ref)) {\n                        fieldReference.refs.length > 1\n                            ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                                (checkboxRef.checked = Array.isArray(fieldValue)\n                                    ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                    : fieldValue === checkboxRef.value))\n                            : fieldReference.refs[0] &&\n                                (fieldReference.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else if (isFileInput(fieldReference.ref)) {\n                    fieldReference.ref.value = '';\n                }\n                else {\n                    fieldReference.ref.value = fieldValue;\n                    if (!fieldReference.ref.type) {\n                        _subjects.values.next({\n                            name,\n                            values: { ..._formValues },\n                        });\n                    }\n                }\n            }\n        }\n        (options.shouldDirty || options.shouldTouch) &&\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n        options.shouldValidate && trigger(name);\n    };\n    const setValues = (name, value, options) => {\n        for (const fieldKey in value) {\n            const fieldValue = value[fieldKey];\n            const fieldName = `${name}.${fieldKey}`;\n            const field = get(_fields, fieldName);\n            (_names.array.has(name) ||\n                isObject(fieldValue) ||\n                (field && !field._f)) &&\n                !isDateObject(fieldValue)\n                ? setValues(fieldName, fieldValue, options)\n                : setFieldValue(fieldName, fieldValue, options);\n        }\n    };\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        const cloneValue = cloneObject(value);\n        set(_formValues, name, cloneValue);\n        if (isFieldArray) {\n            _subjects.array.next({\n                name,\n                values: { ..._formValues },\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                _subjects.state.next({\n                    name,\n                    dirtyFields: getDirtyFields(_defaultValues, _formValues),\n                    isDirty: _getDirty(name, cloneValue),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(cloneValue)\n                ? setValues(name, cloneValue, options)\n                : setFieldValue(name, cloneValue, options);\n        }\n        isWatched(name, _names) && _subjects.state.next({ ..._formState });\n        _subjects.values.next({\n            name: _state.mount ? name : undefined,\n            values: { ..._formValues },\n        });\n    };\n    const onChange = async (event) => {\n        _state.mount = true;\n        const target = event.target;\n        let name = target.name;\n        let isFieldValueUpdated = true;\n        const field = get(_fields, name);\n        const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);\n        const _updateIsFieldValueUpdated = (fieldValue) => {\n            isFieldValueUpdated =\n                Number.isNaN(fieldValue) ||\n                    (isDateObject(fieldValue) && isNaN(fieldValue.getTime())) ||\n                    deepEqual(fieldValue, get(_formValues, name, fieldValue));\n        };\n        if (field) {\n            let error;\n            let isValid;\n            const fieldValue = getCurrentFieldValue();\n            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n            const shouldSkipValidation = (!hasValidation(field._f) &&\n                !_options.resolver &&\n                !get(_formState.errors, name) &&\n                !field._f.deps) ||\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n            const watched = isWatched(name, _names, isBlurEvent);\n            set(_formValues, name, fieldValue);\n            if (isBlurEvent) {\n                field._f.onBlur && field._f.onBlur(event);\n                delayErrorCallback && delayErrorCallback(0);\n            }\n            else if (field._f.onChange) {\n                field._f.onChange(event);\n            }\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\n            const shouldRender = !isEmptyObject(fieldState) || watched;\n            !isBlurEvent &&\n                _subjects.values.next({\n                    name,\n                    type: event.type,\n                    values: { ..._formValues },\n                });\n            if (shouldSkipValidation) {\n                if (_proxyFormState.isValid) {\n                    if (props.mode === 'onBlur') {\n                        if (isBlurEvent) {\n                            _updateValid();\n                        }\n                    }\n                    else {\n                        _updateValid();\n                    }\n                }\n                return (shouldRender &&\n                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));\n            }\n            !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n            if (_options.resolver) {\n                const { errors } = await _executeSchema([name]);\n                _updateIsFieldValueUpdated(fieldValue);\n                if (isFieldValueUpdated) {\n                    const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n                    const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n                    error = errorLookupResult.error;\n                    name = errorLookupResult.name;\n                    isValid = isEmptyObject(errors);\n                }\n            }\n            else {\n                _updateIsValidating([name], true);\n                error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n                _updateIsValidating([name]);\n                _updateIsFieldValueUpdated(fieldValue);\n                if (isFieldValueUpdated) {\n                    if (error) {\n                        isValid = false;\n                    }\n                    else if (_proxyFormState.isValid) {\n                        isValid = await executeBuiltInValidation(_fields, true);\n                    }\n                }\n            }\n            if (isFieldValueUpdated) {\n                field._f.deps &&\n                    trigger(field._f.deps);\n                shouldRenderByError(name, isValid, error, fieldState);\n            }\n        }\n    };\n    const _focusInput = (ref, key) => {\n        if (get(_formState.errors, key) && ref.focus) {\n            ref.focus();\n            return 1;\n        }\n        return;\n    };\n    const trigger = async (name, options = {}) => {\n        let isValid;\n        let validationResult;\n        const fieldNames = convertToArrayPayload(name);\n        if (_options.resolver) {\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n            isValid = isEmptyObject(errors);\n            validationResult = name\n                ? !fieldNames.some((name) => get(errors, name))\n                : isValid;\n        }\n        else if (name) {\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\n                const field = get(_fields, fieldName);\n                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);\n            }))).every(Boolean);\n            !(!validationResult && !_formState.isValid) && _updateValid();\n        }\n        else {\n            validationResult = isValid = await executeBuiltInValidation(_fields);\n        }\n        _subjects.state.next({\n            ...(!isString(name) ||\n                (_proxyFormState.isValid && isValid !== _formState.isValid)\n                ? {}\n                : { name }),\n            ...(_options.resolver || !name ? { isValid } : {}),\n            errors: _formState.errors,\n        });\n        options.shouldFocus &&\n            !validationResult &&\n            iterateFieldsByAction(_fields, _focusInput, name ? fieldNames : _names.mount);\n        return validationResult;\n    };\n    const getValues = (fieldNames) => {\n        const values = {\n            ...(_state.mount ? _formValues : _defaultValues),\n        };\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const getFieldState = (name, formState) => ({\n        invalid: !!get((formState || _formState).errors, name),\n        isDirty: !!get((formState || _formState).dirtyFields, name),\n        error: get((formState || _formState).errors, name),\n        isValidating: !!get(_formState.validatingFields, name),\n        isTouched: !!get((formState || _formState).touchedFields, name),\n    });\n    const clearErrors = (name) => {\n        name &&\n            convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));\n        _subjects.state.next({\n            errors: name ? _formState.errors : {},\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        const currentError = get(_formState.errors, name) || {};\n        // Don't override existing error messages elsewhere in the object tree.\n        const { ref: currentRef, message, type, ...restOfErrorTree } = currentError;\n        set(_formState.errors, name, {\n            ...restOfErrorTree,\n            ...error,\n            ref,\n        });\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (name, defaultValue) => isFunction(name)\n        ? _subjects.values.subscribe({\n            next: (payload) => name(_getWatch(undefined, defaultValue), payload),\n        })\n        : _getWatch(name, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(fieldName);\n            _names.array.delete(fieldName);\n            if (!options.keepValue) {\n                unset(_fields, fieldName);\n                unset(_formValues, fieldName);\n            }\n            !options.keepError && unset(_formState.errors, fieldName);\n            !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n            !options.keepTouched && unset(_formState.touchedFields, fieldName);\n            !options.keepIsValidating &&\n                unset(_formState.validatingFields, fieldName);\n            !_options.shouldUnregister &&\n                !options.keepDefaultValue &&\n                unset(_defaultValues, fieldName);\n        }\n        _subjects.values.next({\n            values: { ..._formValues },\n        });\n        _subjects.state.next({\n            ..._formState,\n            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n        });\n        !options.keepIsValid && _updateValid();\n    };\n    const _updateDisabledField = ({ disabled, name, field, fields, value, }) => {\n        if ((isBoolean(disabled) && _state.mount) || !!disabled) {\n            const inputValue = disabled\n                ? undefined\n                : isUndefined(value)\n                    ? getFieldValue(field ? field._f : get(fields, name)._f)\n                    : value;\n            set(_formValues, name, inputValue);\n            updateTouchAndDirty(name, inputValue, false, false, true);\n        }\n    };\n    const register = (name, options = {}) => {\n        let field = get(_fields, name);\n        const disabledIsDefined = isBoolean(options.disabled) || isBoolean(props.disabled);\n        set(_fields, name, {\n            ...(field || {}),\n            _f: {\n                ...(field && field._f ? field._f : { ref: { name } }),\n                name,\n                mount: true,\n                ...options,\n            },\n        });\n        _names.mount.add(name);\n        if (field) {\n            _updateDisabledField({\n                field,\n                disabled: isBoolean(options.disabled)\n                    ? options.disabled\n                    : props.disabled,\n                name,\n                value: options.value,\n            });\n        }\n        else {\n            updateValidAndValue(name, true, options.value);\n        }\n        return {\n            ...(disabledIsDefined\n                ? { disabled: options.disabled || props.disabled }\n                : {}),\n            ...(_options.progressive\n                ? {\n                    required: !!options.required,\n                    min: getRuleValue(options.min),\n                    max: getRuleValue(options.max),\n                    minLength: getRuleValue(options.minLength),\n                    maxLength: getRuleValue(options.maxLength),\n                    pattern: getRuleValue(options.pattern),\n                }\n                : {}),\n            name,\n            onChange,\n            onBlur: onChange,\n            ref: (ref) => {\n                if (ref) {\n                    register(name, options);\n                    field = get(_fields, name);\n                    const fieldRef = isUndefined(ref.value)\n                        ? ref.querySelectorAll\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\n                            : ref\n                        : ref;\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n                    const refs = field._f.refs || [];\n                    if (radioOrCheckbox\n                        ? refs.find((option) => option === fieldRef)\n                        : fieldRef === field._f.ref) {\n                        return;\n                    }\n                    set(_fields, name, {\n                        _f: {\n                            ...field._f,\n                            ...(radioOrCheckbox\n                                ? {\n                                    refs: [\n                                        ...refs.filter(live),\n                                        fieldRef,\n                                        ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                                    ],\n                                    ref: { type: fieldRef.type, name },\n                                }\n                                : { ref: fieldRef }),\n                        },\n                    });\n                    updateValidAndValue(name, false, undefined, fieldRef);\n                }\n                else {\n                    field = get(_fields, name, {});\n                    if (field._f) {\n                        field._f.mount = false;\n                    }\n                    (_options.shouldUnregister || options.shouldUnregister) &&\n                        !(isNameInFieldArray(_names.array, name) && _state.action) &&\n                        _names.unMount.add(name);\n                }\n            },\n        };\n    };\n    const _focusError = () => _options.shouldFocusError &&\n        iterateFieldsByAction(_fields, _focusInput, _names.mount);\n    const _disableForm = (disabled) => {\n        if (isBoolean(disabled)) {\n            _subjects.state.next({ disabled });\n            iterateFieldsByAction(_fields, (ref, name) => {\n                const currentField = get(_fields, name);\n                if (currentField) {\n                    ref.disabled = currentField._f.disabled || disabled;\n                    if (Array.isArray(currentField._f.refs)) {\n                        currentField._f.refs.forEach((inputRef) => {\n                            inputRef.disabled = currentField._f.disabled || disabled;\n                        });\n                    }\n                }\n            }, 0, false);\n        }\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        let onValidError = undefined;\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let fieldValues = cloneObject(_formValues);\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        if (_options.resolver) {\n            const { errors, values } = await _executeSchema();\n            _formState.errors = errors;\n            fieldValues = values;\n        }\n        else {\n            await executeBuiltInValidation(_fields);\n        }\n        unset(_formState.errors, 'root');\n        if (isEmptyObject(_formState.errors)) {\n            _subjects.state.next({\n                errors: {},\n            });\n            try {\n                await onValid(fieldValues, e);\n            }\n            catch (error) {\n                onValidError = error;\n            }\n        }\n        else {\n            if (onInvalid) {\n                await onInvalid({ ..._formState.errors }, e);\n            }\n            _focusError();\n            setTimeout(_focusError);\n        }\n        _subjects.state.next({\n            isSubmitted: true,\n            isSubmitting: false,\n            isSubmitSuccessful: isEmptyObject(_formState.errors) && !onValidError,\n            submitCount: _formState.submitCount + 1,\n            errors: _formState.errors,\n        });\n        if (onValidError) {\n            throw onValidError;\n        }\n    };\n    const resetField = (name, options = {}) => {\n        if (get(_fields, name)) {\n            if (isUndefined(options.defaultValue)) {\n                setValue(name, cloneObject(get(_defaultValues, name)));\n            }\n            else {\n                setValue(name, options.defaultValue);\n                set(_defaultValues, name, cloneObject(options.defaultValue));\n            }\n            if (!options.keepTouched) {\n                unset(_formState.touchedFields, name);\n            }\n            if (!options.keepDirty) {\n                unset(_formState.dirtyFields, name);\n                _formState.isDirty = options.defaultValue\n                    ? _getDirty(name, cloneObject(get(_defaultValues, name)))\n                    : _getDirty();\n            }\n            if (!options.keepError) {\n                unset(_formState.errors, name);\n                _proxyFormState.isValid && _updateValid();\n            }\n            _subjects.state.next({ ..._formState });\n        }\n    };\n    const _reset = (formValues, keepStateOptions = {}) => {\n        const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;\n        const cloneUpdatedValues = cloneObject(updatedValues);\n        const isEmptyResetValues = isEmptyObject(formValues);\n        const values = isEmptyResetValues ? _defaultValues : cloneUpdatedValues;\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = updatedValues;\n        }\n        if (!keepStateOptions.keepValues) {\n            if (keepStateOptions.keepDirtyValues) {\n                const fieldsToCheck = new Set([\n                    ..._names.mount,\n                    ...Object.keys(getDirtyFields(_defaultValues, _formValues)),\n                ]);\n                for (const fieldName of Array.from(fieldsToCheck)) {\n                    get(_formState.dirtyFields, fieldName)\n                        ? set(values, fieldName, get(_formValues, fieldName))\n                        : setValue(fieldName, get(values, fieldName));\n                }\n            }\n            else {\n                if (isWeb && isUndefined(formValues)) {\n                    for (const name of _names.mount) {\n                        const field = get(_fields, name);\n                        if (field && field._f) {\n                            const fieldReference = Array.isArray(field._f.refs)\n                                ? field._f.refs[0]\n                                : field._f.ref;\n                            if (isHTMLElement(fieldReference)) {\n                                const form = fieldReference.closest('form');\n                                if (form) {\n                                    form.reset();\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                _fields = {};\n            }\n            _formValues = props.shouldUnregister\n                ? keepStateOptions.keepDefaultValues\n                    ? cloneObject(_defaultValues)\n                    : {}\n                : cloneObject(values);\n            _subjects.array.next({\n                values: { ...values },\n            });\n            _subjects.values.next({\n                values: { ...values },\n            });\n        }\n        _names = {\n            mount: keepStateOptions.keepDirtyValues ? _names.mount : new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n            focus: '',\n        };\n        _state.mount =\n            !_proxyFormState.isValid ||\n                !!keepStateOptions.keepIsValid ||\n                !!keepStateOptions.keepDirtyValues;\n        _state.watch = !!props.shouldUnregister;\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: isEmptyResetValues\n                ? false\n                : keepStateOptions.keepDirty\n                    ? _formState.isDirty\n                    : !!(keepStateOptions.keepDefaultValues &&\n                        !deepEqual(formValues, _defaultValues)),\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: isEmptyResetValues\n                ? {}\n                : keepStateOptions.keepDirtyValues\n                    ? keepStateOptions.keepDefaultValues && _formValues\n                        ? getDirtyFields(_defaultValues, _formValues)\n                        : _formState.dirtyFields\n                    : keepStateOptions.keepDefaultValues && formValues\n                        ? getDirtyFields(_defaultValues, formValues)\n                        : keepStateOptions.keepDirty\n                            ? _formState.dirtyFields\n                            : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful\n                ? _formState.isSubmitSuccessful\n                : false,\n            isSubmitting: false,\n        });\n    };\n    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)\n        ? formValues(_formValues)\n        : formValues, keepStateOptions);\n    const setFocus = (name, options = {}) => {\n        const field = get(_fields, name);\n        const fieldReference = field && field._f;\n        if (fieldReference) {\n            const fieldRef = fieldReference.refs\n                ? fieldReference.refs[0]\n                : fieldReference.ref;\n            if (fieldRef.focus) {\n                fieldRef.focus();\n                options.shouldSelect && fieldRef.select();\n            }\n        }\n    };\n    const _updateFormState = (updatedFormState) => {\n        _formState = {\n            ..._formState,\n            ...updatedFormState,\n        };\n    };\n    const _resetDefaultValues = () => isFunction(_options.defaultValues) &&\n        _options.defaultValues().then((values) => {\n            reset(values, _options.resetOptions);\n            _subjects.state.next({\n                isLoading: false,\n            });\n        });\n    return {\n        control: {\n            register,\n            unregister,\n            getFieldState,\n            handleSubmit,\n            setError,\n            _executeSchema,\n            _getWatch,\n            _getDirty,\n            _updateValid,\n            _removeUnmounted,\n            _updateFieldArray,\n            _updateDisabledField,\n            _getFieldArray,\n            _reset,\n            _resetDefaultValues,\n            _updateFormState,\n            _disableForm,\n            _subjects,\n            _proxyFormState,\n            _setErrors,\n            get _fields() {\n                return _fields;\n            },\n            get _formValues() {\n                return _formValues;\n            },\n            get _state() {\n                return _state;\n            },\n            set _state(value) {\n                _state = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            get _formState() {\n                return _formState;\n            },\n            set _formState(value) {\n                _formState = value;\n            },\n            get _options() {\n                return _options;\n            },\n            set _options(value) {\n                _options = {\n                    ..._options,\n                    ...value,\n                };\n            },\n        },\n        trigger,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        resetField,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n        getFieldState,\n    };\n}\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useForm(props = {}) {\n    const _formControl = React.useRef();\n    const _values = React.useRef();\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        isLoading: isFunction(props.defaultValues),\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        submitCount: 0,\n        dirtyFields: {},\n        touchedFields: {},\n        validatingFields: {},\n        errors: props.errors || {},\n        disabled: props.disabled || false,\n        defaultValues: isFunction(props.defaultValues)\n            ? undefined\n            : props.defaultValues,\n    });\n    if (!_formControl.current) {\n        _formControl.current = {\n            ...createFormControl(props),\n            formState,\n        };\n    }\n    const control = _formControl.current.control;\n    control._options = props;\n    useSubscribe({\n        subject: control._subjects.state,\n        next: (value) => {\n            if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {\n                updateFormState({ ...control._formState });\n            }\n        },\n    });\n    React.useEffect(() => control._disableForm(props.disabled), [control, props.disabled]);\n    React.useEffect(() => {\n        if (control._proxyFormState.isDirty) {\n            const isDirty = control._getDirty();\n            if (isDirty !== formState.isDirty) {\n                control._subjects.state.next({\n                    isDirty,\n                });\n            }\n        }\n    }, [control, formState.isDirty]);\n    React.useEffect(() => {\n        if (props.values && !deepEqual(props.values, _values.current)) {\n            control._reset(props.values, control._options.resetOptions);\n            _values.current = props.values;\n            updateFormState((state) => ({ ...state }));\n        }\n        else {\n            control._resetDefaultValues();\n        }\n    }, [props.values, control]);\n    React.useEffect(() => {\n        if (props.errors) {\n            control._setErrors(props.errors);\n        }\n    }, [props.errors, control]);\n    React.useEffect(() => {\n        if (!control._state.mount) {\n            control._updateValid();\n            control._state.mount = true;\n        }\n        if (control._state.watch) {\n            control._state.watch = false;\n            control._subjects.state.next({ ...control._formState });\n        }\n        control._removeUnmounted();\n    });\n    React.useEffect(() => {\n        props.shouldUnregister &&\n            control._subjects.values.next({\n                values: control._getWatch(),\n            });\n    }, [props.shouldUnregister, control]);\n    React.useEffect(() => {\n        if (_formControl.current) {\n            _formControl.current.watch = _formControl.current.watch.bind({});\n        }\n    }, [formState]);\n    _formControl.current.formState = getProxyFormState(formState, control);\n    return _formControl.current;\n}\n\nexport { Controller, Form, FormProvider, appendErrors, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.mjs.map\n","import * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport {\r\n  Controller,\r\n  ControllerProps,\r\n  FieldPath,\r\n  FieldValues,\r\n  FormProvider,\r\n  useFormContext,\r\n} from \"react-hook-form\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nconst Form = FormProvider\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n> = {\r\n  name: TName\r\n}\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n)\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  )\r\n}\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext)\r\n  const itemContext = React.useContext(FormItemContext)\r\n  const { getFieldState, formState } = useFormContext()\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState)\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\")\r\n  }\r\n\r\n  const { id } = itemContext\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  }\r\n}\r\n\r\ntype FormItemContextValue = {\r\n  id: string\r\n}\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n)\r\n\r\nconst FormItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const id = React.useId()\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n    </FormItemContext.Provider>\r\n  )\r\n})\r\nFormItem.displayName = \"FormItem\"\r\n\r\nconst FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField()\r\n\r\n  return (\r\n    <Label\r\n      ref={ref}\r\n      className={cn(error && \"text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormLabel.displayName = \"FormLabel\"\r\n\r\nconst FormControl = React.forwardRef<\r\n  React.ElementRef<typeof Slot>,\r\n  React.ComponentPropsWithoutRef<typeof Slot>\r\n>(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\r\n\r\n  return (\r\n    <Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormControl.displayName = \"FormControl\"\r\n\r\nconst FormDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField()\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn(\"text-sm text-muted-foreground\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormDescription.displayName = \"FormDescription\"\r\n\r\nconst FormMessage = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField()\r\n  const body = error ? String(error?.message) : children\r\n\r\n  if (!body) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn(\"text-sm font-medium text-destructive\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  )\r\n})\r\nFormMessage.displayName = \"FormMessage\"\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField,\r\n}\r\n","var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            overrideMap,\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * @deprecated Use z.string().min(1) instead.\n     * @see {@link ZodString.min}\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nfunction custom(check, params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n","import{get as t,set as e}from\"react-hook-form\";const s=(e,s,o)=>{if(e&&\"reportValidity\"in e){const r=t(o,s);e.setCustomValidity(r&&r.message||\"\"),e.reportValidity()}},o=(t,e)=>{for(const o in e.fields){const r=e.fields[o];r&&r.ref&&\"reportValidity\"in r.ref?s(r.ref,o,t):r.refs&&r.refs.forEach(e=>s(e,o,t))}},r=(s,r)=>{r.shouldUseNativeValidation&&o(s,r);const f={};for(const o in s){const n=t(r.fields,o),a=Object.assign(s[o]||{},{ref:n&&n.ref});if(i(r.names||Object.keys(s),o)){const s=Object.assign({},t(f,o));e(s,\"root\",a),e(f,o,s)}else e(f,o,a)}return f},i=(t,e)=>t.some(t=>t.startsWith(e+\".\"));export{r as toNestErrors,o as validateFieldsNatively};\n//# sourceMappingURL=resolvers.mjs.map\n","import{validateFieldsNatively as r,toNestErrors as e}from\"@hookform/resolvers\";import{appendErrors as o}from\"react-hook-form\";var n=function(r,e){for(var n={};r.length;){var t=r[0],s=t.code,i=t.message,a=t.path.join(\".\");if(!n[a])if(\"unionErrors\"in t){var u=t.unionErrors[0].errors[0];n[a]={message:u.message,type:u.code}}else n[a]={message:i,type:s};if(\"unionErrors\"in t&&t.unionErrors.forEach(function(e){return e.errors.forEach(function(e){return r.push(e)})}),e){var c=n[a].types,f=c&&c[t.code];n[a]=o(a,e,n,s,f?[].concat(f,t.message):t.message)}r.shift()}return n},t=function(o,t,s){return void 0===s&&(s={}),function(i,a,u){try{return Promise.resolve(function(e,n){try{var a=Promise.resolve(o[\"sync\"===s.mode?\"parse\":\"parseAsync\"](i,t)).then(function(e){return u.shouldUseNativeValidation&&r({},u),{errors:{},values:s.raw?i:e}})}catch(r){return n(r)}return a&&a.then?a.then(void 0,n):a}(0,function(r){if(function(r){return Array.isArray(null==r?void 0:r.errors)}(r))return{values:{},errors:e(n(r.errors,!u.shouldUseNativeValidation&&\"all\"===u.criteriaMode),u)};throw r}))}catch(r){return Promise.reject(r)}}};export{t as zodResolver};\n//# sourceMappingURL=zod.module.js.map\n","\r\nimport { useState, useEffect } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\nimport { Form, FormField, FormItem, FormLabel, FormControl, FormMessage } from \"@/components/ui/form\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { DollarSign, Plus, Save, History, Users } from \"lucide-react\";\r\nimport { z } from \"zod\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { supabase } from \"@/integrations/supabase/client\";\r\nimport { toast } from \"sonner\";\r\nimport { formatPHP } from \"@/utils/currency\";\r\n\r\ninterface PriceHistoryEntry {\r\n  id: string;\r\n  date: string;\r\n  price: number;\r\n  client_name: string;\r\n  note?: string;\r\n}\r\n\r\ninterface AddClientPriceDialogProps {\r\n  open: boolean;\r\n  onOpenChange: (open: boolean) => void;\r\n  availableClients: Array<{ id: string; name: string }>;\r\n  onSave: (clientId: string, price: number) => void;\r\n  initialClientId?: string;\r\n  initialPrice?: number;\r\n  productId?: string;\r\n}\r\n\r\nexport function AddClientPriceDialog({\r\n  open,\r\n  onOpenChange,\r\n  availableClients,\r\n  onSave,\r\n  initialClientId = '',\r\n  initialPrice = 0,\r\n  productId,\r\n}: AddClientPriceDialogProps) {\r\n  const [priceHistory, setPriceHistory] = useState<PriceHistoryEntry[]>([]);\r\n  const [loadingHistory, setLoadingHistory] = useState(false);\r\n\r\n  const formSchema = z.object({\r\n    clientId: z.string().min(1, \"Client is required\"),\r\n    price: z.coerce.number().min(0, \"Price cannot be negative\"),\r\n  });\r\n\r\n  type FormValues = z.infer<typeof formSchema>;\r\n  \r\n  const form = useForm<FormValues>({\r\n    resolver: zodResolver(formSchema),\r\n    defaultValues: {\r\n      clientId: initialClientId,\r\n      price: initialPrice,\r\n    },\r\n    values: {\r\n      clientId: initialClientId,\r\n      price: initialPrice,\r\n    },\r\n  });\r\n\r\n  // Fetch client price history only for this product\r\n  const fetchClientPriceHistory = async () => {\r\n    if (!productId) return;\r\n    \r\n    setLoadingHistory(true);\r\n    try {\r\n      const { data: clientHistory, error } = await supabase\r\n        .from('client_price_history')\r\n        .select(`\r\n          id,\r\n          price,\r\n          timestamp,\r\n          note,\r\n          product_clients!inner(\r\n            client:clients(name)\r\n          )\r\n        `)\r\n        .eq('product_clients.product_id', productId)\r\n        .order('timestamp', { ascending: false });\r\n\r\n      if (error) throw error;\r\n\r\n      const formattedHistory: PriceHistoryEntry[] = (clientHistory || []).map(item => ({\r\n        id: item.id,\r\n        date: item.timestamp,\r\n        price: item.price,\r\n        client_name: item.product_clients?.client?.name || 'Unknown Client',\r\n        note: item.note || undefined,\r\n      }));\r\n\r\n      setPriceHistory(formattedHistory);\r\n    } catch (error) {\r\n      console.error('Error fetching client price history:', error);\r\n      toast.error('Failed to load price history');\r\n    } finally {\r\n      setLoadingHistory(false);\r\n    }\r\n  };\r\n\r\n  // Load data when dialog opens\r\n  useEffect(() => {\r\n    if (open && productId) {\r\n      fetchClientPriceHistory();\r\n    }\r\n  }, [open, productId]);\r\n  \r\n  const handleAddClientPrice = async (data: FormValues) => {\r\n    try {\r\n      // Check if product_client relationship exists\r\n      let { data: existingRelation, error: checkError } = await supabase\r\n        .from('product_clients')\r\n        .select('id, quoted_price')\r\n        .eq('product_id', productId)\r\n        .eq('client_id', data.clientId)\r\n        .maybeSingle();\r\n\r\n      if (checkError) throw checkError;\r\n\r\n      if (existingRelation) {\r\n        // Update existing relationship\r\n        const { error: updateError } = await supabase\r\n          .from('product_clients')\r\n          .update({ \r\n            quoted_price: data.price,\r\n            updated_at: new Date().toISOString()\r\n          })\r\n          .eq('id', existingRelation.id);\r\n\r\n        if (updateError) throw updateError;\r\n      } else {\r\n        // Create new relationship\r\n        const { error: insertError } = await supabase\r\n          .from('product_clients')\r\n          .insert({\r\n            product_id: productId,\r\n            client_id: data.clientId,\r\n            quoted_price: data.price,\r\n          });\r\n\r\n        if (insertError) throw insertError;\r\n      }\r\n\r\n      toast.success('Client price saved successfully');\r\n      onSave(data.clientId, data.price);\r\n      form.reset();\r\n      \r\n      // Refresh price history\r\n      fetchClientPriceHistory();\r\n    } catch (error) {\r\n      console.error('Error saving client price:', error);\r\n      toast.error('Failed to save client price');\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-PH', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogContent className=\"w-full max-w-[95vw] sm:max-w-[600px] max-h-[90vh] overflow-hidden flex flex-col\">\r\n        <DialogHeader className=\"flex-shrink-0\">\r\n          <DialogTitle className=\"text-lg sm:text-xl\">Manage Client Pricing</DialogTitle>\r\n        </DialogHeader>\r\n        \r\n        <Tabs defaultValue=\"client\" className=\"flex-1 flex flex-col overflow-hidden\">\r\n          <TabsList className=\"grid w-full grid-cols-2 flex-shrink-0\">\r\n            <TabsTrigger value=\"client\" className=\"flex items-center gap-1 text-xs sm:text-sm\">\r\n              <Users className=\"h-3 w-3 sm:h-4 sm:w-4\" />\r\n              <span className=\"hidden sm:inline\">Client Pricing</span>\r\n              <span className=\"sm:hidden\">Price</span>\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"history\" className=\"flex items-center gap-1 text-xs sm:text-sm\">\r\n              <History className=\"h-3 w-3 sm:h-4 sm:w-4\" />\r\n              <span className=\"hidden sm:inline\">History</span>\r\n            </TabsTrigger>\r\n          </TabsList>\r\n          \r\n          <div className=\"flex-1 overflow-y-auto mt-4\">\r\n            <TabsContent value=\"client\" className=\"mt-0\">\r\n              <Form {...form}>\r\n                <form onSubmit={form.handleSubmit(handleAddClientPrice)} className=\"space-y-4\">\r\n                  <FormField\r\n                    control={form.control}\r\n                    name=\"clientId\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Client</FormLabel>\r\n                        <Select onValueChange={field.onChange} value={field.value} defaultValue={field.value}>\r\n                          <FormControl>\r\n                            <SelectTrigger className=\"bg-white\">\r\n                              <SelectValue placeholder=\"Select a client\" />\r\n                            </SelectTrigger>\r\n                          </FormControl>\r\n                          <SelectContent className=\"bg-white max-h-[200px]\">\r\n                            {availableClients.map(client => (\r\n                              <SelectItem key={client.id} value={client.id}>\r\n                                {client.name}\r\n                              </SelectItem>\r\n                            ))}\r\n                          </SelectContent>\r\n                        </Select>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n                  <FormField\r\n                    control={form.control}\r\n                    name=\"price\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Price</FormLabel>\r\n                        <FormControl>\r\n                          <div className=\"relative\">\r\n                            <span className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500\">₱</span>\r\n                            <Input \r\n                              type=\"number\" \r\n                              step=\"0.01\" \r\n                              className=\"pl-8\" \r\n                              placeholder=\"0.00\"\r\n                              {...field} \r\n                            />\r\n                          </div>\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n                  <div className=\"flex flex-col sm:flex-row gap-2 pt-4\">\r\n                    <Button \r\n                      type=\"button\" \r\n                      variant=\"outline\" \r\n                      className=\"flex-1 sm:flex-none\"\r\n                      onClick={() => onOpenChange(false)}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button type=\"submit\" className=\"flex-1 sm:flex-none\">\r\n                      <Save className=\"h-4 w-4 mr-2\" /> Save Price\r\n                    </Button>\r\n                  </div>\r\n                </form>\r\n              </Form>\r\n            </TabsContent>\r\n            \r\n            <TabsContent value=\"history\" className=\"mt-0\">\r\n              <div className=\"space-y-4\">\r\n                <div className=\"text-sm text-gray-600 mb-3\">Client Price History</div>\r\n                {loadingHistory ? (\r\n                  <div className=\"text-gray-400 text-sm text-center py-8\">\r\n                    Loading price history...\r\n                  </div>\r\n                ) : priceHistory.length === 0 ? (\r\n                  <div className=\"text-gray-400 text-sm text-center py-8\">\r\n                    No client price history available.\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"space-y-2\">\r\n                    {priceHistory.map((entry) => (\r\n                      <div key={entry.id} className=\"bg-gray-50 p-3 rounded border\">\r\n                        <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center gap-2\">\r\n                          <div className=\"flex flex-col\">\r\n                            <span className=\"font-medium text-sm\">\r\n                              {formatPHP(entry.price)}\r\n                            </span>\r\n                            <span className=\"text-xs text-gray-500\">\r\n                              {entry.client_name} • {formatDate(entry.date)}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <span className=\"text-xs px-2 py-1 rounded bg-blue-100 text-blue-700\">\r\n                              Client\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        {entry.note && (\r\n                          <div className=\"text-xs text-gray-600 mt-2\">\r\n                            {entry.note}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </TabsContent>\r\n          </div>\r\n        </Tabs>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { clientService } from '@/services/clientService';\r\nimport { useDepartments } from '../hooks/useDepartments';\r\nimport { Move, ArrowRight } from 'lucide-react';\r\n\r\ninterface PrinterAssignment {\r\n  id: string;\r\n  printer_id: string;\r\n  department: string;\r\n  serial_number: string;\r\n  status: 'active' | 'inactive' | 'returned';\r\n  printer: {\r\n    name: string;\r\n    model?: string;\r\n    manufacturer?: string;\r\n  };\r\n}\r\n\r\ninterface TransferPrinterModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  assignment: PrinterAssignment | null;\r\n  currentClientId: string;\r\n  onTransferCompleted: () => void;\r\n  assignments?: PrinterAssignment[];\r\n  onSelectAssignment?: (assignment: PrinterAssignment) => void;\r\n}\r\n\r\nconst TransferPrinterModal: React.FC<TransferPrinterModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  assignment,\r\n  currentClientId,\r\n  onTransferCompleted,\r\n  assignments = [],\r\n  onSelectAssignment\r\n}) => {\r\n  // If assignments are provided, use selected assignment from prop, else use assignment\r\n  const [selectedAssignmentId, setSelectedAssignmentId] = useState<string>('');\r\n  const selectedAssignment = assignments.length > 0\r\n    ? assignments.find(a => a.id === selectedAssignmentId) || assignments[0]\r\n    : assignment;\r\n\r\n  const [transferData, setTransferData] = useState({\r\n    newDepartment: '',\r\n    newLocation: '',\r\n    notes: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  // Get departments for the current client only\r\n  const { data: departments = [] } = useDepartments(currentClientId);\r\n\r\n  // Preselect current department/location on open or assignment change\r\n  useEffect(() => {\r\n    if (isOpen && departments.length > 0 && selectedAssignment) {\r\n      let foundDept = null;\r\n      let foundLoc = null;\r\n      for (const dept of departments) {\r\n        for (const loc of dept.locations) {\r\n          if (`${dept.name} ${loc.name}` === selectedAssignment.department) {\r\n            foundDept = dept.name;\r\n            foundLoc = loc.name;\r\n            break;\r\n          }\r\n        }\r\n        if (foundDept) break;\r\n      }\r\n      setTransferData({\r\n        newDepartment: foundDept || '',\r\n        newLocation: foundLoc || '',\r\n        notes: ''\r\n      });\r\n      if (assignments.length > 0 && !selectedAssignmentId) {\r\n        setSelectedAssignmentId(assignments[0].id);\r\n      }\r\n    }\r\n  }, [isOpen, departments, selectedAssignment, assignments, selectedAssignmentId]);\r\n\r\n  const handleTransfer = async () => {\r\n    if (!selectedAssignment || !transferData.newDepartment || !transferData.newLocation) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Please select a printer, department and location for transfer.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n    // Find the target department/location id\r\n    const targetDept = departments.find(d => d.name === transferData.newDepartment);\r\n    const targetLoc = targetDept?.locations.find(l => l.name === transferData.newLocation);\r\n    if (!targetLoc) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Could not find the selected location.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n    if (`${transferData.newDepartment} ${transferData.newLocation}` === selectedAssignment.department) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Cannot transfer to the same department/location. Use edit to change details.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      // Update the printer assignment\r\n      const { error: updateError } = await supabase\r\n        .from('printer_assignments')\r\n        .update({\r\n          department_location_id: targetLoc.id,\r\n          status: 'active'\r\n        })\r\n        .eq('id', selectedAssignment.id);\r\n      if (updateError) throw updateError;\r\n      // Add history entry for the transfer\r\n      const { error: historyError } = await supabase\r\n        .from('printer_history')\r\n        .insert({\r\n          printer_id: selectedAssignment.printer_id,\r\n          action_type: 'transferred',\r\n          description: `Transferred to department: ${transferData.newDepartment} ${transferData.newLocation}${transferData.notes ? `. Notes: ${transferData.notes}` : ''}`,\r\n          performed_by: 'System User',\r\n          related_assignment_id: selectedAssignment.id\r\n        });\r\n      if (historyError) {\r\n        // Handle history error silently\r\n      }\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Printer transferred successfully.\",\r\n      });\r\n      onTransferCompleted();\r\n      handleClose();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to transfer printer. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setTransferData({\r\n      newDepartment: '',\r\n      newLocation: '',\r\n      notes: ''\r\n    });\r\n    setSelectedAssignmentId('');\r\n    onClose();\r\n  };\r\n\r\n  // Department options for the current client\r\n  const departmentOptions = departments.map(dept => ({\r\n    value: dept.name,\r\n    label: dept.name\r\n  }));\r\n  // Location options for the selected department\r\n  const selectedDepartment = departments.find(dept => dept.name === transferData.newDepartment);\r\n  const locationOptions = selectedDepartment ? selectedDepartment.locations.map(loc => ({\r\n    value: loc.name,\r\n    label: loc.name,\r\n    abbreviation: loc.abbreviation,\r\n    floor: loc.floor\r\n  })) : [];\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={handleClose}>\r\n      <DialogContent className=\"max-w-md\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center space-x-2\">\r\n            <Move className=\"h-5 w-5 text-orange-600\" />\r\n            <span>Transfer Printer</span>\r\n          </DialogTitle>\r\n          {assignments.length > 0 && (\r\n            <div className=\"mt-2\">\r\n              <Label>Select Printer *</Label>\r\n              <Select\r\n                value={selectedAssignmentId}\r\n                onValueChange={val => {\r\n                  setSelectedAssignmentId(val);\r\n                  const found = assignments.find(a => a.id === val);\r\n                  if (found && onSelectAssignment) onSelectAssignment(found);\r\n                }}\r\n                disabled={loading}\r\n              >\r\n                <SelectTrigger className=\"w-full mt-1\">\r\n                  <SelectValue placeholder=\"Select a printer to transfer\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  {assignments.map(a => (\r\n                    <SelectItem key={a.id} value={a.id}>\r\n                      {a.printer.name} {a.printer.model && `(${a.printer.model})`} - SN: {a.serial_number || 'N/A'} | {a.department}\r\n                    </SelectItem>\r\n                  ))}\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n          )}\r\n          <p className=\"text-sm text-gray-600 mt-1\">\r\n            Transfer {selectedAssignment?.printer.name} to another department or location\r\n          </p>\r\n        </DialogHeader>\r\n        <div className=\"space-y-4\">\r\n          {/* Current Assignment Info */}\r\n          <div className=\"bg-gray-50 p-3 rounded-lg\">\r\n            <p className=\"text-sm font-medium text-gray-700\">Current Assignment</p>\r\n            <p className=\"text-sm text-gray-600\">Department: {selectedAssignment?.department}</p>\r\n            <p className=\"text-sm text-gray-600\">Serial: {selectedAssignment?.serial_number || 'Not provided'}</p>\r\n          </div>\r\n          {/* Transfer To Department */}\r\n          <div>\r\n            <Label>Transfer to Department *</Label>\r\n            <Select\r\n              value={transferData.newDepartment}\r\n              onValueChange={(value) => setTransferData(prev => ({ ...prev, newDepartment: value, newLocation: '' }))}\r\n              disabled={loading}\r\n            >\r\n              <SelectTrigger className=\"mt-1\">\r\n                <SelectValue placeholder=\"Select target department\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {departmentOptions.map((option) => (\r\n                  <SelectItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n            {departmentOptions.length === 0 && (\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                No departments found for this client\r\n              </p>\r\n            )}\r\n          </div>\r\n          {/* Transfer To Location (if multiple) */}\r\n          {transferData.newDepartment && locationOptions.length > 0 && (\r\n            <div>\r\n              <Label>Transfer to Location *</Label>\r\n              <Select\r\n                value={transferData.newLocation}\r\n                onValueChange={(value) => setTransferData(prev => ({ ...prev, newLocation: value }))}\r\n                disabled={loading}\r\n              >\r\n                <SelectTrigger className=\"mt-1\">\r\n                  <SelectValue placeholder=\"Select target location\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  {locationOptions.map((option) => (\r\n                    <SelectItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                      {option.abbreviation && ` (${option.abbreviation})`}\r\n                      {option.floor && ` - ${option.floor}`}\r\n                    </SelectItem>\r\n                  ))}\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n          )}\r\n          {/* Transfer Notes */}\r\n          <div>\r\n            <Label htmlFor=\"transfer_notes\">Transfer Notes</Label>\r\n            <Textarea\r\n              id=\"transfer_notes\"\r\n              value={transferData.notes}\r\n              onChange={(e) => setTransferData(prev => ({ ...prev, notes: e.target.value }))}\r\n              disabled={loading}\r\n              placeholder=\"Reason for transfer or additional notes...\"\r\n              className=\"mt-1\"\r\n              rows={3}\r\n            />\r\n          </div>\r\n          {/* Transfer Preview */}\r\n          {transferData.newDepartment && transferData.newLocation && (\r\n            <div className=\"bg-blue-50 p-3 rounded-lg\">\r\n              <div className=\"flex items-center space-x-2 text-sm\">\r\n                <span className=\"text-gray-600\">Current: {selectedAssignment?.department}</span>\r\n                <ArrowRight className=\"h-4 w-4 text-blue-600\" />\r\n                <span className=\"text-blue-700 font-medium\">\r\n                  {transferData.newDepartment} {transferData.newLocation}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* Action Buttons */}\r\n          <div className=\"flex space-x-2 pt-4\">\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              onClick={handleClose}\r\n              disabled={loading}\r\n              className=\"flex-1\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              onClick={handleTransfer}\r\n              disabled={loading || !selectedAssignment || !transferData.newDepartment || !transferData.newLocation}\r\n              className=\"flex-1 bg-orange-600 text-white hover:bg-orange-700\"\r\n            >\r\n              Transfer\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TransferPrinterModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Printer, Search, MoreHorizontal, Settings as Gear, Monitor, Package, MapPin } from 'lucide-react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { productService } from '@/services/productService';\r\nimport { useIsMobile } from '@/hooks/use-mobile';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport AdminEditProductModal from './components/AdminEditProductModal';\r\nimport { AddClientPriceDialog } from '@/components/products/pricing/AddClientPriceDialog';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n} from '@/components/ui/dropdown-menu';\r\nimport AssignPrinterToLocationModal from './components/AssignPrinterToLocationModal';\r\nimport { useDepartments } from './hooks/useDepartments';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport TransferPrinterModal from './components/TransferPrinterModal';\r\nimport EditPrinterAssignmentModal from './components/EditPrinterAssignmentModal';\r\nimport { cn } from '@/lib/utils';\r\nimport { Tooltip, TooltipTrigger, TooltipContent } from '@/components/ui/tooltip';\r\nimport { AlertTriangle } from 'lucide-react';\r\n\r\nconst colorClasses: { [key: string]: string } = {\r\n  black: 'bg-black',\r\n  cyan: 'bg-cyan-500',\r\n  magenta: 'bg-pink-500',\r\n  yellow: 'bg-yellow-400',\r\n};\r\n\r\nconst ColorDot = ({ color }: { color: string }) => {\r\n  const colorClass = colorClasses[color?.toLowerCase()] || 'bg-gray-400';\r\n  return <div className={`w-3 h-3 rounded-full ${colorClass}`} />;\r\n};\r\n\r\ninterface PrinterAssignment {\r\n  id: string;\r\n  printer_id: string;\r\n  department_location_id: string | null;\r\n  serial_number: string | null;\r\n  status: 'active' | 'inactive' | 'returned';\r\n  deployment_date: string | null;\r\n  usage_type: 'rental' | 'service_unit' | 'client_owned';\r\n  monthly_price: number | null;\r\n  printer: {\r\n    name: string;\r\n    model?: string;\r\n    manufacturer?: string;\r\n    image_url?: string;\r\n    series?: string;\r\n  };\r\n  department_location?: {\r\n    name: string;\r\n    department: {\r\n      name: string;\r\n    };\r\n  };\r\n}\r\n\r\ninterface ClientPrintersProps {\r\n  clientId: string;\r\n}\r\n\r\nconst ClientPrinters: React.FC<ClientPrintersProps> = ({ clientId }) => {\r\n  const isMobile = useIsMobile();\r\n  const { userProfile } = useAuth();\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [printerProducts, setPrinterProducts] = useState<Record<string, any[]>>({});\r\n  const [editProduct, setEditProduct] = useState(null);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showPriceModal, setShowPriceModal] = useState(false);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [expandedCard, setExpandedCard] = useState<string | null>(null);\r\n  const [showAssignModal, setShowAssignModal] = useState(false);\r\n  const [showTransferModal, setShowTransferModal] = useState(false);\r\n  const [showEditAssignmentModal, setShowEditAssignmentModal] = useState(false);\r\n  const [selectedAssignment, setSelectedAssignment] = useState<PrinterAssignment | null>(null);\r\n  const { data: departments = [] } = useDepartments(clientId);\r\n\r\n  // Check if user is a client user (not admin/owner/sales_admin)\r\n  const isClientUser = userProfile && !['admin', 'sales_admin'].includes(userProfile.role || '');\r\n\r\n  // Fetch printer assignments for this client using the correct schema\r\n  const {\r\n    data: printerAssignments = [],\r\n    isLoading,\r\n  } = useQuery({\r\n    queryKey: ['client-printer-assignments', clientId],\r\n    queryFn: async () => {\r\n      const { data, error } = await supabase\r\n        .from('printer_assignments')\r\n        .select(`\r\n          *,\r\n          printer:printers(name, model, manufacturer, image_url, series),\r\n          department_location:departments_location(\r\n            name,\r\n            department:departments(name)\r\n          )\r\n        `)\r\n        .eq('client_id', clientId)\r\n        .eq('status', 'active')\r\n        .order('created_at');\r\n      \r\n      if (error) throw error;\r\n      return (data || []) as PrinterAssignment[];\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const result: Record<string, any[]> = {};\r\n      for (const assignment of printerAssignments) {\r\n        try {\r\n          const products = await productService.getProductsByPrinter(assignment.printer_id);\r\n          \r\n          // Fetch client pricing for these products\r\n          if (products.length > 0) {\r\n            const productIds = products.map(p => p.id);\r\n            const { data: clientPrices, error } = await supabase\r\n              .from('product_clients')\r\n              .select('product_id, quoted_price')\r\n              .eq('client_id', clientId)\r\n              .in('product_id', productIds);\r\n            \r\n            if (error) throw error;\r\n            \r\n            const productsWithPrices = products.map(product => {\r\n              const clientPrice = clientPrices?.find(cp => cp.product_id === product.id);\r\n              return {\r\n                ...product,\r\n                client_price: clientPrice?.quoted_price\r\n              };\r\n            });\r\n            result[assignment.id] = productsWithPrices;\r\n          } else {\r\n            result[assignment.id] = products;\r\n          }\r\n        } catch {\r\n          result[assignment.id] = [];\r\n        }\r\n      }\r\n      setPrinterProducts(result);\r\n    };\r\n    if (printerAssignments && printerAssignments.length > 0) {\r\n      fetchProducts();\r\n    }\r\n  }, [printerAssignments, clientId]);\r\n\r\n  // Filter printers based on search\r\n  const filteredAssignments = printerAssignments.filter(assignment => {\r\n    const matchesSearch = assignment.printer.name.toLowerCase().includes(searchQuery.toLowerCase()) || \r\n                         (assignment.serial_number || '').toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                         (assignment.printer.model || '').toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                         (assignment.printer.manufacturer || '').toLowerCase().includes(searchQuery.toLowerCase());\r\n    return matchesSearch;\r\n  });\r\n\r\n  // Group assignments by unique printer (by printer_id)\r\n  const uniquePrintersMap: Record<string, { printer: PrinterAssignment['printer']; assignments: PrinterAssignment[] }> = {};\r\n  filteredAssignments.forEach(assignment => {\r\n    if (!uniquePrintersMap[assignment.printer_id]) {\r\n      uniquePrintersMap[assignment.printer_id] = {\r\n        printer: assignment.printer,\r\n        assignments: []\r\n      };\r\n    }\r\n    uniquePrintersMap[assignment.printer_id].assignments.push(assignment);\r\n  });\r\n  const uniquePrinters = Object.entries(uniquePrintersMap);\r\n\r\n  const getLocationDisplay = (assignment: PrinterAssignment) => {\r\n    if (assignment.department_location) {\r\n      return `${assignment.department_location.department.name} - ${assignment.department_location.name}`;\r\n    }\r\n    return 'Unassigned';\r\n  };\r\n\r\n  const handleProductClick = (product) => {\r\n    // Only allow editing for non-client users\r\n    if (isClientUser) {\r\n      return;\r\n    }\r\n    setSelectedProduct(product);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handlePriceClick = (e, product) => {\r\n    // Only allow price editing for non-client users\r\n    if (isClientUser) {\r\n      return;\r\n    }\r\n    e.stopPropagation();\r\n    setSelectedProduct(product);\r\n    setShowPriceModal(true);\r\n  };\r\n\r\n  const handleSavePrice = async (selectedClientId: string, price: number) => {\r\n    console.log('Price saved successfully:', { clientId: selectedClientId, price, productId: selectedProduct?.id });\r\n    setShowPriceModal(false);\r\n    \r\n    // Refresh the products to show updated pricing\r\n    const fetchProducts = async () => {\r\n      const result: Record<string, any[]> = {};\r\n      for (const assignment of printerAssignments) {\r\n        try {\r\n          const products = await productService.getProductsByPrinter(assignment.printer_id);\r\n          \r\n          if (products.length > 0) {\r\n            const productIds = products.map(p => p.id);\r\n            const { data: clientPrices, error } = await supabase\r\n              .from('product_clients')\r\n              .select('product_id, quoted_price')\r\n              .eq('client_id', clientId)\r\n              .in('product_id', productIds);\r\n            \r\n            if (error) throw error;\r\n            \r\n            const productsWithPrices = products.map(product => {\r\n              const clientPrice = clientPrices?.find(cp => cp.product_id === product.id);\r\n              return {\r\n                ...product,\r\n                client_price: clientPrice?.quoted_price\r\n              };\r\n            });\r\n            result[assignment.id] = productsWithPrices;\r\n          } else {\r\n            result[assignment.id] = products;\r\n          }\r\n        } catch {\r\n          result[assignment.id] = [];\r\n        }\r\n      }\r\n      setPrinterProducts(result);\r\n    };\r\n    \r\n    fetchProducts();\r\n  };\r\n\r\n  const handleAssignPrinter = () => {\r\n    setShowAssignModal(true);\r\n  };\r\n\r\n  const handleTransferPrinter = () => {\r\n    setShowTransferModal(true);\r\n  };\r\n\r\n  const handleUpdateSerialNumber = (assignment: PrinterAssignment) => {\r\n    setSelectedAssignment(assignment);\r\n    setShowEditAssignmentModal(true);\r\n  };\r\n\r\n  const handleShowAssignmentDetails = (assignment: PrinterAssignment) => {\r\n    setSelectedAssignment(assignment);\r\n    setShowEditAssignmentModal(true);\r\n  };\r\n\r\n  // Desktop Printer Card Component\r\n  const DesktopPrinterCard = ({ printerId, printer, assignments }: { printerId: string, printer: any, assignments: PrinterAssignment[] }) => {\r\n    const grouped: Record<string, { name: string; sku?: string; colors: string[]; product: any }> = {};\r\n    assignments.forEach(assignment => {\r\n      const products = printerProducts[assignment.id] || [];\r\n      products.forEach(product => {\r\n        const key = `${product.type}-${product.name}`;\r\n        if (!grouped[key]) {\r\n          grouped[key] = {\r\n            name: product.name,\r\n            sku: product.sku,\r\n            colors: [],\r\n            product: product\r\n          };\r\n        }\r\n        if (product.color && !grouped[key].colors.includes(product.color)) {\r\n          grouped[key].colors.push(product.color);\r\n        }\r\n      });\r\n    });\r\n\r\n    return (\r\n      <Card key={printerId} className=\"bg-white/80 backdrop-blur-sm border border-gray-200/50 shadow-sm hover:shadow-md transition-all duration-200\">\r\n        <CardContent className=\"p-6\">\r\n          <div className=\"flex items-start space-x-4\">\r\n            {/* Printer Thumbnail */}\r\n            <div className=\"flex flex-col items-center min-w-[120px] w-32\">\r\n              <div className=\"bg-blue-50 rounded-lg flex items-center justify-center w-28 h-24\">\r\n                {printer.image_url ? (\r\n                  <img\r\n                    src={printer.image_url}\r\n                    alt={printer.name}\r\n                    className=\"object-contain w-full h-full rounded-lg\"\r\n                  />\r\n                ) : (\r\n                  <Printer className=\"w-16 h-16 text-blue-400\" />\r\n                )}\r\n              </div>\r\n              <span className=\"inline-block bg-gray-100 rounded-full px-3 py-1 text-xs font-medium text-gray-800 mt-2 text-center\">\r\n                {assignments.length} unit{assignments.length !== 1 ? 's' : ''}\r\n              </span>\r\n            </div>\r\n            {/* Details */}\r\n            <div className=\"flex-1 min-w-0\">\r\n              <div className=\"font-bold text-xl text-gray-900 leading-tight mb-1\">\r\n                {printer.series ? (\r\n                  printer.model ? `${printer.series} ${printer.model}` : `${printer.series} ${printer.name}`\r\n                ) : (\r\n                  printer.model || printer.name\r\n                )}\r\n              </div>\r\n              <div className=\"text-sm text-gray-500 mb-3\">{printer.manufacturer}</div>\r\n              {/* Assigned To - always visible, directly under name/manufacturer */}\r\n              <div className=\"mb-3\">\r\n                <div className=\"text-sm text-gray-600 mb-2 font-medium\">Assigned To:</div>\r\n                <ul className=\"list-disc pl-5 text-sm text-gray-700 space-y-1\">\r\n                  {assignments.map((assignment, idx) => (\r\n                    <li key={assignment.id || idx} className=\"leading-tight flex items-center justify-between\">\r\n                      <span>\r\n                        {getLocationDisplay(assignment)}\r\n                        {assignment.serial_number ? (\r\n                          ` (SN: ${assignment.serial_number})`\r\n                        ) : (\r\n                          <Tooltip>\r\n                            <TooltipTrigger asChild>\r\n                              <span className=\"ml-1 text-orange-500 cursor-help flex items-center\">\r\n                                <AlertTriangle className=\"h-4 w-4 mr-1 text-orange-500\" />\r\n                                <span className=\"sr-only\">Missing serial number</span>\r\n                              </span>\r\n                            </TooltipTrigger>\r\n                            <TooltipContent>Missing serial number</TooltipContent>\r\n                          </Tooltip>\r\n                        )}\r\n                      </span>\r\n                                          {/* Only show gear button for non-client users */}\r\n                    {!isClientUser && (\r\n                      <button\r\n                        className=\"ml-2 p-1 text-gray-400 hover:text-gray-600 transition-colors\"\r\n                        onClick={e => {\r\n                          e.stopPropagation();\r\n                          handleShowAssignmentDetails(assignment);\r\n                        }}\r\n                        title=\"Edit printer assignment\"\r\n                      >\r\n                        <Gear className=\"h-4 w-4\" />\r\n                      </button>\r\n                    )}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Compatible Printers & Prices Section - only visible when expanded */}\r\n          {expandedCard === printerId && (\r\n            <div className=\"mt-4 pt-4 border-t border-gray-200\">\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {Object.entries(grouped).map(([key, group]) => (\r\n                  <Badge \r\n                    key={key} \r\n                    variant=\"outline\" \r\n                    className={`flex items-center space-x-2 py-1 px-2 text-xs ${!isClientUser ? 'cursor-pointer hover:bg-gray-50' : 'cursor-default'}`}\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleProductClick(group.product);\r\n                    }}\r\n                    title={!isClientUser ? \"Click to edit product info\" : \"Product information\"}\r\n                  >\r\n                    <ColorDot color={group.colors[0]} />\r\n                    <span className=\"font-medium\">\r\n                      {group.name}\r\n                      {group.sku && (\r\n                        <span className=\"text-gray-500\"> ({group.sku})</span>\r\n                      )}\r\n                    </span>\r\n                    {/* Only show price for non-client users */}\r\n                    {!isClientUser && typeof group.product.client_price === 'number' && (\r\n                      <span\r\n                        className=\"font-semibold text-blue-600 ml-2 underline decoration-dotted cursor-pointer hover:text-blue-800\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handlePriceClick(e, group.product);\r\n                        }}\r\n                        title=\"Click to manage pricing\"\r\n                      >\r\n                        : ₱{group.product.client_price.toFixed(2)}\r\n                      </span>\r\n                    )}\r\n                  </Badge>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  // Mobile Printer Card Component (original design)\r\n  const MobilePrinterCard = ({ printerId, printer, assignments }: { printerId: string, printer: any, assignments: PrinterAssignment[] }) => {\r\n    const grouped: Record<string, { name: string; sku?: string; colors: string[]; product: any }> = {};\r\n    assignments.forEach(assignment => {\r\n      const products = printerProducts[assignment.id] || [];\r\n      products.forEach(product => {\r\n        const key = `${product.type}-${product.name}`;\r\n        if (!grouped[key]) {\r\n          grouped[key] = {\r\n            name: product.name,\r\n            sku: product.sku,\r\n            colors: [],\r\n            product: product\r\n          };\r\n        }\r\n        if (product.color && !grouped[key].colors.includes(product.color)) {\r\n          grouped[key].colors.push(product.color);\r\n        }\r\n      });\r\n    });\r\n\r\n    return (\r\n      <div\r\n        key={printerId}\r\n        className=\"bg-white rounded-lg border shadow-sm p-4 mb-3 w-full cursor-pointer hover:bg-gray-50 transition-colors\"\r\n        style={{ minHeight: 0 }}\r\n        onClick={() => setExpandedCard(expandedCard === printerId ? null : printerId)}\r\n      >\r\n        <div className=\"flex items-center gap-4\">\r\n          {/* Printer Thumbnail */}\r\n          <div className=\"flex flex-col items-center min-w-[96px] w-28\">\r\n            <div className=\"bg-blue-50 rounded-lg flex items-center justify-center w-24 h-20\">\r\n              {printer.image_url ? (\r\n                <img\r\n                  src={printer.image_url}\r\n                  alt={printer.name}\r\n                  className=\"object-contain w-full h-full rounded-lg\"\r\n                />\r\n              ) : (\r\n                <Printer className=\"w-12 h-12 text-blue-400\" />\r\n              )}\r\n            </div>\r\n            <span className=\"inline-block bg-gray-100 rounded-full px-3 py-0.5 text-xs font-medium text-gray-800 mt-2 text-center\">\r\n              {assignments.length} unit{assignments.length !== 1 ? 's' : ''}\r\n            </span>\r\n          </div>\r\n          {/* Details */}\r\n          <div className=\"flex-1 min-w-0\">\r\n            <div className=\"font-bold text-lg text-gray-900 leading-tight mb-0\">\r\n              {printer.series ? (\r\n                printer.model ? `${printer.series} ${printer.model}` : `${printer.series} ${printer.name}`\r\n              ) : (\r\n                printer.model || printer.name\r\n              )}\r\n            </div>\r\n            <div className=\"text-sm text-gray-500 mb-1\">{printer.manufacturer}</div>\r\n            {/* Assigned To - always visible, directly under name/manufacturer */}\r\n            <div className=\"mt-1 mb-2\">\r\n              <div className=\"text-xs text-gray-600 mb-1 pl-0\">Assigned To:</div>\r\n              <ul className=\"list-disc pl-5 text-xs text-gray-700 space-y-0.5 mb-0\">\r\n                {assignments.map((assignment, idx) => (\r\n                  <li key={assignment.id || idx} className=\"leading-tight flex items-center justify-between\">\r\n                    <span>\r\n                      {getLocationDisplay(assignment)}\r\n                      {assignment.serial_number ? (\r\n                        ` (SN: ${assignment.serial_number})`\r\n                      ) : (\r\n                        <Tooltip>\r\n                          <TooltipTrigger asChild>\r\n                            <span className=\"ml-1 text-orange-500 cursor-help flex items-center\">\r\n                              <AlertTriangle className=\"h-3 w-3 mr-0.5 text-orange-500\" />\r\n                              <span className=\"sr-only\">Missing serial number</span>\r\n                            </span>\r\n                          </TooltipTrigger>\r\n                          <TooltipContent>Missing serial number</TooltipContent>\r\n                        </Tooltip>\r\n                      )}\r\n                    </span>\r\n                    {/* Only show gear button for non-client users */}\r\n                    {!isClientUser && (\r\n                      <button\r\n                        className=\"ml-2 p-1 text-gray-400 hover:text-gray-600 transition-colors\"\r\n                        onClick={e => {\r\n                          e.stopPropagation();\r\n                          handleShowAssignmentDetails(assignment);\r\n                        }}\r\n                        title=\"Edit printer assignment\"\r\n                      >\r\n                        <Gear className=\"h-3 w-3\" />\r\n                      </button>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Compatible Printers & Prices Section - only visible when expanded */}\r\n        {expandedCard === printerId && (\r\n          <>\r\n            <hr className=\"my-2 border-gray-200\" />\r\n            <div className=\"mt-2 flex flex-wrap gap-2\">\r\n              {Object.entries(grouped).map(([key, group]) => (\r\n                <Badge \r\n                  key={key} \r\n                  variant=\"outline\" \r\n                  className={`flex items-center space-x-2 py-1 px-2 text-xs ${!isClientUser ? 'cursor-pointer hover:bg-gray-50' : 'cursor-default'}`}\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    handleProductClick(group.product);\r\n                  }}\r\n                  title={!isClientUser ? \"Click to edit product info\" : \"Product information\"}\r\n                >\r\n                  <ColorDot color={group.colors[0]} />\r\n                  <span className=\"font-medium\">\r\n                    {group.name}\r\n                    {group.sku && (\r\n                      <span className=\"text-gray-500\"> ({group.sku})</span>\r\n                    )}\r\n                  </span>\r\n                  {/* Only show price for non-client users */}\r\n                  {!isClientUser && typeof group.product.client_price === 'number' && (\r\n                    <span\r\n                      className=\"font-semibold text-blue-600 ml-2 underline decoration-dotted cursor-pointer hover:text-blue-800\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handlePriceClick(e, group.product);\r\n                      }}\r\n                      title=\"Click to manage pricing\"\r\n                    >\r\n                      : ₱{group.product.client_price.toFixed(2)}\r\n                    </span>\r\n                  )}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Search and Actions Bar */}\r\n      {isMobile ? (\r\n        // Mobile Search Bar (original design)\r\n        <div className=\"flex items-center space-x-2 mb-2\">\r\n          <div className=\"flex-1 relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Search printers...\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              className=\"pl-10\"\r\n            />\r\n          </div>\r\n          {!isClientUser && (\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={handleAssignPrinter}\r\n            >\r\n              Assign\r\n            </Button>\r\n          )}\r\n          {!isClientUser && (\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={handleTransferPrinter}\r\n            >\r\n              Transfer\r\n            </Button>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        // Desktop Search and Actions\r\n        <div className=\"bg-white/60 backdrop-blur-xl rounded-2xl p-6 shadow-lg animate-fade-in\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">Client Printers</h2>\r\n            <div className=\"flex items-center space-x-3\">\r\n              {!isClientUser && (\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline\"\r\n                  onClick={handleAssignPrinter}\r\n                  className=\"flex items-center space-x-2\"\r\n                >\r\n                  <Package className=\"h-4 w-4\" />\r\n                  Assign Printer\r\n                </Button>\r\n              )}\r\n              {!isClientUser && (\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline\"\r\n                  onClick={handleTransferPrinter}\r\n                  className=\"flex items-center space-x-2\"\r\n                >\r\n                  <MapPin className=\"h-4 w-4\" />\r\n                  Transfer Printer\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Search printers by name, model, manufacturer, or serial number...\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              className=\"pl-10\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Printer Cards */}\r\n      <div className=\"space-y-4\">\r\n        {isLoading ? (\r\n          <div className=\"text-center py-8\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n            <p className=\"text-gray-600\">Loading printers...</p>\r\n          </div>\r\n        ) : uniquePrinters.length === 0 ? (\r\n          <div className=\"text-center py-8\">\r\n            <Printer className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n            <p className=\"text-gray-600\">No printers found.</p>\r\n          </div>\r\n        ) : (\r\n          uniquePrinters.map(([printerId, { printer, assignments }]) => (\r\n            isMobile ? (\r\n              <MobilePrinterCard\r\n                key={printerId}\r\n                printerId={printerId}\r\n                printer={printer}\r\n                assignments={assignments}\r\n              />\r\n            ) : (\r\n              <DesktopPrinterCard\r\n                key={printerId}\r\n                printerId={printerId}\r\n                printer={printer}\r\n                assignments={assignments}\r\n              />\r\n            )\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {/* Modals */}\r\n      {selectedProduct && (\r\n        <AdminEditProductModal\r\n          isOpen={showEditModal}\r\n          onClose={() => {\r\n            setShowEditModal(false);\r\n            setSelectedProduct(null);\r\n          }}\r\n          product={selectedProduct}\r\n          onProductUpdated={() => {\r\n            setShowEditModal(false);\r\n            setSelectedProduct(null);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {selectedProduct && clientId && (\r\n        <AddClientPriceDialog\r\n          open={showPriceModal}\r\n          onOpenChange={(open) => {\r\n            setShowPriceModal(open);\r\n            if (!open) setSelectedProduct(null);\r\n          }}\r\n          availableClients={[{ id: clientId, name: 'Current Client' }]}\r\n          onSave={handleSavePrice}\r\n          initialClientId={clientId}\r\n          initialPrice={selectedProduct.client_price || 0}\r\n          productId={selectedProduct.id}\r\n        />\r\n      )}\r\n\r\n      {showAssignModal && (\r\n        <AssignPrinterToLocationModal\r\n          isOpen={showAssignModal}\r\n          onClose={() => setShowAssignModal(false)}\r\n          location={null}\r\n          departmentBaseName=\"\"\r\n          clientId={clientId}\r\n          departments={departments}\r\n          onPrinterAssigned={() => {\r\n            setShowAssignModal(false);\r\n            // Refresh the data\r\n            window.location.reload();\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {showTransferModal && (\r\n        <TransferPrinterModal\r\n          isOpen={showTransferModal}\r\n          onClose={() => setShowTransferModal(false)}\r\n          assignment={null}\r\n          currentClientId={clientId}\r\n          onTransferCompleted={() => {\r\n            setShowTransferModal(false);\r\n            // Refresh the data\r\n            window.location.reload();\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {showEditAssignmentModal && selectedAssignment && (\r\n        <EditPrinterAssignmentModal\r\n          isOpen={showEditAssignmentModal}\r\n          onClose={() => {\r\n            setShowEditAssignmentModal(false);\r\n            setSelectedAssignment(null);\r\n          }}\r\n          assignment={selectedAssignment}\r\n          departments={departments}\r\n          onAssignmentUpdated={() => {\r\n            setShowEditAssignmentModal(false);\r\n            setSelectedAssignment(null);\r\n            // Refresh the data\r\n            window.location.reload();\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientPrinters;\r\n","\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { normalizeSku } from '../utils/productGrouping';\r\n\r\nexport interface ClientProduct {\r\n  id: string;\r\n  product_id: string;\r\n  name: string;\r\n  category: string;\r\n  sku: string;\r\n  color?: string;\r\n  quoted_price?: number;\r\n  margin_percentage?: number;\r\n  priceType: 'custom' | 'default';\r\n  status: 'active' | 'discontinued';\r\n  supportedPrinters: Array<{\r\n    id: string;\r\n    name: string;\r\n    model?: string;\r\n    manufacturer?: string;\r\n    series?: string;\r\n  }>;\r\n  departmentsSupplied: Array<{\r\n    clientName: string;\r\n    departmentName: string;\r\n  }>;\r\n}\r\n\r\nexport const useClientProducts = (clientId: string) => {\r\n  return useQuery({\r\n    queryKey: ['client-products-enhanced', clientId],\r\n    queryFn: async () => {\r\n      // First, get all client-specific pricing for this client\r\n      const { data: clientPricing, error: pricingError } = await supabase\r\n        .from('product_clients')\r\n        .select(`\r\n          id,\r\n          product_id,\r\n          quoted_price,\r\n          margin_percentage,\r\n          product:products(\r\n            id,\r\n            name,\r\n            category,\r\n            sku,\r\n            color\r\n          )\r\n        `)\r\n        .eq('client_id', clientId);\r\n\r\n      if (pricingError) {\r\n        throw pricingError;\r\n      }\r\n\r\n      // Get printer assignments to determine which printers support these products\r\n      const { data: assignments, error: assignmentError } = await supabase\r\n        .from('printer_assignments')\r\n        .select(`\r\n          printer_id,\r\n          status,\r\n          department_location_id,\r\n          printer:printers(\r\n            id,\r\n            name,\r\n            model,\r\n            manufacturer,\r\n            series,\r\n            product_printers(\r\n              product:products(id)\r\n            )\r\n          ),\r\n          departments_location:department_location_id(\r\n            id,\r\n            name,\r\n            department:departments(\r\n              id,\r\n              name,\r\n              client:clients(\r\n                id,\r\n                name\r\n              )\r\n            )\r\n          )\r\n        `)\r\n        .eq('client_id', clientId)\r\n        .eq('status', 'active');\r\n\r\n      if (assignmentError) {\r\n        throw assignmentError;\r\n      }\r\n\r\n      // Create a map of product_id to supported printers\r\n      const productPrintersMap = new Map<string, Set<any>>();\r\n      const productDepartmentsMap = new Map<string, Set<any>>();\r\n\r\n      assignments?.forEach(assignment => {\r\n        const printer = assignment.printer;\r\n        const departmentLocation = assignment.departments_location;\r\n        \r\n        if (!printer || !departmentLocation) return;\r\n        \r\n        const printerInfo = {\r\n          id: printer.id,\r\n          name: printer.name,\r\n          model: printer.model,\r\n          manufacturer: printer.manufacturer,\r\n          series: printer.series\r\n        };\r\n\r\n        const departmentInfo = {\r\n          clientName: departmentLocation.department?.client?.name || 'Unknown Client',\r\n          departmentName: departmentLocation.department?.name || 'Unknown Department'\r\n        };\r\n\r\n        // Add this printer to all products it supports\r\n        printer.product_printers?.forEach((pp: any) => {\r\n          if (pp.product?.id) {\r\n            if (!productPrintersMap.has(pp.product.id)) {\r\n              productPrintersMap.set(pp.product.id, new Set());\r\n            }\r\n            if (!productDepartmentsMap.has(pp.product.id)) {\r\n              productDepartmentsMap.set(pp.product.id, new Set());\r\n            }\r\n            \r\n            productPrintersMap.get(pp.product.id)!.add(JSON.stringify(printerInfo));\r\n            productDepartmentsMap.get(pp.product.id)!.add(JSON.stringify(departmentInfo));\r\n          }\r\n        });\r\n      });\r\n\r\n      // Process client pricing data into the final result\r\n      const result: ClientProduct[] = [];\r\n\r\n      clientPricing?.forEach(pricing => {\r\n        if (!pricing.product) return;\r\n\r\n        const product = pricing.product;\r\n        const supportedPrinters = Array.from(productPrintersMap.get(product.id) || [])\r\n          .map(printerStr => JSON.parse(printerStr));\r\n        \r\n        const departmentsSupplied = Array.from(productDepartmentsMap.get(product.id) || [])\r\n          .map(deptStr => JSON.parse(deptStr));\r\n\r\n        result.push({\r\n          id: pricing.id,\r\n          product_id: product.id,\r\n          name: product.name,\r\n          category: product.category,\r\n          sku: product.sku,\r\n          color: product.color,\r\n          quoted_price: pricing.quoted_price,\r\n          margin_percentage: pricing.margin_percentage,\r\n          priceType: 'custom',\r\n          status: 'active',\r\n          supportedPrinters: supportedPrinters,\r\n          departmentsSupplied: departmentsSupplied\r\n        });\r\n      });\r\n\r\n      return result;\r\n    },\r\n  });\r\n};\r\n","import { ClientProduct } from '../hooks/useClientProducts';\r\n\r\nexport interface ProductGroup {\r\n  name: string;\r\n  category: string;\r\n  baseSku: string;\r\n  colors: string[];\r\n  priceType: 'custom' | 'default';\r\n  status: 'active' | 'discontinued';\r\n  supportedPrinters: Array<{\r\n    id: string;\r\n    name: string;\r\n    model?: string;\r\n    manufacturer?: string;\r\n  }>;\r\n  departmentsSupplied: Array<{\r\n    clientName?: string;\r\n    departmentName: string;\r\n    locationName: string;\r\n  }>;\r\n  customPricing?: {\r\n    quoted_price?: number;\r\n    margin_percentage?: number;\r\n  };\r\n  allProducts: ClientProduct[];\r\n  skus: string[];\r\n  productSkus: Array<{\r\n    sku: string;\r\n    color?: string;\r\n  }>;\r\n}\r\n\r\n// Helper function to normalize SKU for grouping (remove color suffixes and extract base)\r\nexport const normalizeSku = (sku: string): string => {\r\n  // Handle HP CE series (CE320A, CE321A, etc.) - extract base like 128A\r\n  const ceMatch = sku.match(/^CE(\\d+)[A-Z]$/i);\r\n  if (ceMatch) {\r\n    // Map CE series to their base SKU equivalents\r\n    const ceToBase: { [key: string]: string } = {\r\n      '320': '128A', // CE320A -> 128A (Black)\r\n      '321': '128A', // CE321A -> 128A (Cyan) \r\n      '322': '128A', // CE322A -> 128A (Yellow)\r\n      '323': '128A', // CE323A -> 128A (Magenta)\r\n    };\r\n    return ceToBase[ceMatch[1]] || `${ceMatch[1]}A`;\r\n  }\r\n  \r\n  // Handle other common patterns\r\n  const patterns = [\r\n    // Remove color suffixes like BK, C, M, Y\r\n    /[_-](BK|BLACK|K)$/i,\r\n    /[_-](C|CYAN)$/i,\r\n    /[_-](M|MAGENTA)$/i,\r\n    /[_-](Y|YELLOW)$/i,\r\n    /[_-](R|RED)$/i,\r\n    /[_-](B|BLUE)$/i,\r\n    /[_-](G|GREEN)$/i,\r\n    // Remove trailing letters that might indicate color variants\r\n    /[A-Z]$/,\r\n  ];\r\n  \r\n  let normalizedSku = sku;\r\n  patterns.forEach(pattern => {\r\n    const temp = normalizedSku.replace(pattern, '');\r\n    if (temp.length > 0) {\r\n      normalizedSku = temp;\r\n    }\r\n  });\r\n  \r\n  return normalizedSku;\r\n};\r\n\r\nexport const groupProductsBySku = (products: ClientProduct[]): Record<string, ProductGroup> => {\r\n  const skuGroupsMap: Record<string, ProductGroup> = {};\r\n\r\n  products.forEach(product => {\r\n    const normalizedSku = normalizeSku(product.sku);\r\n    const key = normalizedSku; // Group by normalized SKU only\r\n    \r\n    if (!skuGroupsMap[key]) {\r\n      skuGroupsMap[key] = {\r\n        name: product.name,\r\n        category: product.category,\r\n        baseSku: normalizedSku,\r\n        colors: [],\r\n        priceType: product.priceType,\r\n        status: product.status,\r\n        supportedPrinters: [...product.supportedPrinters],\r\n        departmentsSupplied: product.departmentsSupplied?.map((dept: any) => ({\r\n          clientName: dept.clientName,\r\n          departmentName: dept.departmentName || dept.clientName || '',\r\n          locationName: dept.locationName || dept.departmentName || dept.clientName || ''\r\n        })) || [],\r\n        customPricing: product.quoted_price ? {\r\n          quoted_price: product.quoted_price,\r\n          margin_percentage: product.margin_percentage\r\n        } : undefined,\r\n        allProducts: [],\r\n        skus: [],\r\n        productSkus: []\r\n      };\r\n    }\r\n    \r\n    // Add color if not already included\r\n    if (product.color && !skuGroupsMap[key].colors.includes(product.color)) {\r\n      skuGroupsMap[key].colors.push(product.color);\r\n    }\r\n    \r\n    // Add SKU if not already included\r\n    if (!skuGroupsMap[key].skus.includes(product.sku)) {\r\n      skuGroupsMap[key].skus.push(product.sku);\r\n      skuGroupsMap[key].productSkus.push({\r\n        sku: product.sku,\r\n        color: product.color\r\n      });\r\n    }\r\n    \r\n    // Merge printers (avoid duplicates)\r\n    product.supportedPrinters.forEach(printer => {\r\n      if (!skuGroupsMap[key].supportedPrinters.some(p => p.id === printer.id)) {\r\n        skuGroupsMap[key].supportedPrinters.push(printer);\r\n      }\r\n    });\r\n    \r\n    // Merge departments (avoid duplicates)\r\n    product.departmentsSupplied.forEach((dept: any) => {\r\n      const deptWithLocation = {\r\n        clientName: dept.clientName,\r\n        departmentName: dept.departmentName || dept.clientName || '',\r\n        locationName: dept.locationName || dept.departmentName || dept.clientName || ''\r\n      };\r\n      const existingDept = skuGroupsMap[key].departmentsSupplied.find(d =>\r\n        d.departmentName === deptWithLocation.departmentName && d.locationName === deptWithLocation.locationName && d.clientName === deptWithLocation.clientName\r\n      );\r\n      if (!existingDept) {\r\n        skuGroupsMap[key].departmentsSupplied.push(deptWithLocation);\r\n      }\r\n    });\r\n    \r\n    skuGroupsMap[key].allProducts.push(product);\r\n  });\r\n\r\n  return skuGroupsMap;\r\n};\r\n\r\nexport const filterProducts = (\r\n  products: ClientProduct[],\r\n  searchQuery: string,\r\n  statusFilter: string,\r\n  priceTypeFilter: string\r\n): ClientProduct[] => {\r\n  return products.filter(product => {\r\n    const matchesSearch = \r\n      product.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      product.sku.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      product.category.toLowerCase().includes(searchQuery.toLowerCase());\r\n    \r\n    const matchesStatus = statusFilter === 'all' || product.status === statusFilter;\r\n    const matchesPriceType = priceTypeFilter === 'all' || product.priceType === priceTypeFilter;\r\n    \r\n    return matchesSearch && matchesStatus && matchesPriceType;\r\n  });\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Package, Search, Filter, Grid, List, Plus } from 'lucide-react';\r\nimport { useIsMobile } from '@/hooks/use-mobile';\r\nimport { Button } from '@/components/ui/button';\r\nimport { useClientProducts } from './hooks/useClientProducts';\r\nimport { groupProductsBySku, filterProducts } from './utils/productGrouping';\r\nimport ProductFilters from './components/ProductFilters';\r\nimport ProductCard from './components/ProductCard';\r\nimport AdminEditProductModal from './components/AdminEditProductModal';\r\nimport { Product } from '@/types/database';\r\nimport { cn } from '@/lib/utils';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { CustomLoading } from \"@/components/ui/CustomLoading\";\r\n\r\ninterface AdminDashboardClientProductsProps {\r\n  clientId: string;\r\n}\r\n\r\nconst AdminDashboardClientProducts: React.FC<AdminDashboardClientProductsProps> = ({ clientId }) => {\r\n  const isMobile = useIsMobile();\r\n  const { userProfile } = useAuth();\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState<string>('all');\r\n  const [priceTypeFilter, setPriceTypeFilter] = useState<string>('all');\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\r\n\r\n  // Check if user is a client user (not admin/owner/sales_admin)\r\n  const isClientUser = userProfile && !['admin', 'sales_admin'].includes(userProfile.role || '');\r\n\r\n  const { data: clientProducts = [], isLoading, refetch } = useClientProducts(clientId);\r\n\r\n  // Filter products\r\n  const filteredProducts = filterProducts(clientProducts, searchQuery, statusFilter, priceTypeFilter);\r\n\r\n  // Group products by normalized SKU for similar products that only differ by color\r\n  const skuGroupsMap = groupProductsBySku(filteredProducts);\r\n  const skuGroups = Object.entries(skuGroupsMap);\r\n\r\n  const handleEditProduct = (productGroup: any) => {\r\n    // Extract the first product from the group for editing\r\n    const clientProduct = productGroup.allProducts[0];\r\n    \r\n    console.log('ClientProduct object:', clientProduct);\r\n    console.log('product_id:', clientProduct.product_id);\r\n    console.log('id:', clientProduct.id);\r\n    \r\n    // Create a proper Product object using the product_id field\r\n    const product: Product = {\r\n      id: clientProduct.product_id, // Use product_id, not id\r\n      name: clientProduct.name,\r\n      sku: clientProduct.sku,\r\n      category: clientProduct.category,\r\n      color: clientProduct.color,\r\n      created_at: '', // These will be filled by the database\r\n      updated_at: ''\r\n    };\r\n    \r\n    console.log('Created Product object:', product);\r\n    \r\n    setSelectedProduct(product);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handleProductUpdated = () => {\r\n    setShowEditModal(false);\r\n    setSelectedProduct(null);\r\n    refetch();\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <CustomLoading message=\"Loading products\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4 pb-20\">\r\n      {/* Mobile-first compact search */}\r\n      <div className=\"flex items-center gap-2\">\r\n        <div className=\"relative flex-1\">\r\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n          <input\r\n            type=\"text\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            className=\"w-full pl-10 pr-4 h-10 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white\"\r\n            placeholder=\"Search products...\"\r\n          />\r\n        </div>\r\n        \r\n        {/* Only show add button for non-client users */}\r\n        {!isClientUser && (\r\n          <Button \r\n            size=\"sm\" \r\n            variant=\"outline\" \r\n            className=\"h-10 px-3 text-xs whitespace-nowrap touch-target\"\r\n          >\r\n            <Plus className=\"w-3 h-3 mr-1\" />\r\n            Add\r\n          </Button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Mobile-optimized products display */}\r\n      {skuGroups.length === 0 ? (\r\n        <Card className=\"bg-white border border-gray-200 rounded-lg shadow-sm\">\r\n          <CardContent className=\"p-8 text-center\">\r\n            <div className=\"w-16 h-16 bg-gray-100 rounded-2xl flex items-center justify-center mx-auto mb-4\">\r\n              <Package className=\"h-8 w-8 text-gray-400\" />\r\n            </div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">No products found</h3>\r\n            <p className=\"text-gray-600 text-sm mb-6 max-w-sm mx-auto\">\r\n              {searchQuery || statusFilter !== 'all' || priceTypeFilter !== 'all'\r\n                ? 'Try adjusting your search or filters to find products.' \r\n                : 'Products will appear automatically based on assigned printers and their compatibility.'\r\n              }\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 gap-3\">\r\n          {skuGroups.map(([key, productGroup]) => (\r\n            <ProductCard \r\n              key={key} \r\n              productGroup={productGroup} \r\n              onEdit={handleEditProduct}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Mobile-optimized Edit Product Modal */}\r\n      {selectedProduct && (\r\n        <AdminEditProductModal\r\n          isOpen={showEditModal}\r\n          onClose={() => {\r\n            setShowEditModal(false);\r\n            setSelectedProduct(null);\r\n          }}\r\n          product={selectedProduct}\r\n          variants={selectedProduct && skuGroupsMap[selectedProduct.sku]\r\n            ? skuGroupsMap[selectedProduct.sku].allProducts.map(cp => ({\r\n                id: cp.product_id,\r\n                name: cp.name,\r\n                sku: cp.sku,\r\n                category: cp.category,\r\n                color: cp.color,\r\n                alias: '',\r\n                description: '',\r\n                created_at: '',\r\n                updated_at: '',\r\n              }))\r\n            : []}\r\n          onProductUpdated={handleProductUpdated}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardClientProducts;\r\n","import React, { useState } from 'react';\r\nimport { Edit } from 'lucide-react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { supabase } from '@/integrations/supabase/client';\r\n\r\ninterface EditClientModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst EditClientModal: React.FC<EditClientModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n}) => {\r\n  const { userProfile, user } = useAuth();\r\n  const { toast } = useToast();\r\n  \r\n  // State for email change\r\n  const [newEmail, setNewEmail] = useState(userProfile?.email || '');\r\n  const [emailLoading, setEmailLoading] = useState(false);\r\n  \r\n  // State for password change\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [pwError, setPwError] = useState('');\r\n  const [pwSuccess, setPwSuccess] = useState('');\r\n\r\n  const handleEmailChange = async () => {\r\n    if (!user) return;\r\n    setEmailLoading(true);\r\n    try {\r\n      const { error } = await supabase.auth.updateUser({ \r\n        email: newEmail.trim() \r\n      });\r\n      \r\n      if (error) throw error;\r\n      \r\n      toast({\r\n        title: 'Success',\r\n        description: 'Email update confirmation has been sent to your new email.',\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: 'Error',\r\n        description: 'Failed to update email.',\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n      setEmailLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setPwError('');\r\n    setPwSuccess('');\r\n\r\n    if (!oldPassword || !newPassword || !confirmPassword) {\r\n      setPwError('All password fields are required.');\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setPwError('New passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Verify old password\r\n      const { error: signInError } = await supabase.auth.signInWithPassword({\r\n        email: userProfile?.email || '',\r\n        password: oldPassword,\r\n      });\r\n\r\n      if (signInError) {\r\n        setPwError('Current password is incorrect.');\r\n        return;\r\n      }\r\n\r\n      // Update password\r\n      const { error } = await supabase.auth.updateUser({ \r\n        password: newPassword \r\n      });\r\n\r\n      if (error) throw error;\r\n\r\n      setPwSuccess('Password updated successfully.');\r\n      setOldPassword('');\r\n      setNewPassword('');\r\n      setConfirmPassword('');\r\n    } catch (error) {\r\n      setPwError('Failed to update password.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-md\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center space-x-2\">\r\n            <div className=\"bg-blue-600 p-2 rounded-lg\">\r\n              <Edit className=\"h-5 w-5 text-white\" />\r\n            </div>\r\n            <span>Update Profile</span>\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n\r\n        <div className=\"space-y-4\">\r\n          {/* Email Change Section */}\r\n          <div className=\"space-y-2\">\r\n            <label className=\"text-sm font-medium\">Email Address</label>\r\n            <div className=\"flex gap-2\">\r\n              <Input\r\n                type=\"email\"\r\n                value={newEmail}\r\n                onChange={(e) => setNewEmail(e.target.value)}\r\n                placeholder=\"Enter new email\"\r\n              />\r\n              <Button \r\n                onClick={handleEmailChange}\r\n                disabled={emailLoading || newEmail === userProfile?.email}\r\n              >\r\n                {emailLoading ? 'Updating...' : 'Update'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Password Change Section */}\r\n          <div className=\"space-y-2 pt-4 border-t\">\r\n            <h4 className=\"font-medium\">Change Password</h4>\r\n            <form onSubmit={handlePasswordChange} className=\"space-y-2\">\r\n              <Input\r\n                type=\"password\"\r\n                value={oldPassword}\r\n                onChange={e => setOldPassword(e.target.value)}\r\n                placeholder=\"Current Password\"\r\n              />\r\n              <Input\r\n                type=\"password\"\r\n                value={newPassword}\r\n                onChange={e => setNewPassword(e.target.value)}\r\n                placeholder=\"New Password\"\r\n              />\r\n              <Input\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                onChange={e => setConfirmPassword(e.target.value)}\r\n                placeholder=\"Confirm New Password\"\r\n              />\r\n              {pwError && <p className=\"text-red-600 text-sm\">{pwError}</p>}\r\n              {pwSuccess && <p className=\"text-green-600 text-sm\">{pwSuccess}</p>}\r\n              <Button type=\"submit\" className=\"w-full\" variant=\"secondary\">\r\n                Change Password\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditClientModal;\r\n","import { useState, useCallback } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { clientService } from '@/services/clientService';\r\nimport { Client } from '@/types/database';\r\n\r\ninterface UseClientDetailOptions {\r\n  clientId: string;\r\n}\r\n\r\ninterface UseClientDetailReturn {\r\n  client: Client | undefined;\r\n  isLoading: boolean;\r\n  error: Error | null;\r\n  refetch: () => void;\r\n  activeTab: string;\r\n  setActiveTab: (tab: string) => void;\r\n  isDepartmentDetailsView: boolean;\r\n  setIsDepartmentDetailsView: (value: boolean) => void;\r\n  showEditModal: boolean;\r\n  setShowEditModal: (value: boolean) => void;\r\n  handleClientUpdated: (updatedClient: Client) => void;\r\n}\r\n\r\nexport const useClientDetail = ({ clientId }: UseClientDetailOptions): UseClientDetailReturn => {\r\n  const [activeTab, setActiveTab] = useState('departments');\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [isDepartmentDetailsView, setIsDepartmentDetailsView] = useState(false);\r\n\r\n  const { data: client, isLoading, error, refetch } = useQuery({\r\n    queryKey: ['client', clientId],\r\n    queryFn: async () => {\r\n      if (!clientId) throw new Error('Client ID required');\r\n      const foundClient = await clientService.getClientById(clientId);\r\n      if (!foundClient) throw new Error('Client not found');\r\n      return foundClient;\r\n    },\r\n    enabled: !!clientId,\r\n  });\r\n\r\n  const handleClientUpdated = useCallback((updatedClient: Client) => {\r\n    refetch();\r\n    setShowEditModal(false);\r\n  }, [refetch]);\r\n\r\n  return {\r\n    client,\r\n    isLoading,\r\n    error: error as Error | null,\r\n    refetch,\r\n    activeTab,\r\n    setActiveTab,\r\n    isDepartmentDetailsView,\r\n    setIsDepartmentDetailsView,\r\n    showEditModal,\r\n    setShowEditModal,\r\n    handleClientUpdated,\r\n  };\r\n}; ","import { ProductWithSuppliers } from '@/types/database';\r\n\r\nexport const getPriceAnalysis = (productWithSuppliers: ProductWithSuppliers | null) => {\r\n  if (!productWithSuppliers || !productWithSuppliers.suppliers || productWithSuppliers.suppliers.length === 0) return null;\r\n\r\n  // Filter out suppliers with zero or null prices AND exclude ZK suppliers from analysis\r\n  const validSuppliers = productWithSuppliers.suppliers.filter(s => \r\n    s.current_price != null && \r\n    s.current_price > 0 && \r\n    s.supplier && \r\n    !s.supplier.name.toLowerCase().includes('zk')\r\n  );\r\n\r\n  if (validSuppliers.length === 0) return null;\r\n\r\n  const prices = validSuppliers.map(s => s.current_price);\r\n  const minPrice = Math.min(...prices);\r\n  const maxPrice = Math.max(...prices);\r\n  const avgPrice = prices.reduce((a, b) => a + b, 0) / prices.length;\r\n\r\n  return {\r\n    minPrice,\r\n    maxPrice,\r\n    avgPrice,\r\n    difference: maxPrice - minPrice,\r\n    suppliers: validSuppliers\r\n      .filter(supplier => supplier && supplier.supplier)\r\n      .map(supplier => {\r\n        const priceStatus: 'lowest' | 'highest' | 'middle' = \r\n          supplier.current_price === minPrice ? 'lowest' : \r\n          supplier.current_price === maxPrice ? 'highest' : 'middle';\r\n        \r\n        return {\r\n          ...supplier,\r\n          priceStatus,\r\n          percentageDiff: ((supplier.current_price - minPrice) / minPrice) * 100,\r\n        };\r\n      })\r\n  };\r\n};\r\n\r\nexport const transformSuppliersForDisplay = (suppliers: any[]) => {\r\n  return suppliers\r\n    .filter(supplier => supplier.current_price != null && supplier.current_price > 0)\r\n    .map(supplier => ({\r\n      id: supplier.id,\r\n      name: supplier.supplier?.name || 'Unknown Supplier',\r\n      price: supplier.current_price,\r\n      lastUpdated: new Date(supplier.updated_at),\r\n      contactEmail: supplier.supplier?.contact_email || undefined,\r\n      phone: supplier.supplier?.phone || undefined,\r\n      notes: supplier.supplier?.notes || undefined,\r\n      priceHistory: supplier.priceHistory?.map((h: any) => ({\r\n        price: h.price,\r\n        timestamp: new Date(h.timestamp),\r\n        note: h.note || undefined,\r\n      })) || [],\r\n      priceStatus: supplier.priceStatus,\r\n      percentageDiff: supplier.percentageDiff,\r\n    }));\r\n};\r\n\r\n/**\r\n * Calculates department, location, and printer counts from a departments array.\r\n * @param departments Array of department objects, each with a locations array, each location with printer_count.\r\n * @returns { departmentCount, locationCount, printerCount }\r\n */\r\nexport function getClientCounts(departments: Array<{ locations: Array<{ printer_count?: number }> }>) {\r\n  const departmentCount = departments.length;\r\n  const locationCount = departments.reduce((sum, dept) => sum + (dept.locations?.length || 0), 0);\r\n  const printerCount = departments.reduce(\r\n    (sum, dept) => sum + (dept.locations?.reduce((locSum, loc) => locSum + (loc.printer_count || 0), 0) || 0),\r\n    0\r\n  );\r\n  return { departmentCount, locationCount, printerCount };\r\n}\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Settings, ChevronDown, ChevronRight } from 'lucide-react';\r\nimport { DropdownMenu, DropdownMenuTrigger, DropdownMenuContent, DropdownMenuItem } from '@/components/ui/dropdown-menu';\r\nimport { productService } from '@/services/productService';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport AdminEditProductModal from './AdminEditProductModal';\r\nimport { AddClientPriceDialog } from '@/components/products/pricing/AddClientPriceDialog';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\nconst colorClasses: {\r\n  [key: string]: string;\r\n} = {\r\n  black: 'bg-black',\r\n  cyan: 'bg-cyan-500',\r\n  magenta: 'bg-pink-500',\r\n  yellow: 'bg-yellow-400'\r\n};\r\n\r\nconst ColorDot = ({ color }: { color: string }) => {\r\n  const colorClass = colorClasses[color?.toLowerCase()];\r\n  if (!colorClass) return null;\r\n  return <div className={`w-3 h-3 rounded-full ${colorClass}`} />;\r\n};\r\n\r\nconst CMYKDots = () => (\r\n  <div className=\"flex space-x-1 mt-1\">\r\n    <div className=\"w-3 h-3 rounded-full bg-cyan-500\" />\r\n    <div className=\"w-3 h-3 rounded-full bg-pink-500\" />\r\n    <div className=\"w-3 h-3 rounded-full bg-yellow-400\" />\r\n    <div className=\"w-3 h-3 rounded-full bg-black\" />\r\n  </div>\r\n);\r\n\r\ninterface ClientServiceCardProps {\r\n  printer: any;\r\n  onManage?: (assignment: any) => void;\r\n  clientId?: string;\r\n  departmentName?: string;\r\n  locationName?: string;\r\n}\r\n\r\nconst ClientServiceCard: React.FC<ClientServiceCardProps> = ({\r\n  printer,\r\n  onManage,\r\n  clientId,\r\n  departmentName,\r\n  locationName\r\n}) => {\r\n  const [compatibleProducts, setCompatibleProducts] = useState<any[]>([]);\r\n  const [loadingProducts, setLoadingProducts] = useState(false);\r\n  const [editProduct, setEditProduct] = useState(null);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showPriceModal, setShowPriceModal] = useState(false);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  const { userProfile } = useAuth();\r\n\r\n  // Check if user is a client user (not admin/owner/sales_admin)\r\n  const isClientUser = userProfile && !['admin', 'sales_admin'].includes(userProfile.role || '');\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      if (!printer.printer_id) return;\r\n      setLoadingProducts(true);\r\n      try {\r\n        const products = await productService.getProductsByPrinter(printer.printer_id);\r\n\r\n        // Fetch client pricing for these products\r\n        if (clientId && products.length > 0) {\r\n          const productIds = products.map(p => p.id);\r\n          const { data: clientPrices, error } = await supabase\r\n            .from('product_clients')\r\n            .select('product_id, quoted_price')\r\n            .eq('client_id', clientId)\r\n            .in('product_id', productIds);\r\n          \r\n          if (error) throw error;\r\n          \r\n          const productsWithPrices = products.map(product => {\r\n            const clientPrice = clientPrices?.find(cp => cp.product_id === product.id);\r\n            return {\r\n              ...product,\r\n              client_price: clientPrice?.quoted_price\r\n            };\r\n          });\r\n          setCompatibleProducts(productsWithPrices);\r\n        } else {\r\n          setCompatibleProducts(products);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch compatible products:\", error);\r\n        setCompatibleProducts([]);\r\n      }\r\n      setLoadingProducts(false);\r\n    };\r\n\r\n    fetchProducts();\r\n  }, [printer.printer_id, clientId]);\r\n\r\n  const getStatusColor = status => {\r\n    switch (status?.toLowerCase()) {\r\n      case 'active':\r\n        return 'bg-green-100 text-green-800 border-green-200';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800 border-gray-200';\r\n    }\r\n  };\r\n\r\n  const handleProductClick = product => {\r\n    // Only allow editing for non-client users\r\n    if (isClientUser) {\r\n      return;\r\n    }\r\n    setSelectedProduct(product);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handlePriceClick = (e, product) => {\r\n    // Only allow price editing for non-client users\r\n    if (isClientUser) {\r\n      return;\r\n    }\r\n    e.stopPropagation();\r\n    setSelectedProduct(product);\r\n    setShowPriceModal(true);\r\n  };\r\n\r\n  const handleSavePrice = async (selectedClientId: string, price: number) => {\r\n    console.log('Price saved successfully:', {\r\n      clientId: selectedClientId,\r\n      price,\r\n      productId: selectedProduct?.id\r\n    });\r\n    setShowPriceModal(false);\r\n\r\n    // Refresh the products to show updated pricing\r\n    const fetchProducts = async () => {\r\n      if (!printer.printer_id) return;\r\n      try {\r\n        const products = await productService.getProductsByPrinter(printer.printer_id);\r\n        if (clientId && products.length > 0) {\r\n          const productIds = products.map(p => p.id);\r\n          const { data: clientPrices, error } = await supabase\r\n            .from('product_clients')\r\n            .select('product_id, quoted_price')\r\n            .eq('client_id', clientId)\r\n            .in('product_id', productIds);\r\n          \r\n          if (error) throw error;\r\n          \r\n          const productsWithPrices = products.map(product => {\r\n            const clientPrice = clientPrices?.find(cp => cp.product_id === product.id);\r\n            return {\r\n              ...product,\r\n              client_price: clientPrice?.quoted_price\r\n            };\r\n          });\r\n          setCompatibleProducts(productsWithPrices);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to refresh products:\", error);\r\n      }\r\n    };\r\n    fetchProducts();\r\n  };\r\n\r\n  // Prevent toggle when clicking on dropdown or modals\r\n  const handleCardClick = e => {\r\n    // If click is inside the settings button or dropdown, do not toggle\r\n    if (e.target.closest('.printer-settings-dropdown') || e.target.closest('.modal')) {\r\n      return;\r\n    }\r\n    setIsCollapsed(prev => !prev);\r\n  };\r\n\r\n  // Only use collapse logic if onManage is provided (admin context)\r\n  const collapsible = !!onManage;\r\n\r\n  return (\r\n    <div\r\n      className={\"bg-orange-50/50 border border-orange-200/80 rounded-lg p-3 my-2 shadow-sm select-none \" + (collapsible ? 'cursor-pointer' : 'cursor-default')}\r\n      {...(collapsible ? { onClick: handleCardClick } : {})}\r\n    >\r\n      <div className=\"flex items-start space-x-4\">\r\n        <img \r\n          src={printer.printer?.image_url || '/placeholder.svg'} \r\n          alt={printer.printer?.name || 'Printer'} \r\n          className=\"w-24 h-24 object-cover rounded-md flex-shrink-0\" \r\n        />\r\n        <div className=\"flex-1\">\r\n          {/* Location Assignment */}\r\n          {locationName && (\r\n            <p className=\"text-sm font-medium text-blue-600 mb-1\">\r\n              {locationName}\r\n            </p>\r\n          )}\r\n          <h4 className=\"font-bold text-gray-800\">\r\n            {[printer.printer?.manufacturer, printer.printer?.series, printer.printer?.model || printer.printer?.name].filter(Boolean).join(' ')}\r\n          </h4>\r\n          {/* Display SKU if available */}\r\n          {printer.printer?.sku && (\r\n            <div className=\"text-xs text-gray-500 font-mono mb-1\">SKU: {printer.printer.sku}</div>\r\n          )}\r\n          <p className=\"text-sm text-gray-600\">Serial: {printer.serial_number || 'N/A'}</p>\r\n          \r\n          {/* Move ColorDot here, immediately below Serial */}\r\n          {printer.printer?.color && <ColorDot color={printer.printer.color} />}\r\n          {printer.printer?.color?.toLowerCase() === 'black' && (\r\n            <span className=\"inline-block mt-1 px-2 py-0.5 text-xs rounded-full bg-gray-200 text-gray-800 font-semibold\">Monochrome</span>\r\n          )}\r\n          {printer.printer?.color?.toLowerCase() === 'color' && (\r\n            <span className=\"inline-block mt-1 px-2 py-0.5 text-xs rounded-full bg-blue-200 text-blue-800 font-semibold\">Colored</span>\r\n          )}\r\n        </div>\r\n        <div className=\"flex flex-col items-center space-y-2 printer-settings-dropdown\">\r\n          <Badge variant=\"outline\" className={`capitalize text-xs ${getStatusColor(printer.status)}`}>{printer.status || 'Unknown'}</Badge>\r\n        </div>\r\n      </div>\r\n      {/* Collapsible details */}\r\n      {(!collapsible || !isCollapsed) && (\r\n        <div className=\"mt-3 pt-3 border-t border-orange-200/50\">\r\n          {loadingProducts ? (\r\n            <p className=\"text-xs text-gray-500 italic\">Loading products...</p>\r\n          ) : compatibleProducts.length > 0 ? (\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {compatibleProducts.map(product => (\r\n                <Badge\r\n                  key={product.id}\r\n                  variant=\"outline\"\r\n                  className={`flex items-center space-x-2 py-1 px-2 text-xs ${!isClientUser ? 'cursor-pointer hover:bg-gray-50' : 'cursor-default'}`}\r\n                  onClick={() => handleProductClick(product)}\r\n                  title={!isClientUser ? \"Click to edit product info\" : \"Product information\"}\r\n                >\r\n                  {product.color && <ColorDot color={product.color} />}\r\n                  <span className=\"font-medium\">\r\n                    {product.name}\r\n                    {product.sku && (\r\n                      <span className=\"text-gray-500\"> ({product.sku})</span>\r\n                    )}\r\n                  </span>\r\n                  {/* Only show price for non-client users */}\r\n                  {!isClientUser && (\r\n                    <span\r\n                      className=\"font-semibold text-blue-600 ml-2 underline decoration-dotted cursor-pointer hover:text-blue-800\"\r\n                      onClick={e => handlePriceClick(e, product)}\r\n                      title=\"Click to manage pricing\"\r\n                    >\r\n                      : ₱{typeof product.client_price === 'number' ? product.client_price.toFixed(2) : '0.00'}\r\n                    </span>\r\n                  )}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-xs text-gray-500 italic\">No compatible products found.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Product Edit Modal */}\r\n      {selectedProduct && (\r\n        <AdminEditProductModal\r\n          isOpen={showEditModal}\r\n          onClose={() => {\r\n            setShowEditModal(false);\r\n            setSelectedProduct(null);\r\n          }}\r\n          product={selectedProduct}\r\n          onProductUpdated={() => {\r\n            setShowEditModal(false);\r\n            setSelectedProduct(null);\r\n            // Optionally refetch products\r\n          }}\r\n        />\r\n      )}\r\n      \r\n      {/* Price Management Modal */}\r\n      {selectedProduct && clientId && (\r\n        <AddClientPriceDialog\r\n          open={showPriceModal}\r\n          onOpenChange={open => {\r\n            setShowPriceModal(open);\r\n            if (!open) setSelectedProduct(null);\r\n          }}\r\n          availableClients={[{ id: clientId, name: 'Current Client' }]}\r\n          onSave={handleSavePrice}\r\n          initialClientId={clientId}\r\n          initialPrice={selectedProduct.client_price || 0}\r\n          productId={selectedProduct.id}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientServiceCard;\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport ClientServiceCard from '@/components/admin-dashboard/components/ClientServiceCard';\r\n\r\ninterface Printer {\r\n  id: string;\r\n  name: string;\r\n  manufacturer?: string;\r\n  model?: string;\r\n  series?: string;\r\n  image_url?: string;\r\n  color?: string;\r\n  status?: string;\r\n}\r\n\r\nexport function ServicePrinters() {\r\n  const [printers, setPrinters] = useState<Printer[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const clientId = 'c716cb3b-0765-4271-b88f-e1ecff73ec24';\r\n\r\n  useEffect(() => {\r\n    async function fetchPrinters() {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Step 1: Get printer_ids for this client\r\n      const { data: visRows, error: visError } = await supabase\r\n        .from('printer_visibility')\r\n        .select('printer_id')\r\n        .eq('client_id', clientId);\r\n\r\n      if (visError) {\r\n        setError('Failed to load printer visibility data.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const printerIds = (visRows || []).map((row: any) => row.printer_id);\r\n      if (printerIds.length === 0) {\r\n        setPrinters([]);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Step 2: Get printer details for those IDs\r\n      const { data: printers, error: printersError } = await supabase\r\n        .from('printers')\r\n        .select('id, name, manufacturer, model, series, image_url, color, status')\r\n        .in('id', printerIds);\r\n\r\n      if (printersError) {\r\n        setError('Failed to load printer details.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      setPrinters(printers || []);\r\n      setLoading(false);\r\n    }\r\n\r\n    fetchPrinters();\r\n  }, [clientId]);\r\n\r\n  if (loading) {\r\n    return <div className=\"py-12 text-center text-gray-500\">Loading printers...</div>;\r\n  }\r\n  if (error) {\r\n    return <div className=\"py-12 text-center text-red-500\">{error}</div>;\r\n  }\r\n  if (printers.length === 0) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"text-center py-8\">\r\n          <div className=\"bg-blue-50 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6\">\r\n            <svg className=\"w-10 h-10 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>\r\n          </div>\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">No Printers Found</h3>\r\n          <p className=\"text-gray-600 mb-4\">\r\n            There are currently no printers visible to your account.<br />\r\n            Please contact support if you believe this is an error.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Printers Visible to You</h3>\r\n      <div className=\"space-y-4\">\r\n        {printers.map((printer) => (\r\n          <ClientServiceCard\r\n            key={printer.id}\r\n            printer={{\r\n              printer: printer,\r\n              printer_id: printer.id,\r\n              serial_number: undefined, // If you have this, pass it here\r\n              status: printer.status\r\n            }}\r\n            clientId={clientId}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n} \r\n","import React from 'react';\r\n\r\nexport function ClientSupport() {\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"text-center py-8\">\r\n        <div className=\"bg-orange-50 w-20 h-20 rounded-full flex items-center justify-center mx-auto mb-6\">\r\n          <svg className=\"w-10 h-10 text-orange-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n          </svg>\r\n        </div>\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">🚧 We're Still Working on This Section</h3>\r\n        <p className=\"text-gray-600 mb-2\">Hi there! <span role=\"img\" aria-label=\"wave\">👋</span></p>\r\n        <p className=\"text-gray-600 mb-4\">\r\n          This part of the site is still under construction — but don't worry, we're here to help if you need support right away.<br /><br />\r\n          <span className=\"block my-2\">📞 <span className=\"font-semibold\">Call us at 0977 11 88880</span> to schedule assistance.</span>\r\n          <span className=\"block my-2\">🕒 <span className=\"font-semibold\">Support Hours:</span> 8:00 AM – 4:00 PM</span>\r\n          <span className=\"block my-2\">If you reach out before <span className=\"font-semibold\">10:00 AM</span>, we'll do our best to fit you in the same afternoon, depending on our current queue.</span>\r\n          <span className=\"block my-2\">We aim to resolve all issues within <span className=\"font-semibold\">48 hours</span>.</span>\r\n        </p>\r\n        <p className=\"text-gray-500 italic\">Thanks for your patience and understanding!</p>\r\n      </div>\r\n\r\n      <div className=\"bg-gray-50 rounded-lg p-6\">\r\n        <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n          <span role=\"img\" aria-label=\"printer\" className=\"mr-2\">🖨️</span>\r\n          Common Details Needed for Printer Issue Reports\r\n        </h4>\r\n        <p className=\"text-gray-600 mb-4\">\r\n          To help us assist you faster and more efficiently, please provide the following details when reporting a printer issue:\r\n        </p>\r\n        \r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <h5 className=\"font-semibold text-gray-900 mb-1\">Error Message (if any)</h5>\r\n            <p className=\"text-sm text-gray-600\">Exact wording or a screenshot of the message displayed.</p>\r\n          </div>\r\n          \r\n          <div>\r\n            <h5 className=\"font-semibold text-gray-900 mb-1\">Printer Model</h5>\r\n            <p className=\"text-sm text-gray-600\">Example: HP LaserJet Pro M404dn</p>\r\n          </div>\r\n          \r\n          <div>\r\n            <h5 className=\"font-semibold text-gray-900 mb-1\">Serial Number or Asset Tag</h5>\r\n            <p className=\"text-sm text-gray-600\">Found on a sticker on the back or bottom of the printer.</p>\r\n          </div>\r\n          \r\n          <div>\r\n            <h5 className=\"font-semibold text-gray-900 mb-1\">Issue Description</h5>\r\n            <p className=\"text-sm text-gray-600\">What's happening? (e.g., paper jam, not printing, blank pages)</p>\r\n          </div>\r\n          \r\n          <div>\r\n            <h5 className=\"font-semibold text-gray-900 mb-1\">When Did the Issue Start?</h5>\r\n            <p className=\"text-sm text-gray-600\">Approximate date and time the issue began.</p>\r\n          </div>\r\n          \r\n          <div>\r\n            <h5 className=\"font-semibold text-gray-900 mb-1\">Steps Already Taken</h5>\r\n            <p className=\"text-sm text-gray-600\">Any troubleshooting you've tried (e.g., restarted printer, replaced toner, checked cables)</p>\r\n          </div>\r\n          \r\n          <div>\r\n            <h5 className=\"font-semibold text-gray-900 mb-1\">Connection Type</h5>\r\n            <p className=\"text-sm text-gray-600\">USB / Network / Wi-Fi</p>\r\n          </div>\r\n          \r\n          <div>\r\n            <h5 className=\"font-semibold text-gray-900 mb-1\">Printer Location</h5>\r\n            <p className=\"text-sm text-gray-600\">Office name, floor, or room number to help us locate the unit.</p>\r\n          </div>\r\n          \r\n          <div>\r\n            <h5 className=\"font-semibold text-gray-900 mb-1\">Contact Person</h5>\r\n            <p className=\"text-sm text-gray-600\">Name and number of the person we can contact for further details.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","\r\nimport { useState, useCallback, useRef } from \"react\";\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Printer } from '@/types/database';\r\n\r\n// Debounce utility\r\nfunction useDebounce(fn: (...args: any[]) => void, delay: number) {\r\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  return useCallback((...args: any[]) => {\r\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\r\n    timeoutRef.current = setTimeout(() => fn(...args), delay);\r\n  }, [fn, delay]);\r\n}\r\n\r\nexport const usePrinterSearch = (onFilteredDataChange: (data: any[]) => void) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Add page parameter for pagination\r\n  const performSearch = useCallback(async (searchQuery: string, page: number = 0) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Single query: join printers with their compatible products\r\n      const { data: printers, error: printersError } = await supabase\r\n        .from('printers')\r\n        .select(`\r\n          id,\r\n          name,\r\n          manufacturer,\r\n          model,\r\n          created_at,\r\n          updated_at,\r\n          status,\r\n          printer_assignments(\r\n            id,\r\n            client_id,\r\n            status,\r\n            serial_number,\r\n            clients(id, name)\r\n          ),\r\n          product_printers:product_printers(\r\n            product:products(id, name, sku, color)\r\n          )\r\n        `)\r\n        .eq('status', 'active')\r\n        .ilike('name', `%${searchQuery}%`)\r\n        .range(page * 50, page * 50 + 49);\r\n      if (!printersError && printers) {\r\n        // Map the joined data to match the expected structure\r\n        const printersWithProducts = printers.map((printer: any) => ({\r\n          ...printer,\r\n          compatibleProducts: (printer.product_printers || []).map((pp: any) => pp.product).filter(Boolean)\r\n        }));\r\n        onFilteredDataChange(printersWithProducts);\r\n      } else {\r\n        setError('Failed to fetch printers');\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch printers');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [onFilteredDataChange]);\r\n\r\n  // Debounced version for search input\r\n  const debouncedPerformSearch = useDebounce(performSearch, 300);\r\n\r\n  return {\r\n    performSearch,\r\n    debouncedPerformSearch,\r\n    loading,\r\n    error\r\n  };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Search, Printer, CheckCircle } from 'lucide-react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { productService } from '@/services/productService';\r\nimport { CustomLoading } from \"@/components/ui/CustomLoading\";\r\n\r\ninterface PrinterSelectionModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onPrinterSelected: (printerId: string, printerName: string) => void;\r\n}\r\n\r\nconst PrinterSelectionModal: React.FC<PrinterSelectionModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onPrinterSelected\r\n}) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedPrinterId, setSelectedPrinterId] = useState('');\r\n  const [compatibleProducts, setCompatibleProducts] = useState<Record<string, any[]>>({});\r\n\r\n  // Fetch available printers (not currently assigned or available for reassignment)\r\n  const { data: printers = [], isLoading } = useQuery({\r\n    queryKey: ['available-printers'],\r\n    queryFn: async () => {\r\n      const { data, error } = await supabase\r\n        .from('printers')\r\n        .select(`\r\n          id,\r\n          name,\r\n          manufacturer,\r\n          model,\r\n          series,\r\n          color,\r\n          printer_assignments!left(id, status),\r\n          image_url\r\n        `)\r\n        .order('name');\r\n\r\n      if (error) throw error;\r\n\r\n      // Filter to show all printers (both assigned and unassigned)\r\n      // This allows reassigning printers between locations/departments\r\n      return data || [];\r\n    },\r\n    enabled: isOpen\r\n  });\r\n\r\n  const filteredPrinters = printers.filter(printer => {\r\n    const matchesPrinter =\r\n      printer.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      (printer.model && printer.model.toLowerCase().includes(searchQuery.toLowerCase())) ||\r\n      (printer.manufacturer && printer.manufacturer.toLowerCase().includes(searchQuery.toLowerCase()));\r\n\r\n    const compatible = compatibleProducts[printer.id] || [];\r\n    const matchesToner = compatible.some(product =>\r\n      (product.name && product.name.toLowerCase().includes(searchQuery.toLowerCase())) ||\r\n      (product.sku && product.sku.toLowerCase().includes(searchQuery.toLowerCase()))\r\n    );\r\n\r\n    return matchesPrinter || matchesToner;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    // Fetch compatible products for all filtered printers\r\n    const fetchAll = async () => {\r\n      const result: Record<string, any[]> = {};\r\n      for (const printer of printers) {\r\n        try {\r\n          const products = await productService.getProductsByPrinter(printer.id);\r\n          result[printer.id] = products;\r\n        } catch {\r\n          result[printer.id] = [];\r\n        }\r\n      }\r\n      setCompatibleProducts(result);\r\n    };\r\n    fetchAll();\r\n  }, [printers, isOpen]);\r\n\r\n  const handleSelect = () => {\r\n    const selectedPrinter = printers.find(p => p.id === selectedPrinterId);\r\n    if (selectedPrinter) {\r\n      onPrinterSelected(selectedPrinter.id, selectedPrinter.name);\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSearchQuery('');\r\n    setSelectedPrinterId('');\r\n    onClose();\r\n  };\r\n\r\n  const getAssignmentStatus = (printer: any) => {\r\n    const activeAssignments = printer.printer_assignments?.filter((a: any) => a.status === 'active') || [];\r\n    if (activeAssignments.length === 0) {\r\n      return { status: 'available', label: 'Available', color: 'bg-green-100 text-green-700' };\r\n    } else {\r\n      return { status: 'assigned', label: 'Currently Assigned', color: 'bg-blue-100 text-blue-700' };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={handleClose}>\r\n      <DialogContent className=\"sm:max-w-md max-h-[80vh] overflow-y-auto\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center space-x-2\">\r\n            <div className=\"bg-blue-600 p-2 rounded-lg\">\r\n              <Printer className=\"h-5 w-5 text-white\" />\r\n            </div>\r\n            <span>Select Printer</span>\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n\r\n        <div className=\"space-y-4\">\r\n          {/* Search */}\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Search printers...\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              className=\"pl-10\"\r\n            />\r\n          </div>\r\n\r\n          {/* Printer List */}\r\n          {isLoading ? (\r\n            <CustomLoading message=\"Loading printers\" />\r\n          ) : filteredPrinters.length === 0 ? (\r\n            <div className=\"text-center py-8\">\r\n              <Printer className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n              <p className=\"text-gray-500\">No printers found</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-2 max-h-60 overflow-y-auto\">\r\n              {filteredPrinters.map((printer) => {\r\n                const assignmentStatus = getAssignmentStatus(printer);\r\n                const isSelected = selectedPrinterId === printer.id;\r\n                \r\n                return (\r\n                  <Card\r\n                    key={printer.id}\r\n                    className={`cursor-pointer transition-colors ${\r\n                      isSelected\r\n                        ? 'border-blue-500 bg-blue-50'\r\n                        : 'border-gray-200 hover:border-gray-300'\r\n                    }`}\r\n                    onClick={() => setSelectedPrinterId(printer.id)}\r\n                  >\r\n                    <CardContent className=\"p-3\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        {/* Thumbnail */}\r\n                        <div className=\"w-14 h-14 flex-shrink-0 flex items-center justify-center bg-gray-100 rounded border overflow-hidden mr-3\">\r\n                          {printer.image_url ? (\r\n                            <img src={printer.image_url} alt={printer.name} className=\"object-contain w-full h-full\" />\r\n                          ) : (\r\n                            <Printer className=\"h-8 w-8 text-gray-400\" />\r\n                          )}\r\n                        </div>\r\n                        <div className=\"flex-1\">\r\n                          <div className=\"flex items-center space-x-2 mb-1\">\r\n                            <h4 className=\"font-medium text-sm\">{printer.name}</h4>\r\n                            {isSelected && (\r\n                              <CheckCircle className=\"h-4 w-4 text-blue-600\" />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"space-y-1\">\r\n                            {printer.model && (\r\n                              <p className=\"text-xs text-gray-600\">\r\n                                Model: {printer.model}\r\n                              </p>\r\n                            )}\r\n                            {printer.manufacturer && (\r\n                              <p className=\"text-xs text-gray-600\">\r\n                                Manufacturer: {printer.manufacturer}\r\n                              </p>\r\n                            )}\r\n                            <div className=\"flex items-center space-x-2\">\r\n                              <Badge variant=\"secondary\" className={`text-xs ${assignmentStatus.color}`}>\r\n                                {assignmentStatus.label}\r\n                              </Badge>\r\n                              {printer.color && (\r\n                                <Badge variant=\"outline\" className=\"text-xs\">\r\n                                  {printer.color}\r\n                                </Badge>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          {/* Toner Section */}\r\n                          <div className=\"text-xs text-gray-500 mt-1\">\r\n                            <span className=\"font-semibold\">Toner:</span>{' '}\r\n                            {compatibleProducts[printer.id] && compatibleProducts[printer.id].length > 0 ? (\r\n                              compatibleProducts[printer.id].map((product, idx) => (\r\n                                <span key={product.id || idx} className=\"inline-block mr-2\">\r\n                                  {product.name}{product.sku ? ` (${product.sku})` : ''}\r\n                                </span>\r\n                              ))\r\n                            ) : (\r\n                              <span className=\"text-gray-400 ml-1\">None</span>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"flex space-x-3 pt-4\">\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              onClick={handleClose}\r\n              className=\"flex-1\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleSelect}\r\n              disabled={!selectedPrinterId}\r\n              className=\"flex-1\"\r\n            >\r\n              Select Printer\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PrinterSelectionModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { X, Upload, Calendar, DollarSign, Shield, Hash, Plus, Users, Building, MapPin, Printer, ArrowLeft, Check } from 'lucide-react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Input } from '@/components/ui/input';\r\nimport { clientService } from '@/services/clientService';\r\nimport { assetService } from '@/services/assetService';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { Client } from '@/types/database';\r\nimport { useDepartments } from '@/hooks/useDepartments';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { CompatibleProducts } from './components/CompatibleProducts';\r\nimport { CustomLoading } from \"@/components/ui/CustomLoading\";\r\n\r\ninterface AssignPrinterToClientModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  printerId: string;\r\n  printerName: string;\r\n  onAssignmentCreated: () => void;\r\n  preSelectedClientId?: string;\r\n}\r\n\r\nconst AssignPrinterToClientModal: React.FC<AssignPrinterToClientModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  printerId,\r\n  printerName,\r\n  onAssignmentCreated,\r\n  preSelectedClientId,\r\n}) => {\r\n  const [clients, setClients] = useState<Client[]>([]);\r\n  const [printerDetails, setPrinterDetails] = useState<any>(null);\r\n  const [formData, setFormData] = useState({\r\n    clientId: preSelectedClientId || '',\r\n    departmentLocationId: '',\r\n    deploymentDate: '',\r\n    usageType: 'service_unit', // 'service_unit' | 'client_owned' | 'rental'\r\n    monthlyPrice: '',\r\n    hasSecurityDeposit: false,\r\n    securityDepositAmount: '',\r\n    notes: '',\r\n  });\r\n  const [contractFile, setContractFile] = useState<File | null>(null);\r\n  const [accountabilityFile, setAccountabilityFile] = useState<File | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showNewDepartmentInput, setShowNewDepartmentInput] = useState(false);\r\n  const [newDepartmentName, setNewDepartmentName] = useState('');\r\n  const [creatingDepartment, setCreatingDepartment] = useState(false);\r\n  const [availableAssignments, setAvailableAssignments] = useState<any[]>([]);\r\n  const [selectedAssignmentId, setSelectedAssignmentId] = useState('');\r\n  const { toast } = useToast();\r\n\r\n  // Get departments for the selected client\r\n  const [departmentLocationOptions, setDepartmentLocationOptions] = useState<{ id: string; name: string; location?: string }[]>([]);\r\n  const [deptsLoading, setDeptsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchDeptLocs = async () => {\r\n      if (!formData.clientId) {\r\n        setDepartmentLocationOptions([]);\r\n        return;\r\n      }\r\n      setDeptsLoading(true);\r\n      try {\r\n        const options = await clientService.getDepartmentsByClient(formData.clientId);\r\n        setDepartmentLocationOptions(options);\r\n      } catch (e) {\r\n        setDepartmentLocationOptions([]);\r\n      }\r\n      setDeptsLoading(false);\r\n    };\r\n    fetchDeptLocs();\r\n  }, [formData.clientId]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      loadClients();\r\n      loadPrinterDetails();\r\n      loadAvailableAssignments();\r\n      const today = new Date().toISOString().split('T')[0];\r\n      setFormData(prev => ({ \r\n        ...prev, \r\n        deploymentDate: today,\r\n        clientId: preSelectedClientId || ''\r\n      }));\r\n    }\r\n  }, [isOpen, preSelectedClientId, printerId]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && !preSelectedClientId) {\r\n      loadClients();\r\n    }\r\n  }, [isOpen, preSelectedClientId]);\r\n\r\n  const loadClients = async () => {\r\n    try {\r\n      const clientsData = await clientService.getClients();\r\n      setClients(clientsData);\r\n    } catch (error) {\r\n      console.error('Failed to load clients:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to load clients. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const loadPrinterDetails = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('printers')\r\n        .select('id, name, manufacturer, model, series, image_url')\r\n        .eq('id', printerId)\r\n        .single();\r\n\r\n      if (error) throw error;\r\n      setPrinterDetails(data);\r\n    } catch (error) {\r\n      console.error('Failed to load printer details:', error);\r\n    }\r\n  };\r\n\r\n  const loadAvailableAssignments = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('printer_assignments')\r\n        .select('id, serial_number, usage_type')\r\n        .eq('printer_id', printerId)\r\n        .eq('status', 'available')\r\n        .order('serial_number');\r\n\r\n      if (error) throw error;\r\n      setAvailableAssignments(data || []);\r\n      \r\n      // Auto-select the first assignment if available\r\n      if (data && data.length > 0) {\r\n        setSelectedAssignmentId(data[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load available assignments:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateNewDepartment = async () => {\r\n    if (!newDepartmentName.trim() || !formData.clientId) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Please enter a department name.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setCreatingDepartment(true);\r\n    try {\r\n      // First create the department\r\n      const { data: department, error: deptError } = await supabase\r\n        .from('departments')\r\n        .insert({\r\n          client_id: formData.clientId,\r\n          name: newDepartmentName.trim(),\r\n        })\r\n        .select()\r\n        .single();\r\n\r\n      if (deptError) throw deptError;\r\n\r\n      // Then create a default location for this department\r\n      const { data: location, error: locError } = await supabase\r\n        .from('departments_location')\r\n        .insert({\r\n          department_id: department.id,\r\n          client_id: formData.clientId,\r\n          name: 'Main',\r\n          is_primary: true,\r\n        })\r\n        .select()\r\n        .single();\r\n\r\n      if (locError) throw locError;\r\n\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Department created successfully!\",\r\n      });\r\n\r\n      // Re-fetch department locations to include the new one\r\n      const updatedOptions = await clientService.getDepartmentsByClient(formData.clientId);\r\n      setDepartmentLocationOptions(updatedOptions);\r\n      setFormData(prev => ({ ...prev, departmentLocationId: location.id }));\r\n      setNewDepartmentName('');\r\n      setShowNewDepartmentInput(false);\r\n    } catch (error) {\r\n      console.error('Failed to create department:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to create department. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setCreatingDepartment(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!formData.clientId || !formData.departmentLocationId || !formData.deploymentDate || !selectedAssignmentId) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Please fill in all required fields (Client, Department Location, Deployment Date, and Serial Number).\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const { error } = await supabase\r\n        .from('printer_assignments')\r\n        .update({\r\n          client_id: formData.clientId,\r\n          department_location_id: formData.departmentLocationId,\r\n          deployment_date: formData.deploymentDate,\r\n          usage_type: formData.usageType,\r\n          monthly_price: formData.usageType === 'rental' && formData.monthlyPrice ? parseFloat(formData.monthlyPrice) : null,\r\n          has_security_deposit: formData.hasSecurityDeposit,\r\n          security_deposit_amount: formData.hasSecurityDeposit && formData.securityDepositAmount ? parseFloat(formData.securityDepositAmount) : null,\r\n          notes: formData.notes || null,\r\n          status: 'active'\r\n        })\r\n        .eq('id', selectedAssignmentId);\r\n\r\n      if (error) throw error;\r\n\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Printer assigned to client successfully!\",\r\n      });\r\n      onAssignmentCreated();\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error('Failed to assign printer:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to assign printer. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setFormData({\r\n      clientId: preSelectedClientId || '',\r\n      departmentLocationId: '',\r\n      deploymentDate: '',\r\n      usageType: 'service_unit',\r\n      monthlyPrice: '',\r\n      hasSecurityDeposit: false,\r\n      securityDepositAmount: '',\r\n      notes: '',\r\n    });\r\n    setContractFile(null);\r\n    setAccountabilityFile(null);\r\n    setShowNewDepartmentInput(false);\r\n    setNewDepartmentName('');\r\n    setAvailableAssignments([]);\r\n    setSelectedAssignmentId('');\r\n    onClose();\r\n  };\r\n\r\n  const handleFileUpload = (file: File, type: 'contract' | 'accountability') => {\r\n    if (type === 'contract') {\r\n      setContractFile(file);\r\n    } else {\r\n      setAccountabilityFile(file);\r\n    }\r\n  };\r\n\r\n  const selectedClient = clients.find(c => c.id === formData.clientId);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/60 backdrop-blur-sm flex items-end sm:items-center justify-center z-50\">\r\n      {/* Mobile-first modal container */}\r\n      <div className=\"bg-white w-full h-full sm:h-auto sm:max-h-[95vh] sm:max-w-lg sm:rounded-2xl sm:shadow-2xl flex flex-col\">\r\n        \r\n        {/* Mobile Header - Sticky */}\r\n        <div className=\"sticky top-0 z-10 bg-white border-b border-gray-200 sm:rounded-t-2xl\">\r\n          <div className=\"flex items-center justify-between p-4 sm:p-6\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"bg-blue-100 p-2.5 rounded-xl\">\r\n                <Plus className=\"h-5 w-5 text-blue-600\" />\r\n              </div>\r\n              <div>\r\n                <h2 className=\"text-lg sm:text-xl font-semibold text-gray-900\">Assign Printer</h2>\r\n                <p className=\"text-xs sm:text-sm text-gray-500\">Assigning printer to client</p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={handleClose}\r\n              className=\"p-2 -m-2 text-gray-400 hover:text-gray-600 transition-colors rounded-lg hover:bg-gray-100\"\r\n            >\r\n              <X className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Scrollable Content */}\r\n        <div className=\"flex-1 overflow-y-auto\">\r\n          \r\n          {/* Printer Information Card */}\r\n          {printerDetails && (\r\n            <div className=\"p-4 sm:p-6 border-b border-gray-100 bg-gradient-to-br from-blue-50 to-indigo-50\">\r\n              <div className=\"bg-white rounded-xl p-4 shadow-sm border border-blue-100\">\r\n                <div className=\"flex items-start space-x-4\">\r\n                  {/* Printer Image */}\r\n                  <div className=\"w-16 h-16 flex-shrink-0 flex items-center justify-center bg-gray-50 rounded-xl border-2 border-gray-200 overflow-hidden\">\r\n                    {printerDetails.image_url ? (\r\n                      <img\r\n                        src={printerDetails.image_url}\r\n                        alt={printerDetails.name}\r\n                        className=\"object-contain w-full h-full\"\r\n                      />\r\n                    ) : (\r\n                      <Printer className=\"h-8 w-8 text-gray-400\" />\r\n                    )}\r\n                  </div>\r\n                  \r\n                  {/* Printer Details */}\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <h3 className=\"font-bold text-gray-900 text-lg mb-2\">{printerDetails.name}</h3>\r\n                    \r\n                    {/* Badges */}\r\n                    <div className=\"flex flex-wrap gap-2 mb-3\">\r\n                      {printerDetails.manufacturer && (\r\n                        <Badge variant=\"secondary\" className=\"text-xs bg-blue-100 text-blue-700\">\r\n                          {printerDetails.manufacturer}\r\n                        </Badge>\r\n                      )}\r\n                      {printerDetails.model && (\r\n                        <Badge variant=\"outline\" className=\"text-xs\">\r\n                          {printerDetails.model}\r\n                        </Badge>\r\n                      )}\r\n                      {printerDetails.series && (\r\n                        <Badge variant=\"outline\" className=\"text-xs\">\r\n                          {printerDetails.series}\r\n                        </Badge>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    {/* Compatible Products */}\r\n                    <CompatibleProducts \r\n                      printerId={printerDetails.id} \r\n                      className=\"mb-4\" \r\n                    />\r\n                    \r\n                    {/* Serial Number Selection */}\r\n                    {availableAssignments.length > 0 && (\r\n                      <div className=\"pt-3 border-t border-gray-200\">\r\n                        <label className=\"text-sm font-semibold text-red-600 mb-3 block\">\r\n                          Select Serial Number *\r\n                        </label>\r\n                        <Select\r\n                          value={selectedAssignmentId}\r\n                          onValueChange={setSelectedAssignmentId}\r\n                        >\r\n                          <SelectTrigger className=\"w-full h-12 text-left\">\r\n                            <SelectValue placeholder=\"Choose a serial number\" />\r\n                          </SelectTrigger>\r\n                          <SelectContent>\r\n                            {availableAssignments.map((assignment) => (\r\n                              <SelectItem key={assignment.id} value={assignment.id}>\r\n                                {assignment.serial_number || `Assignment ID: ${assignment.id.slice(0, 8)}...`}\r\n                              </SelectItem>\r\n                            ))}\r\n                          </SelectContent>\r\n                        </Select>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Form Content */}\r\n          <form onSubmit={handleSubmit} className=\"p-4 sm:p-6 space-y-6\">\r\n            \r\n            {/* Client Selection */}\r\n            {!preSelectedClientId && (\r\n              <div className=\"space-y-3\">\r\n                <label className=\"text-sm font-semibold text-gray-700 flex items-center\">\r\n                  <Users className=\"h-4 w-4 mr-2 text-blue-500\"/>\r\n                  Client *\r\n                </label>\r\n                <Select\r\n                  value={formData.clientId}\r\n                  onValueChange={(value) => setFormData(prev => ({ ...prev, clientId: value, departmentLocationId: '' }))}\r\n                >\r\n                  <SelectTrigger className=\"w-full h-12 text-left\">\r\n                    <SelectValue placeholder=\"Select a client\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {clients.map(client => (\r\n                      <SelectItem key={client.id} value={client.id}>{client.name}</SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Department & Location */}\r\n            {formData.clientId && (\r\n              <div className=\"space-y-3\">\r\n                <label className=\"text-sm font-semibold text-gray-700 flex items-center\">\r\n                  <Building className=\"h-4 w-4 mr-2 text-blue-500\" />\r\n                  Department / Location *\r\n                </label>\r\n                {deptsLoading ? (\r\n                  <CustomLoading message=\"Loading departments\" />\r\n                ) : (\r\n                  <>\r\n                    <Select\r\n                      value={formData.departmentLocationId}\r\n                      onValueChange={(value) => setFormData(prev => ({ ...prev, departmentLocationId: value }))}\r\n                      disabled={showNewDepartmentInput}\r\n                    >\r\n                      <SelectTrigger className=\"w-full h-12 text-left\">\r\n                        <SelectValue placeholder=\"Select a department and location\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {departmentLocationOptions.map(opt => (\r\n                          <SelectItem key={opt.id} value={opt.id}>\r\n                            {opt.name}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                    \r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"outline\"\r\n                      size=\"sm\"\r\n                      className=\"w-full sm:w-auto text-sm h-10\"\r\n                      onClick={() => setShowNewDepartmentInput(!showNewDepartmentInput)}\r\n                    >\r\n                      <Plus className=\"h-4 w-4 mr-2\" />\r\n                      {showNewDepartmentInput ? 'Cancel' : 'Create New Department'}\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* New Department Input */}\r\n            {showNewDepartmentInput && (\r\n              <div className=\"space-y-3 p-4 bg-gray-50 rounded-xl border border-gray-200\">\r\n                <label className=\"text-sm font-semibold text-gray-700\">\r\n                  New Department Name\r\n                </label>\r\n                <div className=\"flex space-x-2\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter department name\"\r\n                    value={newDepartmentName}\r\n                    onChange={(e) => setNewDepartmentName(e.target.value)}\r\n                    className=\"flex-1 h-12\"\r\n                  />\r\n                  <Button \r\n                    type=\"button\" \r\n                    onClick={handleCreateNewDepartment}\r\n                    disabled={creatingDepartment || !newDepartmentName.trim()}\r\n                    className=\"h-12 px-4\"\r\n                  >\r\n                    {creatingDepartment ? 'Creating...' : 'Create'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Deployment Date */}\r\n            <div className=\"space-y-3\">\r\n              <label htmlFor=\"deploymentDate\" className=\"text-sm font-semibold text-gray-700 flex items-center\">\r\n                <Calendar className=\"h-4 w-4 mr-2 text-blue-500\" />\r\n                Deployment Date *\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"deploymentDate\"\r\n                value={formData.deploymentDate}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, deploymentDate: e.target.value }))}\r\n                required\r\n                disabled={loading}\r\n                className=\"w-full h-12 px-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 text-base\"\r\n              />\r\n            </div>\r\n\r\n            {/* Usage Type */}\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-3 sm:space-y-0\">\r\n                <div>\r\n                  <label className=\"text-sm font-semibold text-gray-700\">Usage Type</label>\r\n                  <p className=\"text-xs text-gray-500 mt-1\">Select the usage type for this assignment.</p>\r\n                </div>\r\n                <Select\r\n                  value={formData.usageType}\r\n                  onValueChange={(value) => setFormData(prev => ({ ...prev, usageType: value }))}\r\n                  disabled={loading}\r\n                >\r\n                  <SelectTrigger className=\"w-full sm:w-48 h-12 text-left\">\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"service_unit\">Service Unit</SelectItem>\r\n                    <SelectItem value=\"client_owned\">Client Owned</SelectItem>\r\n                    <SelectItem value=\"rental\">Rental</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              {formData.usageType === 'rental' && (\r\n                <div className=\"space-y-3 p-4 bg-yellow-50 rounded-xl border border-yellow-200\">\r\n                  <label htmlFor=\"monthlyPrice\" className=\"text-sm font-semibold text-gray-700 flex items-center\">\r\n                    <DollarSign className=\"h-4 w-4 mr-2 text-yellow-600\" />\r\n                    Monthly Rental Price\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"monthlyPrice\"\r\n                    value={formData.monthlyPrice}\r\n                    onChange={(e) => setFormData(prev => ({ ...prev, monthlyPrice: e.target.value }))}\r\n                    disabled={loading}\r\n                    min=\"0\"\r\n                    step=\"0.01\"\r\n                    className=\"w-full h-12 px-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 text-base\"\r\n                    placeholder=\"0.00\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Security Deposit */}\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-xl\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <Shield className=\"h-5 w-5 text-gray-600\" />\r\n                  <div>\r\n                    <label className=\"text-sm font-semibold text-gray-700\">Security Deposit</label>\r\n                    <p className=\"text-xs text-gray-500\">Does this assignment require a security deposit?</p>\r\n                  </div>\r\n                </div>\r\n                <Switch\r\n                  checked={formData.hasSecurityDeposit}\r\n                  onCheckedChange={(checked) => setFormData(prev => ({ ...prev, hasSecurityDeposit: checked }))}\r\n                  disabled={loading}\r\n                />\r\n              </div>\r\n\r\n              {formData.hasSecurityDeposit && (\r\n                <div className=\"space-y-3 p-4 bg-red-50 rounded-xl border border-red-200\">\r\n                  <label htmlFor=\"securityDepositAmount\" className=\"text-sm font-semibold text-gray-700\">\r\n                    Security Deposit Amount\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"securityDepositAmount\"\r\n                    value={formData.securityDepositAmount}\r\n                    onChange={(e) => setFormData(prev => ({ ...prev, securityDepositAmount: e.target.value }))}\r\n                    disabled={loading}\r\n                    min=\"0\"\r\n                    step=\"0.01\"\r\n                    className=\"w-full h-12 px-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 text-base\"\r\n                    placeholder=\"0.00\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* File Uploads */}\r\n            <div className=\"space-y-4\">\r\n              <h4 className=\"text-sm font-semibold text-gray-700 flex items-center\">\r\n                <Upload className=\"h-4 w-4 mr-2 text-blue-500\" />\r\n                Documents (Optional)\r\n              </h4>\r\n              \r\n              <div className=\"space-y-4\">\r\n                <div className=\"space-y-2\">\r\n                  <label className=\"text-sm font-medium text-gray-700\">\r\n                    Contract Agreement\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".pdf,.doc,.docx\"\r\n                      onChange={(e) => e.target.files?.[0] && handleFileUpload(e.target.files[0], 'contract')}\r\n                      disabled={loading}\r\n                      className=\"w-full h-12 px-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 text-sm file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\r\n                    />\r\n                  </div>\r\n                  {contractFile && (\r\n                    <p className=\"text-xs text-green-600 flex items-center\">\r\n                      <Check className=\"h-3 w-3 mr-1\" />\r\n                      Selected: {contractFile.name}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <label className=\"text-sm font-medium text-gray-700\">\r\n                    Accountability Agreement\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".pdf,.doc,.docx\"\r\n                      onChange={(e) => e.target.files?.[0] && handleFileUpload(e.target.files[0], 'accountability')}\r\n                      disabled={loading}\r\n                      className=\"w-full h-12 px-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 text-sm file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\r\n                    />\r\n                  </div>\r\n                  {accountabilityFile && (\r\n                    <p className=\"text-xs text-green-600 flex items-center\">\r\n                      <Check className=\"h-3 w-3 mr-1\" />\r\n                      Selected: {accountabilityFile.name}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Notes */}\r\n            <div className=\"space-y-3\">\r\n              <label htmlFor=\"notes\" className=\"text-sm font-semibold text-gray-700\">\r\n                Notes (Optional)\r\n              </label>\r\n              <Textarea\r\n                id=\"notes\"\r\n                value={formData.notes}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\r\n                disabled={loading}\r\n                placeholder=\"Additional notes about this assignment...\"\r\n                className=\"w-full min-h-[100px] resize-none text-base\"\r\n                rows={4}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Mobile Footer - Sticky */}\r\n        <div className=\"sticky bottom-0 z-10 bg-white border-t border-gray-200 sm:rounded-b-2xl\">\r\n          <div className=\"p-4 sm:p-6\">\r\n            <div className=\"flex flex-col sm:flex-row space-y-3 sm:space-y-0 sm:space-x-3\">\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline\"\r\n                onClick={handleClose}\r\n                disabled={loading}\r\n                className=\"w-full sm:w-auto h-12 text-base font-medium\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={handleSubmit}\r\n                disabled={loading}\r\n                className=\"w-full sm:w-auto h-12 text-base font-medium bg-blue-600 hover:bg-blue-700 text-white\"\r\n              >\r\n                {loading ? (\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                    Assigning...\r\n                  </div>\r\n                ) : (\r\n                  'Assign Printer'\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignPrinterToClientModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { printerService } from '@/services/printerService';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\ninterface AddCompanyPrinterModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onPrinterAdded: () => void;\r\n  clientId: string;\r\n}\r\n\r\nconst AddCompanyPrinterModal: React.FC<AddCompanyPrinterModalProps> = ({ isOpen, onClose, onPrinterAdded, clientId }) => {\r\n  const { toast } = useToast();\r\n  const { userProfile } = useAuth();\r\n  const [printerName, setPrinterName] = useState('');\r\n  const [printerSuggestions, setPrinterSuggestions] = useState<string[]>([]);\r\n  const [serialNumber, setSerialNumber] = useState('');\r\n  const [departments, setDepartments] = useState<any[]>([]);\r\n  const [locations, setLocations] = useState<any[]>([]);\r\n  const [selectedDepartment, setSelectedDepartment] = useState<string>('');\r\n  const [selectedLocation, setSelectedLocation] = useState<string>('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [searching, setSearching] = useState(false);\r\n  const [isCompanyOwned, setIsCompanyOwned] = useState(true);\r\n\r\n  // Set default toggle state based on user role when modal opens\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      if (userProfile?.role === 'admin') {\r\n        setIsCompanyOwned(false); // Default to Service Unit for admin\r\n      } else {\r\n        setIsCompanyOwned(true); // Default to Company Owned for others\r\n      }\r\n    }\r\n  }, [isOpen, userProfile?.role]);\r\n\r\n  // Fetch departments and their locations for the current client on open\r\n  useEffect(() => {\r\n    if (isOpen && clientId) {\r\n      supabase\r\n        .from('departments')\r\n        .select('id, name, departments_location(id, name)')\r\n        .eq('client_id', clientId)\r\n        .then(({ data }) => setDepartments(data || []));\r\n      setPrinterName('');\r\n      setPrinterSuggestions([]);\r\n      setSerialNumber('');\r\n      setSelectedDepartment('');\r\n      setSelectedLocation('');\r\n    }\r\n  }, [isOpen, clientId]);\r\n\r\n  // Fetch locations when department changes\r\n  useEffect(() => {\r\n    if (selectedDepartment) {\r\n      supabase\r\n        .from('departments_location')\r\n        .select('id, name')\r\n        .eq('department_id', selectedDepartment)\r\n        .then(({ data }) => setLocations(data || []));\r\n    } else {\r\n      setLocations([]);\r\n      setSelectedLocation('');\r\n    }\r\n  }, [selectedDepartment]);\r\n\r\n  // Autocomplete for printer name\r\n  useEffect(() => {\r\n    if (printerName.length < 2) {\r\n      setPrinterSuggestions([]);\r\n      return;\r\n    }\r\n    let cancelled = false;\r\n    setSearching(true);\r\n    printerService.searchPrinters(printerName).then((results) => {\r\n      if (!cancelled) {\r\n        setPrinterSuggestions(results.map(p => p.name));\r\n        setSearching(false);\r\n      }\r\n    });\r\n    return () => { cancelled = true; };\r\n  }, [printerName]);\r\n\r\n  // Single dropdown for department/location\r\n  const handleDeptLocChange = (value: string) => {\r\n    if (!value) {\r\n      setSelectedDepartment('');\r\n      setSelectedLocation('');\r\n      return;\r\n    }\r\n    // Value format: 'loc-<id>'\r\n    const locId = value.replace('loc-', '');\r\n    // Find department for this location\r\n    const dept = departments.find(d => d.departments_location.some(l => l.id === locId));\r\n    setSelectedDepartment(dept ? dept.id : '');\r\n    setSelectedLocation(locId);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!printerName.trim() || !serialNumber.trim()) {\r\n      toast({ title: 'Error', description: 'Printer name and serial number are required.', variant: 'destructive' });\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      // Find or create printer in catalog\r\n      const printer = await printerService.findOrCreatePrinter(printerName.trim());\r\n      // Prepare assignment data\r\n      const assignmentData: any = {\r\n        printer_id: printer.id,\r\n        serial_number: serialNumber.trim(),\r\n        usage_type: isCompanyOwned ? 'client_owned' : 'service_unit',\r\n        status: (!selectedDepartment && !selectedLocation) ? 'undeployed' : 'active',\r\n        is_client_owned: isCompanyOwned,\r\n        client_id: clientId, // Always set client_id regardless of toggle\r\n      };\r\n      if (selectedLocation) assignmentData.department_location_id = selectedLocation;\r\n      // Insert assignment\r\n      const { error } = await supabase.from('printer_assignments').insert(assignmentData);\r\n      if (error) throw error;\r\n      toast({ title: 'Success', description: 'Company printer added successfully.' });\r\n      onPrinterAdded();\r\n      onClose();\r\n    } catch (err: any) {\r\n      toast({ title: 'Error', description: err.message || 'Failed to add company printer.', variant: 'destructive' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-md max-h-[90vh] overflow-y-auto\">\r\n        <DialogHeader>\r\n          <DialogTitle>Add Company Printer</DialogTitle>\r\n        </DialogHeader>\r\n        <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n          <div>\r\n            <Label htmlFor=\"printerName\">Printer Name *</Label>\r\n            <Input\r\n              id=\"printerName\"\r\n              value={printerName}\r\n              onChange={e => setPrinterName(e.target.value)}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Type or select printer name\"\r\n              list=\"printer-catalog-list\"\r\n              required\r\n            />\r\n            <datalist id=\"printer-catalog-list\">\r\n              {printerSuggestions.map((name) => (\r\n                <option key={name} value={name} />\r\n              ))}\r\n            </datalist>\r\n            {searching && <div className=\"text-xs text-gray-400 mt-1\">Searching...</div>}\r\n          </div>\r\n          <div>\r\n            <Label htmlFor=\"serialNumber\">Serial Number *</Label>\r\n            <Input\r\n              id=\"serialNumber\"\r\n              value={serialNumber}\r\n              onChange={e => setSerialNumber(e.target.value)}\r\n              required\r\n              placeholder=\"Enter serial number\"\r\n            />\r\n          </div>\r\n          {/* Replace the switch section with a flex row layout */}\r\n          <div className=\"flex items-center justify-center gap-4 mb-4\">\r\n            <span className={`font-semibold ${!isCompanyOwned ? 'text-green-600' : 'text-gray-400'}`}>Service Unit</span>\r\n            <Switch\r\n              id=\"company_owned_toggle\"\r\n              checked={isCompanyOwned}\r\n              onCheckedChange={setIsCompanyOwned}\r\n              aria-label=\"Toggle Company Owned\"\r\n            />\r\n            <span className={`font-semibold ${isCompanyOwned ? 'text-green-600' : 'text-gray-400'}`}>Company Owned</span>\r\n          </div>\r\n          <div>\r\n            <Label htmlFor=\"deptLoc\">Department / Location</Label>\r\n            <Select value={selectedLocation ? `loc-${selectedLocation}` : ''} onValueChange={handleDeptLocChange}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select department or location (optional)\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {departments.flatMap((dept) =>\r\n                  (dept.departments_location || []).map((loc: any) => (\r\n                    <SelectItem key={`loc-${loc.id}`} value={`loc-${loc.id}`}>{dept.name} / {loc.name}</SelectItem>\r\n                  ))\r\n                )}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n          <div className=\"flex space-x-3 pt-4\">\r\n            <Button type=\"button\" variant=\"outline\" onClick={onClose} className=\"flex-1\" disabled={loading}>\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\" className=\"flex-1\" disabled={loading}>\r\n              {loading ? 'Adding...' : 'Add Printer'}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddCompanyPrinterModal; ","import { useState, useEffect, useRef } from \"react\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { Product } from \"@/types/sales\";\r\nimport { ProductDetailsModal } from \"@/components/modals/ProductDetailsModal\";\r\nimport AddPrinterModal from \"@/components/AddPrinterModal\";\r\nimport { Printer as PrinterType } from \"@/types/database\";\r\nimport { Users, Printer, Monitor, ShoppingCart, LifeBuoy, User, LogOut, CornerUpLeft, Search, X, Building, Settings, ArrowLeft } from 'lucide-react';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { DropdownMenu, DropdownMenuTrigger, DropdownMenuContent, DropdownMenuItem } from \"@/components/ui/dropdown-menu\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { useAuth } from \"@/hooks/useAuth\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\nimport { useDepartments } from \"@/components/admin-dashboard/hooks/useDepartments\";\r\n\r\n// Components\r\nimport { FilterButtons } from \"../PrinterDashboard/components/FilterButtons\";\r\nimport { AddButtonNavigation } from \"../PrinterDashboard/components/AddButtonNavigation\";\r\nimport { AddPurchaseModal } from '@/SalesDashboard/AddPurchaseModal';\r\n\r\n// Hooks\r\nimport { usePrinterSearch } from \"../PrinterDashboard/hooks/usePrinterSearch\";\r\nimport PrinterSelectionModal from \"@/components/admin-dashboard/components/PrinterSelectionModal\";\r\nimport AssignPrinterToClientModal from \"../PrinterDashboard/AssignPrinterToClientModal\";\r\nimport AddCompanyPrinterModal from './AddCompanyPrinterModal';\r\n\r\ninterface PrinterWithProducts extends Omit<PrinterType, 'printer_assignments'> {\r\n  compatibleProducts: Array<{\r\n    id: string;\r\n    name: string;\r\n    sku?: string;\r\n    color?: string;\r\n  }>;\r\n  printer_assignments?: Array<{\r\n    id: string;\r\n    status: string;\r\n    is_unassigned?: boolean;\r\n    serial_number?: string;\r\n    client_id?: string;\r\n    clients?: { id: string; name: string };\r\n    department_location?: { name: string; department: { name: string } };\r\n  }>;\r\n}\r\n\r\ninterface ClientDashboardSearchProps {\r\n  activeTab: 'departments' | 'products' | 'printers' | 'available-printers' | 'support';\r\n  setActiveTab: (tab: 'departments' | 'products' | 'printers' | 'available-printers' | 'support') => void;\r\n  onFilteredDataChange?: (data: PrinterWithProducts[]) => void;\r\n  client?: any;\r\n  onClientUpdated?: (client: any) => void;\r\n}\r\n\r\n// Enhanced SearchInput component with department navigation\r\ninterface EnhancedSearchInputProps {\r\n  searchQuery: string;\r\n  onSearchChange: (query: string) => void;\r\n  placeholder: string;\r\n  departments: any[];\r\n  onDepartmentSelect: (departmentId: string) => void;\r\n  onFocus: () => void;\r\n  onBlur: () => void;\r\n}\r\n\r\nconst EnhancedSearchInput = ({ \r\n  searchQuery, \r\n  onSearchChange, \r\n  placeholder, \r\n  departments, \r\n  onDepartmentSelect, \r\n  onFocus,\r\n  onBlur\r\n}: EnhancedSearchInputProps) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [showDepartments, setShowDepartments] = useState(false);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Function to check if input contains valid characters (a-z, 1-9, case-insensitive)\r\n  const hasValidCharacters = (input: string): boolean => {\r\n    // Regular expression to match valid characters: letters a-z (case-insensitive) or digits 1-9\r\n    const validCharRegex = /[a-zA-Z1-9]/;\r\n    return validCharRegex.test(input);\r\n  };\r\n\r\n  // Show departments when focused and no valid characters in search query\r\n  useEffect(() => {\r\n    if (isFocused && !hasValidCharacters(searchQuery) && departments.length > 1) {\r\n      setShowDepartments(true);\r\n    } else {\r\n      setShowDepartments(false);\r\n    }\r\n  }, [isFocused, searchQuery, departments.length]);\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n    onFocus();\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    // Delay hiding departments to allow for clicks\r\n    setTimeout(() => {\r\n      setIsFocused(false);\r\n      setShowDepartments(false);\r\n      onBlur();\r\n    }, 150);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = e.target.value;\r\n    onSearchChange(newValue);\r\n    \r\n    // Immediately hide departments if valid characters are typed\r\n    if (hasValidCharacters(newValue)) {\r\n      setShowDepartments(false);\r\n    }\r\n  };\r\n\r\n  const handleDepartmentClick = (departmentId: string) => {\r\n    onDepartmentSelect(departmentId);\r\n    setShowDepartments(false);\r\n    if (inputRef.current) {\r\n      inputRef.current.blur();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative w-full\">\r\n      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4 z-10\" />\r\n      <Input\r\n        ref={inputRef}\r\n        placeholder={placeholder}\r\n        value={searchQuery}\r\n        onChange={handleInputChange}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        className=\"w-full pl-10 pr-10 py-2.5 text-sm bg-white/90 border-gray-200 rounded-lg focus:border-orange-400 focus:ring-2 focus:ring-orange-200 transition-all duration-200\"\r\n      />\r\n      {searchQuery && (\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onSearchChange(\"\")}\r\n          className=\"absolute right-2 top-1/2 transform -translate-y-1/2 p-1 rounded-full hover:bg-gray-100 transition-colors\"\r\n        >\r\n          <X className=\"h-4 w-4 text-gray-400\" />\r\n        </button>\r\n      )}\r\n      \r\n      {/* Department Navigation Dropdown - Fixed positioning and styling */}\r\n      {showDepartments && (\r\n        <div className=\"absolute bottom-full left-0 right-0 mb-2 bg-white border border-gray-200 rounded-lg shadow-xl z-[60] max-h-60 overflow-y-auto backdrop-blur-sm\">\r\n          <div className=\"p-3\">\r\n            <div className=\"text-xs font-medium text-gray-500 mb-3 px-2 flex items-center gap-2\">\r\n              <Building className=\"h-3 w-3\" />\r\n              Jump to a department...\r\n            </div>\r\n            <div className=\"space-y-1\">\r\n              {departments.map((dept) => (\r\n                <button\r\n                  key={dept.id}\r\n                  type=\"button\"\r\n                  onClick={() => handleDepartmentClick(dept.id)}\r\n                  className=\"w-full text-left px-3 py-2.5 text-sm hover:bg-blue-50 rounded-md flex items-center gap-3 transition-all duration-150 group\"\r\n                >\r\n                  <Building className=\"h-4 w-4 text-gray-400 group-hover:text-blue-500 transition-colors\" />\r\n                  <span className=\"font-medium text-gray-700 group-hover:text-blue-700\">{dept.name}</span>\r\n                  {dept.locations && dept.locations.length > 0 && (\r\n                    <span className=\"text-xs text-gray-500 ml-auto bg-gray-100 px-2 py-1 rounded-full group-hover:bg-blue-100 transition-colors\">\r\n                      {dept.locations.length} location{dept.locations.length !== 1 ? 's' : ''}\r\n                    </span>\r\n                  )}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst filterValueMap: Record<'assigned' | 'catalog' | 'available' | 'inventory', 'departments' | 'products' | 'printers' | 'inventory'> = {\r\n  assigned: 'departments',\r\n  catalog: 'products',\r\n  available: 'printers',\r\n  inventory: 'inventory',\r\n};\r\nconst reverseFilterValueMap: Record<'departments' | 'products' | 'printers' | 'inventory', 'assigned' | 'catalog' | 'available' | 'inventory'> = {\r\n  departments: 'assigned',\r\n  products: 'catalog',\r\n  printers: 'available',\r\n  inventory: 'inventory',\r\n};\r\n\r\nexport const ClientDashboardSearch = ({ \r\n  activeTab, \r\n  setActiveTab,\r\n  onFilteredDataChange,\r\n  client,\r\n  onClientUpdated\r\n}: ClientDashboardSearchProps) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\r\n  const [showProductDetails, setShowProductDetails] = useState(false);\r\n  const [showAddPrinter, setShowAddPrinter] = useState(false);\r\n  const [showPrinterSelection, setShowPrinterSelection] = useState(false);\r\n  const [showAssignToClient, setShowAssignToClient] = useState(false);\r\n  const [selectedPrinter, setSelectedPrinter] = useState<{ id: string; name: string } | null>(null);\r\n  const [isSearchFieldActive, setIsSearchFieldActive] = useState(false);\r\n  const [hasClearedSearch, setHasClearedSearch] = useState(false);\r\n  const [showAddPurchase, setShowAddPurchase] = useState(false);\r\n  const [showPlaceholderModal, setShowPlaceholderModal] = useState(false);\r\n  const [pendingDepartmentScroll, setPendingDepartmentScroll] = useState<string | null>(null);\r\n  const [showMenuDropdown, setShowMenuDropdown] = useState(false); // NEW: controls the dropdown menu\r\n  const [showAddCompanyPrinter, setShowAddCompanyPrinter] = useState(false);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { performSearch } = usePrinterSearch(onFilteredDataChange);\r\n  const { clientId } = useParams<{ clientId: string }>();\r\n  const { userProfile } = useAuth();\r\n  \r\n  // Fetch departments for navigation\r\n  const { data: departments = [] } = useDepartments(clientId!);\r\n\r\n  // Enhanced search logic for departments, locations, printers, and products\r\n  useEffect(() => {\r\n    if (!searchQuery.trim()) {\r\n      onFilteredDataChange?.([]);\r\n      return;\r\n    }\r\n    let cancelled = false;\r\n    (async () => {\r\n      // 1. Search products by name, sku, or alias\r\n      const { data: products } = await supabase\r\n        .from('products')\r\n        .select('id')\r\n        .or([\r\n          `name.ilike.%${searchQuery}%`,\r\n          `sku.ilike.%${searchQuery}%`,\r\n          `alias.ilike.%${searchQuery}%`\r\n        ].join(','));\r\n      const productIds = (products || []).map(p => p.id);\r\n\r\n      // 2. Find printers related to those products\r\n      let printerIdsFromProducts: string[] = [];\r\n      if (productIds.length > 0) {\r\n        const { data: productPrinters } = await supabase\r\n          .from('product_printers')\r\n          .select('printer_id')\r\n          .in('product_id', productIds);\r\n        printerIdsFromProducts = (productPrinters || []).map(pp => pp.printer_id);\r\n      }\r\n\r\n      // 3. Search printers directly (ensure partial/substring matching for name and model)\r\n      // REMOVED: direct .or() search on printers table for name/model/id/serial_number\r\n      // 4. Search printers directly (only name and model, ilike, case-insensitive)\r\n      // REMOVED: direct .or() search on printers table for name/model\r\n      const printerOrClause = [\r\n        `name.ilike.%${searchQuery}%`,\r\n        `model.ilike.%${searchQuery}%`\r\n      ].join(',');\r\n      const { data: printers } = await supabase\r\n        .from('printers')\r\n        .select('id')\r\n        .or(printerOrClause);\r\n      const printerIdsFromSearch = (printers || []).map(p => p.id);\r\n      console.log('Printer search query:', searchQuery, 'Printer IDs found:', printerIdsFromSearch);\r\n\r\n      // 5. Search departments by name\r\n      const { data: departments } = await supabase\r\n        .from('departments')\r\n        .select('id')\r\n        .ilike('name', `%${searchQuery}%`);\r\n      const departmentIds = (departments || []).map(d => d.id);\r\n\r\n      // 6. Find locations for those departments\r\n      let locationIdsFromDepartments: string[] = [];\r\n      if (departmentIds.length > 0) {\r\n        const { data: deptLocations } = await supabase\r\n          .from('departments_location')\r\n          .select('id')\r\n          .in('department_id', departmentIds);\r\n        locationIdsFromDepartments = (deptLocations || []).map(l => l.id);\r\n      }\r\n\r\n      // 7. Search locations by name\r\n      const { data: locations } = await supabase\r\n        .from('departments_location')\r\n        .select('id')\r\n        .ilike('name', `%${searchQuery}%`);\r\n      const locationIdsFromName = (locations || []).map(l => l.id);\r\n\r\n      // 8. Consolidate all location IDs\r\n      const allLocationIds = Array.from(new Set([\r\n        ...locationIdsFromDepartments,\r\n        ...locationIdsFromName\r\n      ]));\r\n\r\n      // 9. Consolidate all printer IDs\r\n      const allPrinterIds = Array.from(new Set([\r\n        ...printerIdsFromProducts,\r\n        ...printerIdsFromSearch\r\n      ]));\r\n\r\n      // 10. Query printer_assignments with correct location and printer matching, and assignment serial number search\r\n      const assignmentOrClauses = [];\r\n      if (allPrinterIds.length) assignmentOrClauses.push(`printer_id.in.(${allPrinterIds.join(',')})`);\r\n      if (allLocationIds.length) assignmentOrClauses.push(`department_location_id.in.(${allLocationIds.join(',')})`);\r\n      assignmentOrClauses.push(`serial_number.ilike.%${searchQuery}%`);\r\n      const orClause = assignmentOrClauses.length > 1 ? assignmentOrClauses.join(',') : assignmentOrClauses[0];\r\n      console.log('Printer assignment search .or() clause:', orClause);\r\n      const { data: assignments } = await supabase\r\n        .from('printer_assignments')\r\n        .select(`\r\n          *,\r\n          printer:printers(*),\r\n          location:departments_location(*, department:departments(*))\r\n        `)\r\n        .or(orClause)\r\n        .eq('status', 'active')\r\n        .eq('client_id', clientId);\r\n\r\n      // 11. Aggregate results as before\r\n      const results = (assignments || []).map(a => ({\r\n        ...a.printer,\r\n        printer_id: a.printer?.id,\r\n        serial_number: a.serial_number,\r\n        status: a.status,\r\n        printer: a.printer,\r\n        assignment_id: a.id,\r\n        department_id: a.location?.department?.id,\r\n        department_name: a.location?.department?.name,\r\n        location_id: a.location?.id,\r\n        location_name: a.location?.name,\r\n        assignment_status: a.status,\r\n        assignment_notes: a.notes,\r\n        compatibleProducts: [],\r\n        printer_assignments: [\r\n          {\r\n            id: a.id,\r\n            status: a.status,\r\n          },\r\n        ],\r\n      }));\r\n\r\n      if (!cancelled) {\r\n        onFilteredDataChange?.(results);\r\n      }\r\n    })();\r\n    return () => { cancelled = true; };\r\n  }, [searchQuery, onFilteredDataChange]);\r\n\r\n  const handleProductSelect = (product: Product) => {\r\n    setSelectedProduct(product);\r\n    setShowProductDetails(true);\r\n  };\r\n\r\n  const handleCloseProductDetails = () => {\r\n    setShowProductDetails(false);\r\n    setSelectedProduct(null);\r\n  };\r\n\r\n  const handlePrinterSelected = (printerId: string, printerName: string) => {\r\n    setSelectedPrinter({ id: printerId, name: printerName });\r\n    setShowPrinterSelection(false);\r\n    setShowAssignToClient(true);\r\n  };\r\n\r\n  const handleAssignmentComplete = () => {\r\n    setShowAssignToClient(false);\r\n    setSelectedPrinter(null);\r\n  };\r\n\r\n  const handleAssignPrinter = () => {\r\n    setShowPrinterSelection(true);\r\n  };\r\n\r\n  const handleAddPrinter = () => {\r\n    setShowAddPrinter(true);\r\n  };\r\n\r\n  const handleAddCompanyPrinter = () => {\r\n    setShowAddCompanyPrinter(true);\r\n  };\r\n\r\n  // Department navigation handler\r\n  const handleDepartmentSelect = (departmentId: string) => {\r\n    if (activeTab === \"products\") {\r\n      setActiveTab(\"departments\");\r\n      setPendingDepartmentScroll(departmentId);\r\n    } else {\r\n      const element = document.getElementById(`department-${departmentId}`);\r\n      if (element) {\r\n        element.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Effect to scroll after switching to departments tab\r\n  useEffect(() => {\r\n    if (activeTab === \"departments\" && pendingDepartmentScroll) {\r\n      const element = document.getElementById(`department-${pendingDepartmentScroll}`);\r\n      if (element) {\r\n        element.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n        setPendingDepartmentScroll(null);\r\n      }\r\n    }\r\n  }, [activeTab, pendingDepartmentScroll]);\r\n\r\n  // Enhanced context-aware navigation button logic\r\n  const isSearchActive = searchQuery.trim().length > 0;\r\n  const shouldShowBackButton = isSearchFieldActive || isSearchActive;\r\n\r\n  // Reset hasClearedSearch if searchQuery changes\r\n  useEffect(() => {\r\n    if (searchQuery.trim().length > 0) {\r\n      setHasClearedSearch(false);\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  // Handle search field focus/blur to track active state\r\n  const handleSearchFieldFocus = () => {\r\n    setIsSearchFieldActive(true);\r\n  };\r\n\r\n  const handleSearchFieldBlur = () => {\r\n    // Delay to allow for clicks on department items\r\n    setTimeout(() => {\r\n      if (!searchQuery.trim()) {\r\n        setIsSearchFieldActive(false);\r\n      }\r\n    }, 200);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"fixed bottom-0 left-0 w-full z-50 bg-white/95 backdrop-blur-lg border-t border-gray-200 shadow-2xl transition-all\">\r\n        <div className=\"flex items-center px-2 py-2 min-h-[60px]\">\r\n          {/* Left section - Back button */}\r\n          <div className=\"flex-shrink-0 w-12 flex justify-center\">\r\n            <button\r\n              type=\"button\"\r\n              aria-label=\"Back\"\r\n              className=\"h-12 w-12 rounded-lg flex items-center justify-center text-gray-500 hover:text-gray-700 hover:bg-gray-50 transition-all duration-200\"\r\n              onClick={() => navigate('/')}\r\n            >\r\n              <ArrowLeft className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Center section - Search and Tabs - Dynamically adjust based on right section */}\r\n          <div className={`flex-1 flex items-center justify-center min-w-0 px-2 ${\r\n            (userProfile?.role === 'admin' || userProfile?.role === 'client') ? 'pr-0' : 'pr-12'\r\n          }`}>\r\n            <div className=\"flex items-center gap-2 w-full max-w-full\">\r\n              <div className=\"flex-1 min-w-0\">\r\n                <EnhancedSearchInput\r\n                  searchQuery={searchQuery}\r\n                  onSearchChange={setSearchQuery}\r\n                  placeholder=\"Search printers, models...\"\r\n                  departments={departments}\r\n                  onDepartmentSelect={handleDepartmentSelect}\r\n                  onFocus={handleSearchFieldFocus}\r\n                  onBlur={handleSearchFieldBlur}\r\n                />\r\n              </div>\r\n              {/* Tab buttons */}\r\n              <div className=\"flex gap-1 flex-shrink-0\">\r\n                {[\r\n                  { key: 'departments', label: 'Printers', icon: Printer },\r\n                  { key: 'products', label: 'Products', icon: ShoppingCart },\r\n                ].map(({ key, label, icon: Icon }) => {\r\n                  const isActive = activeTab === key;\r\n                  return (\r\n                    <button\r\n                      key={key}\r\n                      type=\"button\"\r\n                      onClick={() => setActiveTab(key as ClientDashboardSearchProps['activeTab'])}\r\n                      className={`flex items-center justify-center px-3 py-2 min-w-[60px] rounded-lg transition-all duration-200\r\n                        ${isActive ? 'bg-blue-600 text-white shadow-md' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}\r\n                      `}\r\n                      aria-pressed={isActive}\r\n                      aria-label={label}\r\n                    >\r\n                      <Icon className=\"h-4 w-4\" />\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Right section - Only render if needed, no fixed width */}\r\n          {(userProfile?.role === 'admin' || userProfile?.role === 'client') && (\r\n            <div className=\"flex-shrink-0 flex justify-center ml-2\">\r\n              <AddButtonNavigation\r\n                onAssignPrinter={handleAssignPrinter}\r\n                onAddPrinter={handleAddPrinter}\r\n                onAddToInventory={() => {}}\r\n                onAddCompanyPrinter={handleAddCompanyPrinter}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </nav>\r\n      {/* Product Details Modal */}\r\n      {showProductDetails && selectedProduct && (\r\n        <ProductDetailsModal\r\n          isOpen={showProductDetails}\r\n          onClose={handleCloseProductDetails}\r\n          product={selectedProduct} \r\n        />\r\n      )}\r\n      {/* AddPrinterModal */}\r\n      {showAddPrinter && (\r\n        <AddPrinterModal \r\n          isOpen={showAddPrinter} \r\n          onClose={() => setShowAddPrinter(false)} \r\n          onPrinterAdded={() => {}} \r\n        />\r\n      )}\r\n      {/* Printer Selection Modal */}\r\n      {showPrinterSelection && (\r\n        <PrinterSelectionModal\r\n          isOpen={showPrinterSelection}\r\n          onClose={() => setShowPrinterSelection(false)}\r\n          onPrinterSelected={handlePrinterSelected}\r\n        />\r\n      )}\r\n\r\n      {/* Assign Printer to Client Modal */}\r\n      {showAssignToClient && selectedPrinter && (\r\n        <AssignPrinterToClientModal\r\n          isOpen={showAssignToClient}\r\n          onClose={() => setShowAssignToClient(false)}\r\n          printerId={selectedPrinter.id}\r\n          printerName={selectedPrinter.name}\r\n          onAssignmentCreated={handleAssignmentComplete}\r\n        />\r\n      )}\r\n      {/* Add Purchase Order Modal */}\r\n      {showAddPurchase && (\r\n        <AddPurchaseModal\r\n          isOpen={showAddPurchase}\r\n          onClose={() => setShowAddPurchase(false)}\r\n        />\r\n      )}\r\n      {/* Add Company Printer Modal */}\r\n      {showAddCompanyPrinter && (\r\n        <AddCompanyPrinterModal\r\n          isOpen={showAddCompanyPrinter}\r\n          onClose={() => setShowAddCompanyPrinter(false)}\r\n          onPrinterAdded={() => setShowAddCompanyPrinter(false)}\r\n          clientId={clientId}\r\n        />\r\n      )}\r\n\r\n      {/* Placeholder Modal for Back Button */}\r\n      <Dialog open={showPlaceholderModal} onOpenChange={setShowPlaceholderModal}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>Menu</DialogTitle>\r\n          </DialogHeader>\r\n          <div className=\"py-4 text-center text-gray-600 flex flex-col gap-4\">\r\n            <Button\r\n              variant=\"outline\"\r\n              className=\"w-full\"\r\n              onClick={() => {\r\n                // Placeholder for settings\r\n                setShowPlaceholderModal(false);\r\n                // Optionally, show a toast or do nothing\r\n              }}\r\n            >\r\n              Settings\r\n            </Button>\r\n            <Button\r\n              variant=\"destructive\"\r\n              className=\"w-full\"\r\n              onClick={async () => {\r\n                await supabase.auth.signOut();\r\n                window.location.href = \"/auth\";\r\n              }}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nexport const useRoleBasedNavigation = () => {\r\n  const { user, userProfile, signOut } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [showClientSettingsModal, setShowClientSettingsModal] = useState(false);\r\n  const [showRestrictedModal, setShowRestrictedModal] = useState(false);\r\n\r\n  const userRole = userProfile?.role;\r\n\r\n  const handleBackButtonClick = () => {\r\n    console.log('🔄 Role-based back button clicked, user role:', userRole);\r\n    \r\n    switch (userRole) {\r\n      case 'admin':\r\n      case 'sales_admin':\r\n        // Admin users get normal back button behavior\r\n        navigate(-1);\r\n        break;\r\n      case 'client':\r\n        // Client users get modal instead of navigation\r\n        setShowClientSettingsModal(true);\r\n        break;\r\n      default:\r\n        // User or unknown role gets restricted access modal\r\n        setShowRestrictedModal(true);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleClientSettings = () => {\r\n    console.log('⚙️ Client settings clicked');\r\n    setShowClientSettingsModal(false);\r\n    // Settings logic would go here\r\n  };\r\n\r\n  const handleClientLogout = async () => {\r\n    console.log('🚪 Client logout clicked');\r\n    setShowClientSettingsModal(false);\r\n    await signOut();\r\n    navigate('/auth');\r\n  };\r\n\r\n  const handleRestrictedModalClose = () => {\r\n    setShowRestrictedModal(false);\r\n  };\r\n\r\n  return {\r\n    userRole,\r\n    handleBackButtonClick,\r\n    showClientSettingsModal,\r\n    setShowClientSettingsModal,\r\n    showRestrictedModal,\r\n    setShowRestrictedModal,\r\n    handleClientSettings,\r\n    handleClientLogout,\r\n    handleRestrictedModalClose,\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport { Loader2, Users, Building, Printer, Package, ArrowLeft, Settings, Edit, FileText, KeyRound, Wrench, ClipboardList, AlertTriangle, CheckCircle, MoreHorizontal, LifeBuoy, ShoppingCart, Monitor, Trash2 } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { useIsMobile } from '@/hooks/use-mobile';\r\nimport AdminDashboardClientDepartments from '@/components/admin-dashboard/AdminDashboardClientDepartments';\r\nimport ClientPrinters from '@/components/admin-dashboard/ClientPrinters';\r\nimport AdminDashboardClientProducts from '@/components/admin-dashboard/AdminDashboardClientProducts';\r\nimport EditClientModal from '@/components/EditClientModal';\r\nimport TopMobileHeader from '@/includes/TopMobileHeader';\r\nimport ErrorBoundary from '@/components/common/ErrorBoundary';\r\nimport { useClientDetail } from '@/components/admin-dashboard/hooks/useClientDetail';\r\nimport { LOADING_MESSAGES, ERROR_MESSAGES } from '@/constants/adminDashboard';\r\nimport { useDepartments } from '@/components/admin-dashboard/hooks/useDepartments';\r\nimport { getClientCounts } from '@/utils/priceAnalysis';\r\nimport { cn } from '@/lib/utils';\r\nimport { Card, CardContent, CardTitle, CardHeader } from '@/components/ui/card';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { assetService } from '@/services/assetService';\r\nimport { clientService } from '@/services/clientService';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport AssignPrinterToClientModal from '@/PrinterDashboard/AssignPrinterToClientModal';\r\nimport TransferPrinterModal from '@/components/admin-dashboard/components/TransferPrinterModal';\r\nimport PriceCheckModal from '@/components/admin-dashboard/components/PriceCheckModal';\r\nimport { ProductPrinter } from '@/types/database';\r\nimport { ServicePrinters } from './ServicePrinters';\r\nimport { ClientSupport } from './ClientSupport';\r\nimport { ClientDashboardSearch } from './ClientDashboardSearch';\r\nimport { useEffect } from 'react';\r\nimport { PullToRefresh } from '@/components/ui/PullToRefresh';\r\nimport { useRefreshFunctions } from '@/hooks/useRefreshFunctions';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { useRoleBasedNavigation } from '@/hooks/useRoleBasedNavigation';\r\nimport { RestrictedAccessModal } from '@/components/RestrictedAccessModal';\r\nimport { CustomLoading } from \"@/components/ui/CustomLoading\";\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\n// Define a discriminated union type for activities\r\ntype ActivityItem =\r\n  | {\r\n      id: string;\r\n      type: 'history';\r\n      timestamp: string;\r\n      description: string;\r\n      printerName: string;\r\n      actionType: string;\r\n      performedBy: string;\r\n    }\r\n  | {\r\n      id: string;\r\n      type: 'maintenance';\r\n      timestamp: string;\r\n      description: string;\r\n      printerName: string;\r\n      maintenanceType: string;\r\n      performedBy: string;\r\n    };\r\n\r\nconst AdminClientDetail: React.FC = () => {\r\n  const isMobile = useIsMobile();\r\n  const { clientId } = useParams<{ clientId: string }>();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n\r\n  const {\r\n    client,\r\n    isLoading: clientLoading,\r\n    error: clientError,\r\n    activeTab,\r\n    setActiveTab,\r\n    isDepartmentDetailsView,\r\n    setIsDepartmentDetailsView,\r\n    showEditModal,\r\n    setShowEditModal,\r\n    handleClientUpdated,\r\n  } = useClientDetail({ clientId: clientId! });\r\n\r\n  const {\r\n    userRole,\r\n    handleBackButtonClick,\r\n    showClientSettingsModal,\r\n    setShowClientSettingsModal,\r\n    showRestrictedModal,\r\n    setShowRestrictedModal,\r\n    handleClientSettings,\r\n    handleClientLogout,\r\n    handleRestrictedModalClose,\r\n  } = useRoleBasedNavigation();\r\n\r\n  // Strongly type activeTab and setActiveTab for ClientDashboardSearch\r\n  type TabKey = 'departments' | 'products' | 'printers' | 'available-printers' | 'support';\r\n  const typedActiveTab = activeTab as TabKey;\r\n  const typedSetActiveTab = setActiveTab as (tab: TabKey) => void;\r\n\r\n  const { data: departments = [], isLoading: departmentsLoading } = useDepartments(clientId!);\r\n  const { departmentCount, locationCount, printerCount } = getClientCounts(departments);\r\n\r\n  // Fetch printer assignments for this client\r\n  const { data: assignments = [], isLoading: assignmentsLoading } = useQuery({\r\n    queryKey: ['assignments', clientId],\r\n    queryFn: () => assetService.getAssignmentsByClient(clientId!),\r\n    enabled: !!clientId,\r\n  });\r\n\r\n  // Active assignments\r\n  const activeAssignments = assignments.filter((a: any) => a.status === 'active');\r\n  // Inactive/Repair assignments\r\n  const inactiveAssignments = assignments.filter((a: any) => a.status === 'inactive' || a.status === 'repair');\r\n  // Rental assignments\r\n  const rentalAssignments = assignments.filter((a: any) => a.usage_type === 'rental');\r\n\r\n  // Maintenance events (sum for all assigned printers)\r\n  const { data: maintenanceCounts = 0, isLoading: maintenanceLoading } = useQuery({\r\n    queryKey: ['maintenance', clientId, assignments],\r\n    queryFn: async () => {\r\n      if (!assignments.length) return 0;\r\n      let total = 0;\r\n      for (const a of assignments) {\r\n        const history = await assetService.getMaintenanceHistory(a.printer_id);\r\n        total += history.length;\r\n      }\r\n      return total;\r\n    },\r\n    enabled: !!clientId && assignments.length > 0,\r\n  });\r\n\r\n  // Recent documents (ClientDocument)\r\n  const { data: documentCount = 0, isLoading: documentsLoading } = useQuery({\r\n    queryKey: ['client-documents', clientId],\r\n    queryFn: async () => {\r\n      const { data, error } = await supabase\r\n        .from('client_documents')\r\n        .select('id')\r\n        .eq('client_id', clientId!);\r\n      if (error) return 0;\r\n      return data.length;\r\n    },\r\n    enabled: !!clientId,\r\n  });\r\n\r\n  // Product summary: count unique products compatible with all assigned printers\r\n  const { data: productCount = 0, isLoading: productsLoading } = useQuery({\r\n    queryKey: ['client-compatible-products', clientId, assignments],\r\n    queryFn: async () => {\r\n      if (!assignments.length) return 0;\r\n      const productIds = new Set<string>();\r\n      for (const assignment of assignments) {\r\n        // Get compatible products for this printer\r\n        const { data, error } = await supabase\r\n          .from('product_printers')\r\n          .select('product_id')\r\n          .eq('printer_id', assignment.printer_id);\r\n        if (error) continue;\r\n        (data as ProductPrinter[]).forEach(pp => productIds.add(pp.product_id));\r\n      }\r\n      return productIds.size;\r\n    },\r\n    enabled: !!clientId && assignments.length > 0,\r\n  });\r\n\r\n  // Quick Actions modal state\r\n  const [showAssignPrinter, setShowAssignPrinter] = useState(false);\r\n  const [showMaintenance, setShowMaintenance] = useState(false);\r\n  const [showTransfer, setShowTransfer] = useState(false);\r\n  const [showPriceCheck, setShowPriceCheck] = useState(false);\r\n  // For maintenance/transfer, select the first assignment by default\r\n  const firstAssignment = assignments[0] || null;\r\n\r\n  // Activity Feed Tabs state\r\n  const [activityTab, setActivityTab] = useState('transfer');\r\n\r\n  // Fetch activity data for tabs (reuse RecentPrinterActivities logic)\r\n  const { data: activities = [], isLoading: activitiesLoading } = useQuery<ActivityItem[]>({\r\n    queryKey: ['recent-printer-activities', clientId],\r\n    queryFn: async () => {\r\n      const { data: printerHistory } = await supabase\r\n        .from('printer_history')\r\n        .select(`id, action_type, description, performed_by, timestamp, printer:printers (name, printer_assignments!inner (client_id))`)\r\n        .eq('printer.printer_assignments.client_id', clientId)\r\n        .order('timestamp', { ascending: false })\r\n        .limit(30);\r\n      const { data: maintenanceHistory } = await supabase\r\n        .from('maintenance_history')\r\n        .select(`id, maintenance_type, action_description, performed_by, performed_at, printer:printers (name, printer_assignments!inner (client_id))`)\r\n        .eq('printer.printer_assignments.client_id', clientId)\r\n        .order('performed_at', { ascending: false })\r\n        .limit(30);\r\n      const allActivities = [\r\n        ...(printerHistory || []).map(item => ({\r\n          id: item.id,\r\n          type: 'history' as const,\r\n          timestamp: item.timestamp,\r\n          description: item.description,\r\n          printerName: item.printer?.name || 'Unknown Printer',\r\n          actionType: item.action_type,\r\n          performedBy: item.performed_by,\r\n        })),\r\n        ...(maintenanceHistory || []).map(item => ({\r\n          id: item.id,\r\n          type: 'maintenance' as const,\r\n          timestamp: item.performed_at,\r\n          description: item.action_description,\r\n          printerName: item.printer?.name || 'Unknown Printer',\r\n          maintenanceType: item.maintenance_type,\r\n          performedBy: item.performed_by,\r\n        }))\r\n      ];\r\n      return allActivities.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\r\n    },\r\n    enabled: !!clientId,\r\n  });\r\n\r\n  // Fetch available printers for badge (from printer_visibility)\r\n  const { data: availablePrintersCount = 0 } = useQuery({\r\n    queryKey: ['available-printers-count', clientId],\r\n    queryFn: async () => {\r\n      if (!clientId) return 0;\r\n      const { count, error } = await supabase\r\n        .from('printer_visibility')\r\n        .select('printer_id', { count: 'exact' })\r\n        .eq('client_id', clientId);\r\n      if (error) return 0;\r\n      return count ?? 0;\r\n    },\r\n    enabled: !!clientId,\r\n  });\r\n\r\n  console.log('🔢 availablePrintersCount:', availablePrintersCount);\r\n\r\n  // State for showing ServicePrinters overlay/modal\r\n  const [showServicePrinters, setShowServicePrinters] = useState(false);\r\n  // State for filtered search results\r\n  const [filteredPrinters, setFilteredPrinters] = useState<any[]>([]);\r\n  const [showPlaceholderModal, setShowPlaceholderModal] = useState(false);\r\n  // Add missing state for delete logic\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [showDeleteWarning, setShowDeleteWarning] = useState(false);\r\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n  const [deleteErrorMsg, setDeleteErrorMsg] = useState('');\r\n  const { toast } = useToast();\r\n\r\n  // Get refresh functions\r\n  const { refreshClientData } = useRefreshFunctions();\r\n\r\n  // Create refresh function for this specific client\r\n  const handleRefresh = async () => {\r\n    if (clientId) {\r\n      await refreshClientData(clientId);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleRefreshEvent = () => {\r\n      handleRefresh();\r\n    };\r\n    window.addEventListener('refresh-printer-data', handleRefreshEvent);\r\n    return () => {\r\n      window.removeEventListener('refresh-printer-data', handleRefreshEvent);\r\n    };\r\n  }, [clientId]);\r\n\r\n  // Delete client handler\r\n  const handleDeleteClient = async () => {\r\n    if (!clientId) return;\r\n    setDeleting(true);\r\n\r\n    // Check for active departments\r\n    const { data: departmentsData, error: departmentsError } = await supabase\r\n      .from('departments')\r\n      .select('id')\r\n      .eq('client_id', clientId);\r\n\r\n    if (departmentsError) {\r\n      setDeleting(false);\r\n      setDeleteErrorMsg('Error checking departments.');\r\n      setShowDeleteWarning(true);\r\n      return;\r\n    }\r\n\r\n    if (departmentsData && departmentsData.length > 0) {\r\n      setDeleting(false);\r\n      setDeleteErrorMsg(\"Client with active departments can't be deleted. Please delete all departments first.\");\r\n      setShowDeleteWarning(true);\r\n      return;\r\n    }\r\n\r\n    // No departments, show confirmation dialog\r\n    setDeleting(false);\r\n    setShowDeleteConfirm(true);\r\n  };\r\n\r\n  const handleConfirmDelete = async () => {\r\n    setDeleting(true);\r\n    const { error: deleteError } = await supabase\r\n      .from('clients')\r\n      .delete()\r\n      .eq('id', clientId);\r\n\r\n    setDeleting(false);\r\n    setShowDeleteConfirm(false);\r\n\r\n    if (deleteError) {\r\n      setDeleteErrorMsg('Error deleting client.');\r\n      setShowDeleteWarning(true);\r\n      return;\r\n    }\r\n\r\n    toast({\r\n      title: 'Client has been fully removed from the database.',\r\n      status: 'success'\r\n    });\r\n\r\n    navigate('/'); // Redirect to home or Dashboard.tsx\r\n  };\r\n\r\n  if (clientLoading) {\r\n    return (\r\n      <CustomLoading message=\"Loading client details\" fullscreen />\r\n    );\r\n  }\r\n\r\n  if (clientError || !client) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-gray-600 text-sm mb-4\">{ERROR_MESSAGES.CLIENT_NOT_FOUND}</p>\r\n          <Button onClick={() => navigate('/admin-dashboard')} size=\"sm\">\r\n            Back to Dashboard\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const clientTabs = [\r\n    { id: 'departments', label: 'Departments', icon: Users },\r\n    { id: 'printers', label: 'Printers', icon: Printer },\r\n    { id: 'products', label: 'Products', icon: ShoppingCart },\r\n    { id: 'available-printers', label: 'Available Printers', icon: Monitor },\r\n    { id: 'support', label: 'Support', icon: LifeBuoy },\r\n  ];\r\n\r\n  const renderTabContent = () => {\r\n    switch (activeTab) {\r\n      case 'departments':\r\n        return (\r\n          <div className=\"space-y-3\">\r\n            <AdminDashboardClientDepartments \r\n              clientId={clientId!} \r\n              onDepartmentDetailsView={setIsDepartmentDetailsView}\r\n              filteredPrinters={filteredPrinters}\r\n            />\r\n          </div>\r\n        );\r\n      case 'printers':\r\n        return (\r\n          <div className=\"space-y-3\">\r\n            <ClientPrinters clientId={clientId!} />\r\n          </div>\r\n        );\r\n      case 'products':\r\n        return <AdminDashboardClientProducts clientId={clientId!} />;\r\n      case 'support':\r\n        return <ClientSupport />;\r\n      case 'available-printers':\r\n        return <ServicePrinters />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <div \r\n        className=\"min-h-screen flex flex-col bg-gradient-to-br from-blue-50 to-indigo-50\"\r\n        style={{ \r\n          paddingTop: 'env(safe-area-inset-top)', \r\n          paddingBottom: 'env(safe-area-inset-bottom)' \r\n        }}\r\n      >\r\n        {/* Mobile-first sticky header */}\r\n        <div className=\"sticky top-0 z-20 bg-blue-100/95 backdrop-blur-sm border-b border-blue-200 px-4 py-3\">\r\n          <div className=\"flex items-center gap-3 justify-between\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center flex-shrink-0\">\r\n                <Users className=\"w-4 h-4 text-white\" />\r\n              </div>\r\n              <div className=\"min-w-0 flex-1\">\r\n                <h1 className=\"text-base font-semibold text-gray-900 truncate\">Client Dashboard</h1>\r\n                {client && (\r\n                  <div className=\"flex items-center gap-3 flex-wrap\">\r\n                    <p className=\"text-xs text-gray-600 truncate\">{client.name}</p>\r\n                    <div className=\"flex items-center gap-2 text-xs text-gray-500\">\r\n                      <span>Total Printers ({activeAssignments.length + inactiveAssignments.length})</span>\r\n                      <span>|</span>\r\n                      <span>Active ({activeAssignments.length})</span>\r\n                      <span>|</span>\r\n                      <span>Inactive ({inactiveAssignments.length})</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Right side - Settings and Delete buttons */}\r\n            <div className=\"flex items-center gap-2\">\r\n              {(userRole === 'admin' || userRole === 'superadmin') && (\r\n                <>\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"icon\"\r\n                    onClick={() => navigate(`/clients/${clientId}/manage`)}\r\n                    className=\"ml-auto\"\r\n                  >\r\n                    <Settings className=\"h-5 w-5\" />\r\n                  </Button>\r\n                  {userRole === 'superadmin' && (\r\n                    <Button\r\n                      variant=\"outline\"\r\n                      size=\"icon\"\r\n                      className=\"text-red-600 border-red-300\"\r\n                      onClick={handleDeleteClient}\r\n                      disabled={deleting}\r\n                      title=\"Delete Client\"\r\n                    >\r\n                      <Trash2 className=\"h-5 w-5\" />\r\n                    </Button>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Error Dialog */}\r\n        <Dialog open={showDeleteWarning} onOpenChange={setShowDeleteWarning}>\r\n          <DialogContent>\r\n            <DialogHeader>\r\n              <DialogTitle>Cannot Delete Client</DialogTitle>\r\n            </DialogHeader>\r\n            <div className=\"py-2 text-center text-gray-700\">\r\n              {deleteErrorMsg}\r\n            </div>\r\n            <Button variant=\"default\" onClick={() => setShowDeleteWarning(false)}>\r\n              OK\r\n            </Button>\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        {/* Confirmation Dialog */}\r\n        <Dialog open={showDeleteConfirm} onOpenChange={setShowDeleteConfirm}>\r\n          <DialogContent>\r\n            <DialogHeader>\r\n              <DialogTitle>Confirm Client Deletion</DialogTitle>\r\n            </DialogHeader>\r\n            <div className=\"py-2 text-center text-gray-700\">\r\n              Deleting this client will permanently remove its record from the database. Proceed with caution.\r\n            </div>\r\n            <div className=\"flex justify-center gap-3 mt-4\">\r\n              <Button variant=\"outline\" onClick={() => setShowDeleteConfirm(false)}>\r\n                Cancel\r\n              </Button>\r\n              <Button variant=\"destructive\" onClick={handleConfirmDelete} disabled={deleting}>\r\n                {deleting ? <Loader2 className=\"animate-spin h-4 w-4 mr-2\" /> : null}\r\n                Confirm Delete\r\n              </Button>\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        {/* Main content with mobile optimization */}\r\n        <div className=\"flex-1 overflow-y-auto px-1 py-3 space-y-4\">\r\n          <PullToRefresh onRefresh={handleRefresh}>\r\n            {renderTabContent()}\r\n          </PullToRefresh>\r\n        </div>\r\n\r\n        {/* Mobile-first bottom navigation */}\r\n        {!isDepartmentDetailsView && (\r\n          <footer className=\"sticky bottom-0 z-30 w-full bg-white/95 backdrop-blur-sm border-t border-gray-200\">\r\n            <ClientDashboardSearch \r\n              activeTab={typedActiveTab}\r\n              setActiveTab={typedSetActiveTab}\r\n              onFilteredDataChange={setFilteredPrinters}\r\n              client={client}\r\n              onClientUpdated={handleClientUpdated}\r\n            />\r\n          </footer>\r\n        )}\r\n\r\n        {/* Mobile-optimized ServicePrinters Modal */}\r\n        {showServicePrinters && (\r\n          <div className=\"fixed inset-0 z-50 flex items-end justify-center bg-black/40 backdrop-blur-sm\">\r\n            <div className=\"relative w-full max-h-[85vh] rounded-t-2xl shadow-2xl bg-white border-t border-gray-200 animate-in slide-in-from-bottom-4 duration-300\">\r\n              {/* Compact header */}\r\n              <div className=\"flex items-center justify-between px-4 py-3 bg-gradient-to-r from-blue-500 to-purple-500 rounded-t-2xl\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <div className=\"w-8 h-8 bg-white/20 rounded-full flex items-center justify-center\">\r\n                    <Monitor className=\"w-4 h-4 text-white\" />\r\n                  </div>\r\n                  <div>\r\n                    <h2 className=\"text-base font-bold text-white\">Available Printers</h2>\r\n                    <p className=\"text-xs text-white/80\">Special deals for you!</p>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  className=\"text-white hover:text-gray-200 p-2 rounded-full hover:bg-white/10 transition-colors touch-target\"\r\n                  onClick={() => setShowServicePrinters(false)}\r\n                  aria-label=\"Close\"\r\n                >\r\n                  ✕\r\n                </button>\r\n              </div>\r\n              \r\n              {/* Content */}\r\n              <div className=\"p-4 overflow-y-auto max-h-[calc(85vh-80px)]\">\r\n                <ServicePrinters />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Mobile-optimized role-based modals */}\r\n        {showClientSettingsModal && (\r\n          <Dialog open={showClientSettingsModal} onOpenChange={setShowClientSettingsModal}>\r\n            <DialogContent className=\"w-[95vw] max-w-md rounded-xl\">\r\n              <DialogHeader>\r\n                <DialogTitle className=\"text-base\">Client Menu</DialogTitle>\r\n              </DialogHeader>\r\n              <div className=\"space-y-3 pt-2\">\r\n                <Button \r\n                  variant=\"outline\" \r\n                  className=\"w-full h-12 justify-start text-sm touch-target\"\r\n                  onClick={handleClientSettings}\r\n                >\r\n                  <Settings className=\"mr-3 h-4 w-4\" />\r\n                  Settings\r\n                </Button>\r\n                <Button \r\n                  variant=\"outline\" \r\n                  className=\"w-full h-12 justify-start text-sm touch-target\"\r\n                  onClick={handleClientLogout}\r\n                >\r\n                  <KeyRound className=\"mr-3 h-4 w-4\" />\r\n                  Logout\r\n                </Button>\r\n              </div>\r\n            </DialogContent>\r\n          </Dialog>\r\n        )}\r\n\r\n        <RestrictedAccessModal \r\n          open={showRestrictedModal} \r\n          onOpenChange={handleRestrictedModalClose}\r\n        />\r\n\r\n        {/* Other modals with mobile optimization */}\r\n        <EditClientModal\r\n          isOpen={showEditModal}\r\n          onClose={() => setShowEditModal(false)}\r\n          client={client}\r\n          onClientUpdated={handleClientUpdated}\r\n        />\r\n        \r\n        <Dialog open={showPlaceholderModal} onOpenChange={setShowPlaceholderModal}>\r\n          <DialogContent className=\"w-[95vw] max-w-md rounded-xl\">\r\n            <DialogHeader>\r\n              <DialogTitle className=\"text-base\">Navigation</DialogTitle>\r\n            </DialogHeader>\r\n            <div className=\"py-4 text-center text-gray-600 text-sm\">\r\n              This is a placeholder modal for navigation actions.\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default AdminClientDetail;\r\n"],"names":["CirclePause","createLucideIcon","Ellipsis","KeyRound","Move","Pencil","useDepartments","clientId","useQuery","departments","deptError","supabase","assignments","assignError","dept","departmentLocations","location","locationPrinters","assignment","_a","totalPrinterCount","sum","a","b","UnifiedDepartmentModal","isOpen","onClose","department","onDepartmentSaved","toast","useToast","isEdit","name","setName","useState","contactPerson","setContactPerson","description","setDescription","locations","setLocations","isLoading","setIsLoading","errors","setErrors","activeLocationEditIdx","setActiveLocationEditIdx","showDeleteConfirmIdx","setShowDeleteConfirmIdx","deletedLocationIds","setDeletedLocationIds","useEffect","validateForm","newErrors","loc","handleAddLocation","handleRemoveLocation","idx","prev","_","i","handleLocationChange","field","value","handleSubmit","e","deptId","updateError","newDept","locUpdateError","locInsertError","locId","error","errorMessage","jsx","Dialog","jsxs","DialogContent","DialogHeader","DialogTitle","Edit","Plus","Input","Textarea","Button","isLocationEditable","printersArray","hasPrinters","Trash2","AlertDialog","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","Fragment","printer","printerDisplayName","serialNumber","AlertDialogFooter","AlertDialogCancel","AlertDialogAction","DialogFooter","EditPrinterAssignmentModal","currentDepartmentName","currentLocationName","selectedLocationId","setSelectedLocationId","status","setStatus","showConfirmDialog","setShowConfirmDialog","locationOptions","targetLocationObj","targetDeptName","targetLocationName","React","handleTransferClick","handleConfirmTransfer","assetService","_b","Select","SelectTrigger","SelectValue","SelectContent","option","SelectItem","_c","AssignPrinterToLocationModal","departmentBaseName","onPrinterAssigned","initialDepartmentId","formData","setFormData","printerSearch","setPrinterSearch","showPrinterDropdown","setShowPrinterDropdown","availablePrinters","loadingPrinters","usePrinters","departmentsData","departmentsLoading","refetch","selectedDepartmentLocationId","setSelectedDepartmentLocationId","compatibleProductsMap","setCompatibleProductsMap","clientPricingMap","setClientPricingMap","loadingCompat","setLoadingCompat","departmentLocationOptions","filteredPrinters","term","fetchCompatAndPricing","printerId","products","productService","pricing","product","clientEntry","clientService","c","handleClose","getPrinterDisplayName","manufacturer","series","model","selectedDepartmentLocation","opt","departmentLocationDisplay","Printer","Label","compatProducts","clientPrice","ClientPrinterCard","onManage","departmentName","locationName","showUndeployedStatus","onDataRefresh","useAuth","showSerialDialog","setShowSerialDialog","serialInput","setSerialInput","showSerialConfirm","setShowSerialConfirm","isSerialUpdating","setIsSerialUpdating","serialError","setSerialError","getStatusColor","isInactive","isActive","_d","Card","CardContent","_e","Badge","Package","CheckCircle","PauseCircle","Building2","MapPin","CompatibleProducts","ArrowRightLeft","useRealTimeUpdates","options","queryKeys","showNotifications","queryClient","useQueryClient","invalidateQueries","useCallback","message","key","assignmentChannel","payload","printerChannel","productPrinterChannel","AdminDashboardClientDepartments","onDepartmentDetailsView","userProfile","showUnifiedModal","setShowUnifiedModal","selectedDepartment","setSelectedDepartment","selectedPrinterAssignment","setSelectedPrinterAssignment","assignPrinterDepartment","setAssignPrinterDepartment","assignPrinterLocation","setAssignPrinterLocation","showAssignPrinterModal","setShowAssignPrinterModal","showDeleteDeptDialog","setShowDeleteDeptDialog","deleteDeptBlocked","setDeleteDeptBlocked","deptToDelete","setDeptToDelete","selectedDepartmentName","setSelectedDepartmentName","selectedLocationName","setSelectedLocationName","isClientUser","undeployedPrinters","isLoadingUndeployed","refetchUndeployed","inactivePrinters","isLoadingInactive","refetchInactive","refreshData","handleRefreshEvent","handleRefresh","inactiveByDeptLoc","inactiveNoDept","deptLocObj","handleDepartmentSelect","departmentId","element","handleEditAssignment","handleEdit","findPrinterById","p","transformedDepartment","activePrinters","inactiveForLoc","mappedPrinters","inactive","active","handleDelete","confirmDeleteDepartment","handleModalClose","useMemo","acc","locAcc","grouped","CustomLoading","DropdownMenu","DropdownMenuTrigger","MoreHorizontal","DropdownMenuContent","DropdownMenuItem","mergedPrinters","isCheckBoxInput","isDateObject","isNullOrUndefined","isObjectType","isObject","getEventValue","event","getNodeParentName","isNameInFieldArray","names","isPlainObject","tempObject","prototypeCopy","isWeb","cloneObject","data","copy","isArray","compact","isUndefined","val","get","object","path","defaultValue","result","isBoolean","isKey","stringToPath","input","set","index","tempPath","length","lastIndex","newValue","objValue","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","HookFormContext","useFormContext","FormProvider","props","children","getProxyFormState","formState","control","localProxyFormState","isRoot","_key","isEmptyObject","shouldRenderFormState","formStateData","_proxyFormState","updateFormState","convertToArrayPayload","shouldSubscribeByName","signalName","exact","currentName","useSubscribe","_props","subscription","useFormState","methods","disabled","_mounted","_localProxyFormState","_name","isString","generateWatchOutput","_names","formValues","isGlobal","fieldName","useWatch","updateValue","useController","shouldUnregister","isArrayField","_registerProps","_shouldUnregisterField","updateMounted","elm","Controller","appendErrors","validateAllFieldCriteria","type","getValidationModes","mode","isWatched","isBlurEvent","watchName","iterateFieldsByAction","fields","action","fieldsNames","abortEarly","_f","currentField","updateFieldArrayRootError","fieldArrayErrors","isFileInput","isFunction","isHTMLElement","owner","isMessage","isRadioInput","isRegex","defaultResult","validResult","getCheckboxValue","values","defaultReturn","getRadioValue","previous","getValidateError","ref","getValueAndMessage","validationData","validateField","shouldUseNativeValidation","isFieldArray","refs","required","maxLength","minLength","min","max","pattern","validate","valueAsNumber","mount","inputValue","inputRef","setCustomValidity","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueNumber","valueDate","convertTimeToDate","time","isTime","isWeek","maxLengthOutput","minLengthOutput","patternValue","validateError","validationResult","baseGet","updatePath","isEmptyArray","obj","unset","paths","childObject","createSubject","_observers","observer","o","isPrimitive","deepEqual","object1","object2","keys1","keys2","val1","val2","isMultipleSelect","live","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","defaultValues","getFieldValueAs","valueAsDate","setValueAs","getFieldValue","getResolverOptions","_fields","criteriaMode","getRuleValue","rule","ASYNC_FUNCTION","hasPromiseValidation","fieldReference","validateFunction","hasValidation","schemaErrorLookup","foundError","skipValidation","isTouched","isSubmitted","reValidateMode","unsetEmptyArray","defaultOptions","createFormControl","_options","_formState","_defaultValues","_formValues","_state","delayErrorCallback","timer","_subjects","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","debounce","callback","wait","_updateValid","shouldUpdateValid","isValid","_executeSchema","executeBuiltInValidation","_updateIsValidating","isValidating","_updateFieldArray","method","args","shouldSetValues","shouldUpdateFieldsAndState","fieldValues","touchedFields","_getDirty","updateErrors","_setErrors","updateValidAndValue","shouldSkipSetValueAs","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","disabledField","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","updatedFormState","executeSchemaAndUpdateState","shouldOnlyCheckValid","context","isFieldArrayRoot","isPromiseFunction","fieldError","_removeUnmounted","unregister","getValues","_getWatch","_getFieldArray","optionRef","checkboxRef","radioRef","trigger","setValues","fieldKey","setValue","cloneValue","onChange","target","isFieldValueUpdated","getCurrentFieldValue","_updateIsFieldValueUpdated","shouldSkipValidation","watched","previousErrorLookupResult","errorLookupResult","_focusInput","fieldNames","getFieldState","clearErrors","inputName","setError","currentError","currentRef","restOfErrorTree","watch","_updateDisabledField","register","disabledIsDefined","fieldRef","radioOrCheckbox","_focusError","_disableForm","onValid","onInvalid","onValidError","resetField","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","isEmptyResetValues","fieldsToCheck","form","reset","useForm","_formControl","_values","isDirty","state","Form","FormFieldContext","React.createContext","FormField","useFormField","fieldContext","React.useContext","itemContext","FormItemContext","id","FormItem","React.forwardRef","className","React.useId","cn","FormLabel","formItemId","FormControl","formDescriptionId","formMessageId","Slot","FormDescription","FormMessage","body","util","assertIs","_arg","assertNever","_x","items","item","validKeys","k","filtered","keys","arr","checker","joinValues","array","separator","objectUtil","first","second","ZodParsedType","getParsedType","ZodIssueCode","quotelessJson","ZodError","issues","sub","subs","actualProto","_mapper","mapper","issue","fieldErrors","processError","curr","el","formErrors","errorMap","_ctx","overrideErrorMap","setErrorMap","map","getErrorMap","makeIssue","params","errorMaps","issueData","fullPath","fullIssue","maps","m","EMPTY_PATH","addIssueToContext","ctx","overrideMap","x","ParseStatus","results","arrayValue","s","INVALID","pairs","syncPairs","pair","finalObject","DIRTY","OK","isAborted","isAsync","__classPrivateFieldGet","receiver","kind","f","__classPrivateFieldSet","errorUtil","_ZodEnum_cache","_ZodNativeEnum_cache","ParseInputLazyPath","parent","handleResult","processCreateParams","invalid_type_error","required_error","iss","ZodType","def","maybeAsyncResult","check","getIssueProperties","refinementData","refinement","ZodEffects","ZodFirstPartyTypeKind","ZodOptional","ZodNullable","ZodArray","ZodPromise","ZodUnion","incoming","ZodIntersection","transform","defaultValueFunc","ZodDefault","ZodBranded","catchValueFunc","ZodCatch","This","ZodPipeline","ZodReadonly","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","nanoidRegex","durationRegex","emailRegex","_emojiRegex","emojiRegex","ipv4Regex","ipv6Regex","base64Regex","dateRegexSource","dateRegex","timeRegexSource","regex","timeRegex","datetimeRegex","opts","isValidIP","ip","version","ZodString","tooBig","tooSmall","validation","len","ch","floatSafeRemainder","step","valDecCount","stepDecCount","decCount","valInt","stepInt","ZodNumber","inclusive","ZodBigInt","ZodBoolean","ZodDate","minDate","maxDate","ZodSymbol","ZodUndefined","ZodNull","ZodAny","ZodUnknown","ZodNever","ZodVoid","schema","deepPartialify","ZodObject","newShape","fieldSchema","ZodTuple","shape","shapeKeys","extraKeys","keyValidator","unknownKeys","catchall","defaultError","augmentation","merging","mask","newField","createZodEnum","handleResults","unionErrors","childCtx","dirty","types","getDiscriminator","ZodLazy","ZodLiteral","ZodEnum","ZodNativeEnum","ZodDiscriminatedUnion","discriminator","discriminatorValue","optionsMap","discriminatorValues","mergeValues","aType","bType","bKeys","sharedKeys","newObj","sharedValue","newArray","itemA","itemB","handleParsed","parsedLeft","parsedRight","merged","left","right","itemIndex","rest","schemas","ZodRecord","keyType","valueType","third","ZodMap","finalMap","ZodSet","finalizeSet","elements","parsedSet","minSize","maxSize","size","ZodFunction","makeArgsIssue","makeReturnsIssue","returns","fn","me","parsedArgs","parsedReturns","returnType","func","getter","expectedValues","enumValues","newDef","nativeEnumValues","promisified","effect","checkCtx","arg","processed","executeRefinement","inner","base","preprocess","newCtx","ZodNaN","BRAND","inResult","freeze","custom","fatal","_fatal","p2","late","instanceOfType","cls","stringType","numberType","nanType","bigIntType","booleanType","dateType","symbolType","undefinedType","nullType","anyType","unknownType","neverType","voidType","arrayType","objectType","strictObjectType","unionType","discriminatedUnionType","intersectionType","tupleType","recordType","mapType","setType","functionType","lazyType","literalType","enumType","nativeEnumType","promiseType","effectsType","optionalType","nullableType","preprocessType","pipelineType","ostring","onumber","oboolean","coerce","NEVER","z","r","t","n","u","AddClientPriceDialog","open","onOpenChange","availableClients","onSave","initialClientId","initialPrice","productId","priceHistory","setPriceHistory","loadingHistory","setLoadingHistory","formSchema","zodResolver","fetchClientPriceHistory","clientHistory","formattedHistory","handleAddClientPrice","existingRelation","checkError","insertError","formatDate","dateString","Tabs","TabsList","TabsTrigger","Users","History","TabsContent","client","Save","entry","formatPHP","TransferPrinterModal","currentClientId","onTransferCompleted","onSelectAssignment","selectedAssignmentId","setSelectedAssignmentId","selectedAssignment","transferData","setTransferData","loading","setLoading","foundDept","foundLoc","handleTransfer","targetDept","d","targetLoc","l","historyError","departmentOptions","found","ArrowRight","colorClasses","ColorDot","color","colorClass","ClientPrinters","isMobile","useIsMobile","searchQuery","setSearchQuery","printerProducts","setPrinterProducts","showEditModal","setShowEditModal","showPriceModal","setShowPriceModal","selectedProduct","setSelectedProduct","expandedCard","setExpandedCard","showAssignModal","setShowAssignModal","showTransferModal","setShowTransferModal","showEditAssignmentModal","setShowEditAssignmentModal","setSelectedAssignment","printerAssignments","fetchProducts","productIds","clientPrices","productsWithPrices","cp","filteredAssignments","uniquePrintersMap","uniquePrinters","getLocationDisplay","handleProductClick","handlePriceClick","handleSavePrice","selectedClientId","price","handleAssignPrinter","handleTransferPrinter","handleShowAssignmentDetails","DesktopPrinterCard","Tooltip","TooltipTrigger","AlertTriangle","TooltipContent","Gear","group","MobilePrinterCard","Search","AdminEditProductModal","useClientProducts","clientPricing","pricingError","assignmentError","productPrintersMap","productDepartmentsMap","departmentLocation","printerInfo","departmentInfo","pp","supportedPrinters","printerStr","departmentsSupplied","deptStr","normalizeSku","sku","ceMatch","patterns","normalizedSku","temp","groupProductsBySku","skuGroupsMap","deptWithLocation","filterProducts","statusFilter","priceTypeFilter","matchesSearch","matchesStatus","matchesPriceType","AdminDashboardClientProducts","setStatusFilter","setPriceTypeFilter","clientProducts","filteredProducts","skuGroups","handleEditProduct","productGroup","clientProduct","handleProductUpdated","ProductCard","EditClientModal","user","newEmail","setNewEmail","emailLoading","setEmailLoading","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","pwError","setPwError","pwSuccess","setPwSuccess","handleEmailChange","handlePasswordChange","signInError","useClientDetail","activeTab","setActiveTab","isDepartmentDetailsView","setIsDepartmentDetailsView","foundClient","handleClientUpdated","updatedClient","getClientCounts","departmentCount","locationCount","printerCount","locSum","ClientServiceCard","compatibleProducts","setCompatibleProducts","loadingProducts","setLoadingProducts","isCollapsed","setIsCollapsed","handleCardClick","collapsible","_g","_h","_j","_i","_l","_k","ServicePrinters","printers","setPrinters","fetchPrinters","visRows","visError","printerIds","row","printersError","ClientSupport","useDebounce","delay","timeoutRef","useRef","usePrinterSearch","onFilteredDataChange","performSearch","page","printersWithProducts","err","debouncedPerformSearch","PrinterSelectionModal","onPrinterSelected","selectedPrinterId","setSelectedPrinterId","matchesPrinter","matchesToner","handleSelect","selectedPrinter","getAssignmentStatus","assignmentStatus","isSelected","AssignPrinterToClientModal","printerName","onAssignmentCreated","preSelectedClientId","clients","setClients","printerDetails","setPrinterDetails","contractFile","setContractFile","accountabilityFile","setAccountabilityFile","showNewDepartmentInput","setShowNewDepartmentInput","newDepartmentName","setNewDepartmentName","creatingDepartment","setCreatingDepartment","availableAssignments","setAvailableAssignments","setDepartmentLocationOptions","deptsLoading","setDeptsLoading","loadClients","loadPrinterDetails","loadAvailableAssignments","today","clientsData","handleCreateNewDepartment","locError","updatedOptions","handleFileUpload","file","X","Building","Calendar","DollarSign","Shield","Switch","checked","Upload","Check","AddCompanyPrinterModal","onPrinterAdded","setPrinterName","printerSuggestions","setPrinterSuggestions","setSerialNumber","setDepartments","selectedLocation","setSelectedLocation","searching","setSearching","isCompanyOwned","setIsCompanyOwned","cancelled","printerService","handleDeptLocChange","assignmentData","EnhancedSearchInput","onSearchChange","placeholder","onDepartmentSelect","onFocus","onBlur","isFocused","setIsFocused","showDepartments","setShowDepartments","hasValidCharacters","handleFocus","handleBlur","handleInputChange","handleDepartmentClick","ClientDashboardSearch","onClientUpdated","showProductDetails","setShowProductDetails","showAddPrinter","setShowAddPrinter","showPrinterSelection","setShowPrinterSelection","showAssignToClient","setShowAssignToClient","setSelectedPrinter","isSearchFieldActive","setIsSearchFieldActive","hasClearedSearch","setHasClearedSearch","showAddPurchase","setShowAddPurchase","showPlaceholderModal","setShowPlaceholderModal","pendingDepartmentScroll","setPendingDepartmentScroll","showAddCompanyPrinter","setShowAddCompanyPrinter","useLocation","navigate","useNavigate","useParams","printerIdsFromProducts","productPrinters","printerOrClause","printerIdsFromSearch","departmentIds","locationIdsFromDepartments","deptLocations","locationIdsFromName","allLocationIds","allPrinterIds","assignmentOrClauses","orClause","handleCloseProductDetails","handlePrinterSelected","handleAssignmentComplete","handleAddPrinter","handleAddCompanyPrinter","handleSearchFieldFocus","handleSearchFieldBlur","ArrowLeft","ShoppingCart","label","Icon","AddButtonNavigation","ProductDetailsModal","AddPrinterModal","AddPurchaseModal","useRoleBasedNavigation","signOut","showClientSettingsModal","setShowClientSettingsModal","showRestrictedModal","setShowRestrictedModal","userRole","AdminClientDetail","clientLoading","clientError","handleBackButtonClick","handleClientSettings","handleClientLogout","handleRestrictedModalClose","typedActiveTab","typedSetActiveTab","assignmentsLoading","activeAssignments","inactiveAssignments","total","history","printerHistory","maintenanceHistory","availablePrintersCount","count","showServicePrinters","setShowServicePrinters","setFilteredPrinters","deleting","setDeleting","showDeleteWarning","setShowDeleteWarning","showDeleteConfirm","setShowDeleteConfirm","deleteErrorMsg","setDeleteErrorMsg","refreshClientData","useRefreshFunctions","handleDeleteClient","departmentsError","handleConfirmDelete","deleteError","ERROR_MESSAGES","renderTabContent","ErrorBoundary","Settings","Loader2","PullToRefresh","Monitor","RestrictedAccessModal"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,12,14,15,16]}